{"version":3,"sources":["components/Workspace/Toolbar.tsx","components/Workspace.tsx","hooks/useResizeObserver.ts","hooks/useMemoAsync.ts","hooks/useStablized.ts","App.tsx","index.tsx"],"names":["toolbarTheme","components","MuiButton","styleOverrides","root","aspectRatio","palette","text","primary","Toolbar","paging","zoom","useState","pageNumber","toString","rawPageNumber","setRawPageNumber","useEffect","ThemeProvider","theme","deepmerge","Stack","alignItems","direction","spacing","sx","bgcolor","color","px","py","ButtonGroup","minWidth","Button","onClick","onPrevPage","TextField","onBlur","rawPageNumberNum","parseInt","isNaN","onSetPage","onChange","ev","currentTarget","value","maxWidth","p","textAlign","borderColor","main","borderRight","opacity","borderRadius","variant","onNextPage","totalPages","onFitPage","title","onFitWidth","onZoomOut","onZoomIn","Workspace","setPageNumber","setZoom","el","setEl","ref","useCallback","node","undefined","getBoundingClientRect","rect","setRect","observer","ResizeObserver","observe","disconnect","useResizeObserver","pagesContainerRef","workspaceDimensions","pdf","setPdf","f","deps","completed","result","setResult","isValid","a","error","useMemoAsync","Promise","all","length","numPages","Array","from","_","i","map","n","getPage","pdfPages","pageSizing","useMemo","margin","Math","min","width","height","maxHeight","max","view","usableHeight","fitWidthScale","fitPageScale","container","virtuosoRef","useRef","virtuosoScrollerRef","setVirtuosoScrollerRef","activePageRange","setActivePageRange","defaultValue","waitFor","unstableValue","setUnstableValue","stableValue","setStableValue","delay","timer","setTimeout","clearTimeout","useStabilized","isScrolling","isScrollAnimating","setIsScrollAnimating","doSetPageNumber","scrollTo","current","scrollToIndex","behavior","index","doNextPage","doPrevPage","resolveScrolledPageNumber","scrollTop","page","offset","size","onScroll","addEventListener","removeEventListener","justifyContent","z","Box","id","flexGrow","file","onLoadSuccess","increaseViewportBy","bottom","top","itemContent","transform","display","onRenderSuccess","window","dispatchEvent","Event","itemsRendered","range","scrollerRef","totalCount","createTheme","mode","App","GlobalStyles","styles","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4a466f4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport {\n  ButtonGroup,\n  Stack,\n  TextField,\n  Button,\n  ThemeOptions,\n  ThemeProvider,\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport {\n  ChevronLeft,\n  ChevronRight,\n  MagnifyMinusOutline,\n  MagnifyPlusOutline,\n  ViewArrayOutline,\n  ViewDayOutline,\n} from 'mdi-material-ui';\n\nexport type ToolbarProps = {\n  zoom: {\n    onFitPage: () => void;\n    onFitWidth: () => void;\n    onZoomIn: () => void;\n    onZoomOut: () => void;\n  };\n  paging: {\n    onNextPage: () => void;\n    onPrevPage: () => void;\n    onSetPage: (pageNumber: number) => void;\n    pageNumber: number;\n    totalPages: number;\n  };\n};\n\nconst toolbarTheme: ThemeOptions = {\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          aspectRatio: '1',\n        },\n      },\n    },\n  },\n  palette: {\n    text: {\n      primary: '#eee',\n    },\n  },\n};\n\nexport const Toolbar: React.FC<ToolbarProps> = ({ paging, zoom }) => {\n  const [rawPageNumber, setRawPageNumber] = useState(\n    paging.pageNumber.toString() ?? '',\n  );\n\n  useEffect(() => {\n    setRawPageNumber(paging.pageNumber.toString() ?? '');\n  }, [paging.pageNumber]);\n\n  return (\n    <ThemeProvider theme={theme => deepmerge(theme, toolbarTheme)}>\n      <Stack\n        alignItems=\"stretch\"\n        direction=\"row\"\n        spacing={2}\n        sx={{\n          bgcolor: 'background.default',\n          color: 'text.primary',\n        }}\n      >\n        <Stack alignItems=\"center\" direction=\"row\" px={1} py={0} spacing={1}>\n          <Box>Page</Box>\n          <ButtonGroup\n            sx={{\n              '& .MuiButtonGroup-grouped': {\n                minWidth: 0,\n                px: 0,\n              },\n            }}\n          >\n            <Button onClick={() => paging.onPrevPage()}>\n              <ChevronLeft />\n            </Button>\n            <TextField\n              onBlur={() => {\n                const rawPageNumberNum = parseInt(rawPageNumber);\n                // TODO: validation with formik\n                if (!isNaN(rawPageNumberNum)) {\n                  paging.onSetPage(rawPageNumberNum);\n                }\n              }}\n              onChange={ev => setRawPageNumber(ev.currentTarget.value)}\n              sx={theme => ({\n                '& .MuiOutlinedInput-input.MuiInputBase-input': {\n                  maxWidth: '2rem',\n                  p: 1,\n                  textAlign: 'center',\n                },\n                '& .MuiOutlinedInput-notchedOutline': {\n                  borderColor: theme.palette.primary.main,\n                  borderRight: 'none',\n                  opacity: 0.5,\n                },\n                '& .MuiOutlinedInput-root': {\n                  borderRadius: 0,\n                },\n              })}\n              value={rawPageNumber}\n              variant=\"outlined\"\n            />\n            <Button onClick={() => paging.onNextPage()}>\n              <ChevronRight />\n            </Button>\n          </ButtonGroup>\n          <Box>of {paging.totalPages}</Box>\n        </Stack>\n        <Stack alignItems=\"stretch\" direction=\"row\">\n          <Button onClick={() => zoom.onFitPage()} title=\"Fit page\">\n            <ViewDayOutline />\n          </Button>\n          <Button onClick={() => zoom.onFitWidth()} title=\"Fit width\">\n            <ViewArrayOutline />\n          </Button>\n          <Button onClick={() => zoom.onZoomOut()} title=\"Zoom in\">\n            <MagnifyMinusOutline />\n          </Button>\n          <Button onClick={() => zoom.onZoomIn()} title=\"Zoom out\">\n            <MagnifyPlusOutline />\n          </Button>\n        </Stack>\n      </Stack>\n    </ThemeProvider>\n  );\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\n\nimport { Box, Stack } from '@mui/material';\nimport { PDFDocumentProxy } from 'pdfjs-dist/types/display/api';\nimport { Document, Page } from 'react-pdf/dist/umd/entry.webpack';\nimport { RecordItem, Virtuoso, VirtuosoHandle } from 'react-virtuoso';\n\nimport { useMemoAsync } from '../hooks/useMemoAsync';\nimport { useResizeObserver } from '../hooks/useResizeObserver';\nimport { useStabilized } from '../hooks/useStablized';\nimport { Toolbar } from './Workspace/Toolbar';\n\nconst pageMarginPct = 0.05;\n\nexport const Workspace: React.FC = () => {\n  /** Toolbar */\n\n  const [pageNumber, setPageNumber] = useState(1);\n  const [zoom, setZoom] = useState<number>(1);\n\n  /** React PDF */\n  const [pagesContainerRef, workspaceDimensions] = useResizeObserver();\n\n  // Gets set after the PDF is downloaded and parsed by react-pdf (but before\n  // rendering the pages)\n  const [pdf, setPdf] = useState<PDFDocumentProxy>();\n\n  // Gets set after we've fetched all the widths/heights of the pages\n  const { value: pdfPages } = useMemoAsync(async () => {\n    return pdf !== undefined\n      ? await Promise.all(\n          pageNumberArray(pdf.numPages).map(n => pdf.getPage(n)),\n        )\n      : undefined;\n  }, [pdf]);\n\n  const pageSizing = useMemo(() => {\n    if (pdfPages !== undefined && workspaceDimensions !== undefined) {\n      const margin = Math.min(\n        workspaceDimensions.width * pageMarginPct,\n        workspaceDimensions.height * pageMarginPct,\n      );\n      const maxHeight = Math.max(...pdfPages.map(p => p.view[3]));\n      const maxWidth = Math.max(...pdfPages.map(p => p.view[2]));\n      const usableHeight = workspaceDimensions.height - margin;\n      const usableWidth = workspaceDimensions.width - 2 * margin;\n\n      const fitWidthScale = usableWidth / maxWidth;\n      const fitPageScale = Math.min(usableHeight / maxHeight, fitWidthScale);\n\n      const result = {\n        container: pdfPages.map(p => ({\n          // The height in pixels of this page container, adjusted for scale and margin\n          height: p.view[3] * fitPageScale + margin,\n          // The width in pixels of this page container, adjusted for scale and margin\n          width: p.view[2] * fitPageScale + 2 * margin,\n        })),\n        fitPageScale,\n        fitWidthScale,\n      };\n\n      return result;\n    }\n  }, [pdfPages, workspaceDimensions]);\n\n  /** Virtuoso */\n\n  const virtuosoRef = useRef<VirtuosoHandle>(null);\n  const [virtuosoScrollerRef, setVirtuosoScrollerRef] = useState<HTMLElement>();\n  const [activePageRange, setActivePageRange] = useState<\n    RecordItem<undefined>[] | undefined\n  >(undefined);\n\n  const [isScrollAnimating, setIsScrollAnimating] = useStabilized(\n    false,\n    isScrolling => (isScrolling ? undefined : 500),\n  );\n\n  const doSetPageNumber = useCallback(\n    (\n      pageNumber: number,\n      { scrollTo }: { scrollTo?: 'auto' | 'smooth' } = {},\n    ) => {\n      const n = Math.max(1, Math.min(pdf?.numPages ?? 1, pageNumber));\n      setPageNumber(n);\n      if (scrollTo !== undefined) {\n        if (scrollTo === 'smooth') {\n          setIsScrollAnimating(true);\n        }\n        virtuosoRef.current?.scrollToIndex({\n          behavior: scrollTo,\n          index: n - 1,\n        });\n      }\n    },\n    [pdf, setIsScrollAnimating, virtuosoRef],\n  );\n  const doNextPage = useCallback(\n    () => doSetPageNumber(pageNumber + 1, { scrollTo: 'smooth' }),\n    [doSetPageNumber, pageNumber],\n  );\n  const doPrevPage = useCallback(\n    () => doSetPageNumber(pageNumber - 1, { scrollTo: 'smooth' }),\n    [doSetPageNumber, pageNumber],\n  );\n\n  const resolveScrolledPageNumber = useCallback(\n    (scrollTop: number) => {\n      if (activePageRange !== undefined) {\n        for (const page of activePageRange) {\n          if (scrollTop >= page.offset && scrollTop < page.offset + page.size) {\n            setPageNumber(page.index + 1);\n          }\n        }\n      }\n    },\n    [activePageRange],\n  );\n  useEffect(() => {\n    if (virtuosoScrollerRef !== undefined && !isScrollAnimating) {\n      resolveScrolledPageNumber(virtuosoScrollerRef.scrollTop);\n      function onScroll() {\n        if (virtuosoScrollerRef !== undefined && !isScrollAnimating) {\n          resolveScrolledPageNumber(virtuosoScrollerRef.scrollTop);\n        }\n      }\n      virtuosoScrollerRef.addEventListener('scroll', onScroll);\n      return () => virtuosoScrollerRef.removeEventListener('scroll', onScroll);\n    }\n  }, [isScrollAnimating, resolveScrolledPageNumber, virtuosoScrollerRef]);\n\n  return (\n    <Stack sx={{ height: '100%', justifyContent: 'stretch', width: '100%' }}>\n      <Toolbar\n        paging={{\n          onNextPage: doNextPage,\n          onPrevPage: doPrevPage,\n          onSetPage: n => doSetPageNumber(n, { scrollTo: 'auto' }),\n          pageNumber,\n          totalPages: pdf?.numPages ?? 0,\n        }}\n        zoom={{\n          onFitPage: () => setZoom(1),\n          onFitWidth: () =>\n            pageSizing !== undefined\n              ? setZoom(pageSizing.fitWidthScale / pageSizing.fitPageScale)\n              : undefined,\n          onZoomIn: () => setZoom(z => z + 0.1),\n          onZoomOut: () => setZoom(z => Math.max(0.15, z - 0.1)),\n        }}\n      />\n      <Box\n        ref={pagesContainerRef}\n        id=\"pages-container\"\n        sx={{\n          '& .react-pdf__Document': {\n            height: '100%',\n            width: '100%',\n          },\n          bgcolor: 'grey.800',\n          flexGrow: 1,\n        }}\n      >\n        <Document\n          file=\"/embdr/pages.pdf\"\n          onLoadSuccess={pdf => setPdf(pdf as unknown as PDFDocumentProxy)}\n        >\n          {pdf !== undefined &&\n          workspaceDimensions !== undefined &&\n          pageSizing !== undefined ? (\n            <Virtuoso\n              ref={virtuosoRef}\n              increaseViewportBy={{\n                bottom: workspaceDimensions.height * 5,\n                top: workspaceDimensions.height * 5,\n              }}\n              isScrolling={isScrolling => {\n                if (!isScrolling) {\n                  setIsScrollAnimating(false);\n                }\n              }}\n              itemContent={i => (\n                <Box\n                  sx={{\n                    '& .react-pdf__Page': {\n                      transform: `scale(${zoom * pageSizing.fitPageScale})`,\n                    },\n                    alignItems: 'center',\n                    display: 'flex',\n                    height: `${pageSizing.container[i].height * zoom}px`,\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Page\n                    onRenderSuccess={() =>\n                      window.dispatchEvent(new Event('resize'))\n                    }\n                    pageNumber={i + 1}\n                  />\n                </Box>\n              )}\n              itemsRendered={range =>\n                setActivePageRange(range as unknown as RecordItem<undefined>[])\n              }\n              scrollerRef={ref =>\n                setVirtuosoScrollerRef(\n                  (ref ?? undefined) as unknown as HTMLElement | undefined,\n                )\n              }\n              totalCount={pdf.numPages}\n            />\n          ) : undefined}\n        </Document>\n      </Box>\n    </Stack>\n  );\n};\n\nfunction pageNumberArray(length: number) {\n  return Array.from({ length }, (_, i) => i + 1);\n}\n","import { useCallback, useEffect, useState } from 'react';\n\nexport function useResizeObserver(): [\n  (node: Element | null | undefined) => void,\n  DOMRect | undefined,\n] {\n  const [el, setEl] = useState<Element>();\n  const ref = useCallback(\n    (node: Element | null | undefined) =>\n      node === null ? setEl(undefined) : setEl(node),\n    [],\n  );\n\n  const [rect, setRect] = useState(el?.getBoundingClientRect());\n  useEffect(() => {\n    if (el !== null && el !== undefined) {\n      const observer = new ResizeObserver(() =>\n        setRect(el.getBoundingClientRect()),\n      );\n      observer.observe(el);\n      return () => observer.disconnect();\n    }\n  }, [el]);\n\n  return [ref, rect];\n}\n","import { useEffect, useState } from 'react';\n\nexport type MemoAsync<V, E> = {\n  completed: boolean;\n  error?: E;\n  value?: V;\n};\n\nexport function useMemoAsync<V, E = Error | unknown>(\n  f: () => Promise<V>,\n  deps: unknown[],\n): MemoAsync<V, E> {\n  const [result, setResult] = useState<MemoAsync<V, E>>({ completed: false });\n\n  useEffect(() => {\n    let isValid = true;\n    void (async () => {\n      try {\n        const value = await f();\n        if (isValid) {\n          setResult({ completed: true, value });\n        }\n      } catch (e) {\n        if (isValid) {\n          setResult({ completed: true, error: e as E });\n        }\n      }\n    })();\n    return () => {\n      isValid = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  return result;\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\n/**\n * Works just like useState except it debounces for jittery values where you\n * want to wait a certain amount of time before you accept a value as changed.\n */\nexport function useStabilized<V>(\n  defaultValue: V,\n  waitFor: (value: V) => number | undefined,\n): [V, Dispatch<SetStateAction<V>>] {\n  const [unstableValue, setUnstableValue] = useState(defaultValue);\n  const [stableValue, setStableValue] = useState(defaultValue);\n\n  useEffect(() => {\n    const delay = waitFor(unstableValue);\n    const timer = setTimeout(() => setStableValue(unstableValue), delay);\n    return () => clearTimeout(timer);\n  }, [waitFor, unstableValue]);\n\n  return [stableValue, setUnstableValue];\n}\n","import React from 'react';\n\nimport { createTheme, GlobalStyles, ThemeProvider } from '@mui/material';\n\nimport { Workspace } from './components/Workspace';\n\nconst theme = createTheme({ palette: { mode: 'dark' } });\n\nexport const App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles\n        styles={{\n          'html, body, #root': {\n            height: '100%',\n            width: '100%',\n          },\n        }}\n      />\n      <Workspace />\n    </ThemeProvider>\n  );\n};\n","import React from 'react';\n\nimport { render } from 'react-dom';\n\nimport { App } from './App';\n\nimport './vendorSetup';\nimport './index.css';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}