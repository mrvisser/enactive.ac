{"version":3,"file":"static/js/9551.64ac6e83.chunk.js","mappings":"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","sources":["hooks/useObservable.ts","services/ManagementService.ts","components/AccountDropdown.tsx","validation/yup.ts","components/Button.tsx","components/DialogDrawer.tsx","components/Flex.tsx","components/EditThemeDrawer.tsx","components/CodeBlock.tsx","components/InstallationScreen.tsx","components/FeatureContainer.tsx","components/SignInScreen/CodeForm.tsx","components/SignInScreen/EmailForm.tsx","components/SignInScreen.tsx","platforms/ultra.ts","platforms/index.ts","util/HtmlUtil.ts","components/ConditionsSearchField.tsx","components/ConditionsField.tsx","components/EditorWrapper.tsx","components/FirstAction.tsx","components/EditTourDrawer.tsx","components/FileImportButton.tsx","components/ToursScreen.tsx","components/AppRoot.tsx","app/Standalone.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { Observable } from 'rxjs';\n\nexport type ObserverFunction<T> = () => Observable<T> | undefined;\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n): [T | undefined];\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue: T,\n): [T];\n\n/**\n * A custom hook that exposes an observable as its latest emitted value.\n *\n * @param observableGenerator A factory function for the observable\n * @param deps The dependency array. When any of these dependencies changes, the observable will\n *   be regenerated.\n * @param initialValue The initial value of the observable value, before it emits its first value.\n *   When the dependency array changes, the value will not revert to the initial value.\n * @returns\n */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue?: T,\n): [typeof initialValue] {\n  const [value, setValue] = useState<T | typeof initialValue>(initialValue);\n  const cb = useCallback(observableGenerator, deps);\n\n  /** When the callback changes, reinvoke it and subscribe to the new observable. */\n  useEffect(() => {\n    const o = cb();\n    if (o !== undefined) {\n      const sub = o.subscribe(setValue);\n      return () => sub.unsubscribe();\n    }\n  }, [cb]);\n\n  return [value];\n}\n","import type { Account } from '@enactive-ac/api/src/domain/Account';\nimport {\n  CreateTourRequest,\n  CreateTourResponse,\n} from '@enactive-ac/api/src/domain/CreateTour';\nimport type { GetMeResponse } from '@enactive-ac/api/src/domain/GetMe';\nimport type { ListSitesResponse } from '@enactive-ac/api/src/domain/ListSites';\nimport type { ListToursResponse } from '@enactive-ac/api/src/domain/ListTours';\nimport type { LoginResponse } from '@enactive-ac/api/src/domain/Login';\nimport type { Me } from '@enactive-ac/api/src/domain/Me';\nimport type {\n  SignupRequest,\n  SignupResponse,\n} from '@enactive-ac/api/src/domain/Signup';\nimport type { Site } from '@enactive-ac/api/src/domain/Site';\nimport type { Tour } from '@enactive-ac/api/src/domain/Tour';\nimport type {\n  UpdateSiteRequest,\n  UpdateSiteResponse,\n} from '@enactive-ac/api/src/domain/UpdateSite';\nimport axiosStatic, { AxiosInstance } from 'axios';\nimport { BehaviorSubject } from 'rxjs';\n\nexport class ManagementService {\n  private readonly me$$ = new BehaviorSubject<Me | null | undefined>(undefined);\n  private readonly sites$$ = new BehaviorSubject<Site[] | undefined>(undefined);\n  private readonly tours$$ = new BehaviorSubject<Tour[] | undefined>(undefined);\n\n  public readonly me$ = this.me$$.asObservable();\n  public readonly sites$ = this.sites$$.asObservable();\n  public readonly tours$ = this.tours$$.asObservable();\n\n  constructor(\n    private readonly axios: AxiosInstance = axiosStatic.create({\n      baseURL: `${\n        new URLSearchParams(window.location.search.slice(1)).get('_devHost') ??\n        `https://api.${window.location.hostname.replace('www.', '')}`\n      }/api/`,\n      withCredentials: true,\n    }),\n  ) {}\n\n  public async init(): Promise<void> {\n    const before = this.me$$.value;\n    const after = await this.getMe().catch(() => null);\n    if (before?.id !== after?.id) {\n      if (after === null) {\n        this.sites$$.next(undefined);\n      } else {\n        await this.loadSites();\n      }\n    }\n    this.me$$.next(after);\n  }\n\n  public async getMe(): Promise<Me> {\n    return (await this.axios.get<GetMeResponse>('management/me')).data.me;\n  }\n\n  public async signUp(email: string): Promise<Account> {\n    const req: SignupRequest = {\n      account: {\n        email,\n        id: '',\n      },\n    };\n    const response = await this.axios.post<SignupResponse>(\n      'management/signup',\n      req,\n    );\n\n    this.me$$.next({\n      displayName: response.data.account.email,\n      id: response.data.account.id,\n      isExternal: false,\n    });\n    return response.data.account;\n  }\n\n  public async login(accountId: string, code: string): Promise<Account> {\n    const response = await this.axios.post<LoginResponse>('management/login', {\n      code,\n      id: accountId,\n    });\n    this.me$$.next(await this.getMe());\n    await this.loadSites();\n    return response.data.account;\n  }\n\n  public async logout(): Promise<void> {\n    await this.axios.post<Account>('management/logout');\n    this.tours$$.next(undefined);\n    this.sites$$.next(undefined);\n    this.me$$.next(undefined);\n    window.location.reload();\n  }\n\n  public async updateSite(\n    siteId: string,\n    req: UpdateSiteRequest,\n  ): Promise<Site> {\n    const response = await this.axios.put<UpdateSiteResponse>(\n      `management/sites/${siteId}`,\n      req,\n    );\n    this.sites$$.next(\n      this.sites$$.value?.map(s => (s.id === siteId ? response.data.site : s)),\n    );\n    return response.data.site;\n  }\n\n  public async loadTours(siteId: string): Promise<Tour[]> {\n    const response = await this.axios.get<ListToursResponse>(\n      `management/sites/${siteId}/tours`,\n    );\n\n    this.tours$$.next(response.data.tours);\n    return response.data.tours;\n  }\n\n  public async createTour(\n    siteId: string,\n    req: CreateTourRequest,\n  ): Promise<Tour> {\n    const response = await this.axios.post<CreateTourResponse>(\n      `management/sites/${siteId}/tours`,\n      req,\n    );\n    const tour = response.data.tour;\n    const tours = this.tours$$.value;\n    this.tours$$.next(tours === undefined ? [tour] : tours.concat([tour]));\n    return tour;\n  }\n\n  public async updateTour(\n    siteId: string,\n    tourId: string,\n    req: CreateTourRequest,\n  ): Promise<Tour> {\n    const response = await this.axios.put<CreateTourResponse>(\n      `management/sites/${siteId}/tours/${tourId}`,\n      req,\n    );\n    const tour = response.data.tour;\n    const tours = this.tours$$.value;\n    this.tours$$.next(\n      tours === undefined\n        ? [tour]\n        : tours.map(t => (t.id === tour.id ? tour : t)),\n    );\n    return tour;\n  }\n\n  public async deleteTour(siteId: string, tourId: string): Promise<void> {\n    const response = await this.axios.delete(\n      `management/sites/${siteId}/tours/${tourId}`,\n    );\n    if (response.status < 300) {\n      this.tours$$.next(this.tours$$.value?.filter(t => t.id !== tourId));\n    }\n  }\n\n  private async loadSites(): Promise<Site[]> {\n    const response = await this.axios.get<ListSitesResponse>(\n      'management/sites',\n    );\n    this.sites$$.next(response.data.sites);\n    return response.data.sites;\n  }\n}\n","import React, { useRef, useState } from 'react';\n\nimport type { Me } from '@enactive-ac/api/src/domain/Me';\nimport {\n  Button,\n  ButtonProps,\n  ClickAwayListener,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n} from '@mui/material';\n\nexport type AccountDropdownButtonProps = {\n  me: Me;\n  buttonProps?: Omit<ButtonProps, 'children' | 'ref'>;\n  onSignOut: () => void;\n};\n\nexport const AccountDropdown: React.FC<AccountDropdownButtonProps> = ({\n  me,\n  buttonProps,\n  onSignOut,\n}) => {\n  const anchorEl = useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <Button\n        color=\"inherit\"\n        {...buttonProps}\n        ref={anchorEl}\n        onClick={ev => {\n          setOpen(true);\n          buttonProps?.onClick?.(ev);\n        }}\n      >\n        {me.displayName}\n      </Button>\n      <Popper anchorEl={anchorEl.current} disablePortal open={open}>\n        <Paper>\n          <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <MenuList>\n              <MenuItem>\n                <Button onClick={() => onSignOut()}>Sign Out</Button>\n              </MenuItem>\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </>\n  );\n};\n","import jp from 'jsonpath';\nimport * as yup from 'yup';\n\ntype ValidNonEmptyHtmlOpts = {\n  empty?: string;\n  invalid?: (err: Error | undefined) => string;\n};\n\nyup.addMethod(yup.string, 'validRegex', function () {\n  return this.test('test-valid-regex', function (value) {\n    if (value !== undefined) {\n      const { path, createError } = this;\n\n      try {\n        new RegExp(value);\n        return true;\n      } catch (err) {\n        if (err instanceof Error) {\n          return createError({ message: err.message, path });\n        } else {\n          return createError({ message: err as string, path });\n        }\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validCssSelector', function () {\n  return this.test('test-valid-css-selector', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        document.querySelector(value);\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid CSS selector', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validJsonPathFilter', function () {\n  return this.test('test-valid-jsonp-path-filter', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        jp.query([], `$[?(${value})]`);\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid JSON Path filter', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validXpathSelector', function () {\n  return this.test('test-valid-xpath-selector', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        document.evaluate(\n          value,\n          document,\n          null,\n          XPathResult.FIRST_ORDERED_NODE_TYPE,\n          null,\n        );\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid XPath selector', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(\n  yup.string,\n  'validNonEmptyHtml',\n  function ({\n    empty = 'Please enter some text',\n    invalid = (err: Error | undefined) =>\n      `Invalid HTML${err !== undefined ? `: ${err.message}` : ''}`,\n  }: ValidNonEmptyHtmlOpts = {}) {\n    return this.test('test-valid-non-empty-html', function (value) {\n      const { path, createError } = this;\n      if (value !== undefined) {\n        try {\n          const parser = new DOMParser();\n          const text =\n            parser\n              .parseFromString(value, 'text/html')\n              ?.body.textContent?.trim() ?? '';\n          if (text !== '') {\n            return true;\n          } else {\n            return createError({ message: empty, path });\n          }\n        } catch (err) {\n          return createError({\n            message: invalid(err instanceof Error ? err : undefined),\n            path,\n          });\n        }\n      } else {\n        return createError({ message: empty, path });\n      }\n    });\n  },\n);\n\ndeclare module 'yup' {\n  interface StringSchema {\n    validCssSelector(): this;\n    validJsonPathFilter(): this;\n    validNonEmptyHtml(opts?: ValidNonEmptyHtmlOpts): this;\n    validRegex(): this;\n    validXpathSelector(): this;\n  }\n}\n\nexport default yup;\n","import React, { useMemo } from 'react';\n\nimport { ButtonProps, Button as MuiButton } from '@mui/material';\n\nexport const Button: React.FC<ButtonProps> = ({\n  disabled = false,\n  key,\n  ...buttonProps\n}) => {\n  const k = useMemo(() => {\n    // Workaround: https://github.com/mui-org/material-ui/issues/26251\n    if ((key === undefined || key === null) && !disabled) {\n      return undefined;\n    } else if (key === undefined || key === null) {\n      return 'disabled';\n    } else if (!disabled) {\n      return key;\n    } else {\n      return `${key}-disabled`;\n    }\n  }, [disabled, key]);\n  return <MuiButton {...buttonProps} key={k} disabled={disabled} />;\n};\n","import React, { ReactElement, ReactNode } from 'react';\n\nimport { Close as CloseIcon } from '@mui/icons-material';\nimport {\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Drawer,\n  IconButton,\n  styled,\n  Typography,\n} from '@mui/material';\n\nexport type DialogDrawerProps = {\n  actions: ReactElement;\n  children: ReactNode;\n  onClose?: () => void;\n  onExited?: () => void;\n  open: boolean;\n  title: ReactNode;\n  width?: string | number;\n};\n\nconst DDTitle = styled(DialogTitle)(({ theme }) => ({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: theme.spacing(4),\n}));\n\nconst DDContent = styled(DialogContent)({\n  padding: '3em',\n});\n\nconst DDActions = styled(DialogActions)(({ theme }) => ({\n  backgroundColor: theme.palette.grey['50'],\n  borderTop: `solid 1px`,\n  borderTopColor: theme.palette.grey['200'],\n  padding: theme.spacing(4),\n}));\n\nexport const DialogDrawer: React.FC<DialogDrawerProps> = ({\n  actions,\n  children,\n  onClose,\n  onExited,\n  open,\n  title,\n  width = '35rem',\n}) => {\n  return (\n    <Drawer\n      SlideProps={{ onExited }}\n      anchor=\"right\"\n      disableEnforceFocus\n      onClose={onClose}\n      open={open}\n    >\n      <DDTitle>\n        <Typography component=\"span\" style={{ flexGrow: 1 }} variant=\"h5\">\n          {title}\n        </Typography>\n        {onClose !== undefined ? (\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : undefined}\n      </DDTitle>\n      <DDContent sx={{ width }}>{children}</DDContent>\n      <DDActions>{actions}</DDActions>\n    </Drawer>\n  );\n};\n","import React from 'react';\n\nimport { Box, BoxProps } from '@mui/material';\n\nexport type FlexProps = BoxProps & {\n  col?: boolean;\n};\n\nexport const Flex: React.FC<FlexProps> = ({\n  alignItems = 'center',\n  col = false,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      {...boxProps}\n      alignItems={alignItems}\n      sx={{\n        ...boxProps.sx,\n        display: 'flex',\n        flexDirection: col ? 'column' : 'row',\n      }}\n    />\n  );\n};\n\nexport type FlexItemProps = BoxProps & {\n  grow?: boolean;\n};\n\nexport const FlexItem: React.FC<FlexItemProps> = ({\n  grow = false,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      {...boxProps}\n      sx={{\n        ...boxProps.sx,\n        flexGrow: grow ? 1 : undefined,\n      }}\n    />\n  );\n};\n","import React, { useRef } from 'react';\n\nimport type { Site } from '@enactive-ac/api/src/domain/Site';\nimport type { SiteTheme } from '@enactive-ac/api/src/domain/SiteTheme';\nimport { Box, TextFieldProps, useTheme } from '@mui/material';\nimport { Field, Form, Formik, FormikProps } from 'formik';\nimport { TextField } from 'formik-mui';\nimport { SchemaOf } from 'yup';\n\nimport { ManagementService } from '../services/ManagementService';\nimport yup from '../validation/yup';\nimport { Button } from './Button';\nimport { DialogDrawer } from './DialogDrawer';\nimport { Flex } from './Flex';\n\nexport type ThemeScreenProps = {\n  managementService: ManagementService;\n  onClose: () => void;\n  onExited: () => void;\n  onSave: (theme: SiteTheme) => void;\n  open: boolean;\n  site: Site;\n};\n\nconst themeSchema: SchemaOf<SiteTheme> = yup.object().shape({\n  primaryColor: yup\n    .string()\n    .required()\n    .matches(/^#([a-f0-9]{3}|[a-f0-9]{6})$/i, {\n      message: 'Please specify a valid hex colour (e.g., #4f4f4f)',\n    }),\n  primaryContrastText: yup\n    .string()\n    .required()\n    .matches(/^#([a-f0-9]{3}|[a-f0-9]{6})$/i, {\n      message: 'Please specify a valid hex colour (e.g., #FFF)',\n    }),\n});\n\nconst ColorPicker: React.FC<TextFieldProps & { value?: string }> = ({\n  value,\n  ...props\n}) => {\n  return (\n    <Flex>\n      <Box\n        alignSelf=\"flex-start\"\n        border=\"solid 1px #eee\"\n        borderRadius=\"0.25rem\"\n        height=\"3rem\"\n        mr={1}\n        mt={0.5}\n        sx={{ backgroundColor: value }}\n        width={'3.3rem'}\n      />\n      <Field\n        size=\"medium\"\n        variant=\"outlined\"\n        {...props}\n        component={TextField}\n      />\n    </Flex>\n  );\n};\n\nexport const EditThemeDrawer: React.FC<ThemeScreenProps> = ({\n  managementService,\n  onClose,\n  onExited,\n  onSave,\n  open,\n  site,\n}) => {\n  const theme = useTheme();\n  const formRef = useRef<FormikProps<SiteTheme>>(null);\n  return (\n    <DialogDrawer\n      actions={\n        <>\n          <Button onClick={() => onClose()} size=\"large\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => formRef.current?.submitForm()}\n            size=\"large\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </>\n      }\n      onClose={onClose}\n      onExited={onExited}\n      open={open}\n      title=\"Edit theme\"\n    >\n      <Formik\n        initialValues={\n          site.theme ?? {\n            primaryColor: '#4f4f4f',\n            primaryContrastText: '#fff',\n          }\n        }\n        innerRef={formRef}\n        onSubmit={async (siteTheme, actions) => {\n          actions.setSubmitting(true);\n          await managementService.updateSite(site.id, {\n            site: { ...site, theme: siteTheme },\n          });\n          actions.setSubmitting(false);\n          onSave(siteTheme);\n        }}\n        validationSchema={themeSchema}\n      >\n        {formik => (\n          <Form>\n            <Box my={2}>\n              <ColorPicker\n                fullWidth\n                helperText=\"Used for primary button background. This is usually your primary brand color.\"\n                label=\"Primary color\"\n                name=\"primaryColor\"\n                placeholder={theme.palette.primary.main}\n                value={formik.values.primaryColor}\n              />\n            </Box>\n            <Box my={2}>\n              <ColorPicker\n                fullWidth\n                helperText=\"Text color that is displayed on top of your primary color.\"\n                label=\"Primary contrast text\"\n                name=\"primaryContrastText\"\n                placeholder={theme.palette.primary.contrastText}\n                value={formik.values.primaryContrastText}\n              />\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </DialogDrawer>\n  );\n};\n","import { Box, BoxProps, styled } from '@mui/material';\nimport { CopyBlock, a11yLight } from 'react-code-blocks';\n\nexport type CodeBlockProps = BoxProps & {\n  code: string;\n  language: 'html' | 'javascript';\n};\n\nconst Container = styled(Box)(({ theme }) => ({\n  '& button': {\n    right: 0,\n    top: 0,\n  },\n  border: 'solid 1px #eaeafa',\n  borderRadius: theme.spacing(1),\n  padding: theme.spacing(1),\n}));\n\nexport const CodeBlock: React.FC<CodeBlockProps> = ({\n  code,\n  language,\n  ...boxProps\n}) => {\n  return (\n    <Container {...boxProps}>\n      <CopyBlock language={language} text={code} theme={a11yLight} />\n    </Container>\n  );\n};\n","import React, { PropsWithChildren } from 'react';\n\nimport { ExpandMore } from '@mui/icons-material';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Alert,\n  Badge,\n  Box,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableCellProps,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport { useParams } from 'react-router-dom';\n\nimport { CodeBlock } from './CodeBlock';\n\nconst CenteredCell = styled(TableCell)({\n  textAlign: 'center',\n});\n\nconst CodeCell: React.FC<TableCellProps> = ({ children, ...props }) => {\n  return (\n    <TableCell {...props}>\n      <code>{children}</code>\n    </TableCell>\n  );\n};\n\nconst CenteredCodeCell = styled(CodeCell)({\n  textAlign: 'center',\n});\n\nconst AttributeRow: React.FC<\n  PropsWithChildren<{\n    attrName: string;\n    attrType: string;\n    defaultValue?: string;\n    example?: string;\n    required?: boolean;\n  }>\n> = ({\n  attrName,\n  attrType,\n  children,\n  defaultValue = '',\n  example,\n  required = false,\n}) => {\n  return (\n    <TableRow>\n      <CenteredCell>\n        <Tooltip title={required ? 'Required attribute' : 'Optional attribute'}>\n          {required ? (\n            <Badge badgeContent=\"R\" color=\"error\" />\n          ) : (\n            <Badge badgeContent=\"O\" color=\"info\" />\n          )}\n        </Tooltip>\n      </CenteredCell>\n      <CodeCell>{attrName}</CodeCell>\n      <CenteredCodeCell>{attrType}</CenteredCodeCell>\n      <TableCell>{defaultValue}</TableCell>\n      <TableCell>\n        {children}\n        {example !== undefined ? (\n          <>\n            <Typography my={1} variant=\"subtitle2\">\n              Example:\n            </Typography>\n            <code>{example}</code>\n          </>\n        ) : undefined}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport const InstallationScreen: React.FC = () => {\n  const { siteId } = useParams<{ siteId: string }>();\n  return siteId !== undefined ? (\n    <Box maxWidth=\"md\" mx=\"auto\" my={2} width=\"100%\">\n      <Typography component=\"h2\" variant=\"h5\">\n        Installation\n      </Typography>\n      <p>\n        To enable Enactive Tours you must place a script into all webpages on\n        which you want tours to run. Usually you will put this in a site\n        template or use Google Tag Manager so it applies to all pages, and then\n        you can control which URL each tour runs on in the tour configuration.\n      </p>\n      <p>In its simplest form, the script looks like this:</p>\n      <CodeBlock\n        code={trimLines(`\n              |<script\n              |  defer\n              |  enactive.site-id=\"${siteId}\"\n              |  src=\"https://www.enactive.ac/integration/entrypoint.js\"\n              |></script>\n            `)}\n        language=\"html\"\n        mx=\"auto\"\n        my={2}\n      />\n      <p>\n        Please refer to the following examples for various methods of putting\n        Enactive Tours on your site.\n      </p>\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          <Typography component=\"h2\" variant=\"h6\">\n            JavaScript\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          Copy and paste the following block of HTML and JavaScript code to the\n          end of the <code>&lt;body&gt;</code> tag of your website.\n          <CodeBlock\n            code={trimLines(`\n              |<script>\n              |  const script = document.createElement('script');\n              |  script.src = 'https://www.enactive.ac/integration/entrypoint.js';\n              |  script.setAttribute('enactive.site-id', '${siteId}');\n              |\n              |  // If there is a user signed in to your website, add their User ID\n              |  script.setAttribute('enactive.context.user.id', '{the user id}');\n              |  document.body.appendChild(script);\n              |</script>\n            `)}\n            language=\"javascript\"\n            mx=\"auto\"\n            my={2}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          <Typography component=\"h2\" variant=\"h6\">\n            HTML\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box mb={1}>\n            <Alert severity=\"info\">\n              The HTML example on its own is only suitable for displaying tours\n              to anonymous users. To improve our ability to remember user\n              preferences, you must add a{' '}\n              <code>enactive.context.user.id=\"{'{the user id}'}\"</code>{' '}\n              attribute to the script tag either in server-side rendering or\n              with JavaScript.\n            </Alert>\n          </Box>\n          Copy and paste the following block of HTML code to the end of the{' '}\n          <code>&lt;body&gt;</code> tag of your website.\n          <CodeBlock\n            code={trimLines(`\n              |<script \n              |  defer\n              |  enactive.site-id=\"${siteId}\"\n              |  src=\"https://www.enactive.ac/integration/entrypoint.js\"\n              |></script>\n            `)}\n            language=\"html\"\n            mx=\"auto\"\n            my={2}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Typography component=\"h2\" mt={4} variant=\"h5\">\n        Script API\n      </Typography>\n      <p>\n        You can specify various metadata attributes on your script tag to\n        control how Enactive works. Please refer to the following list for all\n        metadata attributes that are available.\n      </p>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Attribute</TableCell>\n            <CenteredCell>Type</CenteredCell>\n            <CenteredCell>Default</CenteredCell>\n            <TableCell>Description</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <AttributeRow\n            attrName=\"enactive.site-id\"\n            attrType=\"string\"\n            example={`enactive.site-id=\"${siteId}\"`}\n            required\n          >\n            Your Enactive Site ID: <code>{siteId}</code>\n          </AttributeRow>\n          <AttributeRow\n            attrName=\"enactive.enabled\"\n            attrType=\"boolean\"\n            defaultValue=\"true\"\n            example='enactive.enabled=\"false\"'\n          >\n            If set to <code>false</code> then all functionality will be\n            deactivated.\n          </AttributeRow>\n          <AttributeRow\n            attrName=\"enactive.context.user.id\"\n            attrType=\"string\"\n            defaultValue=\"{random}\"\n            example='enactive.context.user.id=\"155987\"'\n          >\n            Specify a User ID if a user is signed in to your website. This\n            ensures that when a user \"dismisses\" a tour, they are not shown the\n            tour again when switching devices.\n          </AttributeRow>\n          <AttributeRow\n            attrName=\"enactive.context.user.locale\"\n            attrType=\"string\"\n            defaultValue=\"{derived}\"\n            example='enactive.context.user.locale=\"fr-fr\"'\n          >\n            Specify a locale if a user is signed in to your website and has\n            their own language preference. If unspecified, a preference is\n            derived from the page language and the user's browser.\n          </AttributeRow>\n        </TableBody>\n      </Table>\n    </Box>\n  ) : (\n    <></>\n  );\n};\n\nfunction trimLines(str: string, { end = /\\s+$/, start = /^\\s*\\|/g } = {}) {\n  return str\n    .trim()\n    .split('\\n')\n    .map(line => line.replace(start, '').replace(end, ''))\n    .join('\\n');\n}\n","import { Container, styled } from '@mui/material';\n\nexport const FeatureContainer = styled(Container)({\n  alignItems: 'center',\n  display: 'flex',\n  flexGrow: 1,\n  justifyContent: 'center',\n  width: '100%',\n});\n","import type { Account } from '@enactive-ac/api/src/domain/Account';\nimport { Box, ButtonGroup, styled } from '@mui/material';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-mui';\n\nimport { ManagementService } from '../../services/ManagementService';\nimport yup from '../../validation/yup';\nimport { Button } from '../Button';\n\nexport type CodeFormProps = {\n  account: Account | undefined;\n  managementService: ManagementService;\n  onCancel: () => void;\n  onSignIn?: (account: Account) => void;\n};\n\nconst codeSchema = yup.object().shape({\n  code: yup\n    .string()\n    .required('A 6-digit code is required')\n    .matches(/[0-9]{6}/, { message: 'A valid 6-digit code is required' }),\n});\n\nconst SignInButtonContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  textAlign: 'right',\n}));\n\nexport const CodeForm: React.FC<CodeFormProps> = ({\n  account,\n  managementService,\n  onCancel,\n  onSignIn = () => undefined,\n}) => {\n  return (\n    <Formik\n      initialValues={{ code: '' }}\n      onSubmit={async (values, actions) => {\n        if (account !== undefined) {\n          actions.setSubmitting(true);\n          const signInAccount = await managementService.login(\n            account.id,\n            values.code,\n          );\n          actions.setSubmitting(false);\n          onSignIn(signInAccount);\n        }\n      }}\n      validationSchema={codeSchema}\n    >\n      {formik => (\n        <Form>\n          <Field\n            component={TextField}\n            fullWidth\n            helperText=\"Check your email and copy your 6 digit sign-in code into this field.\"\n            label=\"Sign-in code\"\n            name=\"code\"\n          />\n          <SignInButtonContainer>\n            <ButtonGroup>\n              <Button onClick={onCancel} size=\"large\">\n                Cancel\n              </Button>\n              <Button\n                onClick={() => formik.submitForm()}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Sign In\n              </Button>\n            </ButtonGroup>\n          </SignInButtonContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import type { Account } from '@enactive-ac/api/src/domain/Account';\nimport { ArrowForward } from '@mui/icons-material';\nimport { Box, ButtonGroup, styled } from '@mui/material';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-mui';\n\nimport { ManagementService } from '../../services/ManagementService';\nimport yup from '../../validation/yup';\nimport { Button } from '../Button';\n\nexport type EmailFormProps = {\n  managementService: ManagementService;\n  onSignUp: (account: Account) => void;\n};\n\nconst signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .required('Email address is required')\n    .email('Invalid email address'),\n});\n\nconst SignInButtonContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  textAlign: 'right',\n}));\n\nexport const EmailForm: React.FC<EmailFormProps> = ({\n  managementService,\n  onSignUp,\n}) => {\n  return (\n    <Formik\n      initialValues={{ email: '' }}\n      onSubmit={async (values, actions) => {\n        actions.setSubmitting(true);\n        const account = await managementService.signUp(values.email);\n        actions.setSubmitting(false);\n        onSignUp(account);\n      }}\n      validationSchema={signInSchema}\n    >\n      {formik => (\n        <Form>\n          <Field\n            component={TextField}\n            fullWidth\n            helperText=\"We'll send you a sign-in code to this email address.\"\n            label=\"Email address\"\n            name=\"email\"\n          />\n          <SignInButtonContainer>\n            <ButtonGroup>\n              <Button\n                endIcon={<ArrowForward />}\n                onClick={() => formik.submitForm()}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Next\n              </Button>\n            </ButtonGroup>\n          </SignInButtonContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { useState } from 'react';\n\nimport type { Account } from '@enactive-ac/api/src/domain/Account';\nimport { Box, Slide } from '@mui/material';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { FeatureContainer } from './FeatureContainer';\nimport { CodeForm } from './SignInScreen/CodeForm';\nimport { EmailForm } from './SignInScreen/EmailForm';\n\nexport type SignInScreenProps = {\n  managementService: ManagementService;\n  onSignIn: () => void;\n};\n\nexport const SignInScreen: React.FC<SignInScreenProps> = ({\n  managementService,\n  onSignIn,\n}) => {\n  const [emailEntered, setEmailEntered] = useState(false);\n  const [signUpAccount, setSignUpAccount] = useState<Account>();\n  const [sites] = useObservable(\n    () => managementService.sites$,\n    [managementService],\n  );\n\n  return (\n    <FeatureContainer>\n      <Slide\n        direction={emailEntered ? 'right' : 'left'}\n        in={signUpAccount === undefined}\n        onEntered={() => {\n          setEmailEntered(true);\n          focusInput();\n        }}\n        unmountOnExit\n      >\n        <Box position=\"absolute\" width={1 / 4}>\n          <EmailForm\n            managementService={managementService}\n            onSignUp={setSignUpAccount}\n          />\n        </Box>\n      </Slide>\n      <Slide\n        direction={sites === undefined ? 'left' : 'right'}\n        in={signUpAccount !== undefined && sites === undefined}\n        onEntered={() => focusInput()}\n        onExited={() => {\n          if (signUpAccount !== undefined && sites !== undefined) {\n            onSignIn();\n          }\n        }}\n        unmountOnExit\n      >\n        <Box position=\"absolute\" width={1 / 4}>\n          <CodeForm\n            account={signUpAccount}\n            managementService={managementService}\n            onCancel={() => setSignUpAccount(undefined)}\n          />\n        </Box>\n      </Slide>\n    </FeatureContainer>\n  );\n};\n\nfunction focusInput(selector = 'input[name]'): void {\n  document.querySelector<HTMLInputElement>(selector)?.focus?.();\n}\n","import { Platform, PlatformCondition } from './Platform';\n\nconst ultraLabels = {\n  'course.role.instructor': {\n    label: { badge: 'User', description: 'Is instructor in course' },\n  },\n  'course.role.student': {\n    label: { badge: 'User', description: 'Is student in course' },\n  },\n  'page.id.course.calendar': {\n    label: { badge: 'Page', description: 'Course calendar' },\n  },\n  'page.id.course.engagement': {\n    label: { badge: 'Page', description: 'Course discussion' },\n  },\n  'page.id.course.grades': {\n    label: { badge: 'Page', description: 'Course gradebook' },\n  },\n  'page.id.course.outline': {\n    label: { badge: 'Page', description: 'Course outline' },\n  },\n  'page.id.stream': {\n    label: { badge: 'Page', description: 'Activity stream' },\n  },\n  'user.anonymous.false': {\n    label: { badge: 'User', description: 'Is logged in' },\n  },\n  'user.anonymous.true': {\n    label: { badge: 'User', description: 'Is not logged in' },\n  },\n  'user.role.faculty': {\n    label: { badge: 'User', description: 'Is primarily institution faculty' },\n  },\n  'user.role.student': {\n    label: { badge: 'User', description: 'Is primarily institution student' },\n  },\n} as Record<\n  string,\n  {\n    label: {\n      badge: string;\n      description: string;\n    };\n  }\n>;\n\nexport const ultra: Platform = {\n  conditions: [\n    // Page conditions\n    ...[\n      'stream',\n      'course.outline',\n      'course.calendar',\n      'course.engagement',\n      'course.grades',\n    ].map<PlatformCondition>(id => ({\n      applicable: ({ conditions }) =>\n        conditions.find(({ id }) => id.startsWith('page.')) === undefined,\n      color: '#0002A1',\n      expr: `@.context.page.id==\"${id}\"`,\n      id: `page.id.${id}`,\n      ...ultraLabels[`page.id.${id}`],\n    })),\n    // Auth conditions\n    ...['false', 'true'].map(\n      (id): PlatformCondition => ({\n        applicable: ({ conditions }) =>\n          conditions.find(\n            ({ id }) =>\n              id.startsWith('course.role.') || id.startsWith('user.anonymous.'),\n          ) === undefined,\n        color: '#D23369',\n        expr: `${id === 'false' ? '!' : ''}@.context.user.anonymous`,\n        id: `user.anonymous.${id}`,\n        ...ultraLabels[`user.anonymous.${id}`],\n      }),\n    ),\n    // Institution role conditions\n    ...['faculty', 'student'].map(\n      (id): PlatformCondition => ({\n        applicable: ({ conditions }) =>\n          conditions.find(({ id }) => id.startsWith('user.anonymous.true')) ===\n          undefined,\n        color: '#D23369',\n        expr: `@.context.user.role==\"${id}\"`,\n        id: `user.role.${id}`,\n        ...ultraLabels[`user.role.${id}`],\n      }),\n    ),\n    // Course role conditions\n    ...['instructor', 'student'].map(\n      (id): PlatformCondition => ({\n        applicable: ({ conditions }) =>\n          conditions.find(\n            ({ id }) =>\n              id.startsWith('course.role.') ||\n              id.startsWith('user.anonymous.true'),\n          ) === undefined,\n        color: '#D23369',\n        expr: `@.context.course.role==\"${id}\"`,\n        id: `course.role.${id}`,\n        ...ultraLabels[`course.role.${id}`],\n      }),\n    ),\n    // Course state\n    {\n      color: '#3F0071',\n      expr: `@.context.course.content.has`,\n      id: 'course.state.content.has',\n      label: { badge: 'Course', description: 'Has content' },\n    },\n    {\n      color: '#3F0071',\n      expr: `@.context.course.announcements.has`,\n      id: 'course.state.announcements.has',\n      label: { badge: 'Course', description: 'Has announcement' },\n    },\n    // Course activity\n    {\n      color: '#3F0071',\n      expr: '@.activity.course.has(\"course.calendar.addEvent\")',\n      id: 'activity.course.has.createCourseEvent',\n      label: {\n        badge: 'Course Activity',\n        description: 'Has created calendar event',\n      },\n    },\n    {\n      color: '#3F0071',\n      expr: '@.activity.course.has(\"course.calendar.addOfficeHours\")',\n      id: 'activity.course.has.addOfficeHours',\n      label: {\n        badge: 'Course Activity',\n        description: 'Has added office hours',\n      },\n    },\n    {\n      color: '#3F0071',\n      expr: '@.activity.course.has(\"components.directives.messages.courseConversation.sendMessage.button\")',\n      id: 'activity.course.has.sendCourseMessage',\n      label: {\n        badge: 'Course Activity',\n        description: 'Has sent a message',\n      },\n    },\n    // User activity\n    {\n      color: '#D23369',\n      expr: '@.activity.user.has(\"components.directives.add-content-button.contextualMenu.menuItem\")',\n      id: 'activity.user.has.createCourseContent',\n      label: {\n        badge: 'User Activity',\n        description: 'Has created course content',\n      },\n    },\n    {\n      color: '#D23369',\n      expr: '@.activity.user.has(\"course.calendar.addEvent\")',\n      id: 'activity.user.has.createCourseEvent',\n      label: {\n        badge: 'User Activity',\n        description: 'Has created course event',\n      },\n    },\n    {\n      color: '#D23369',\n      expr: '@.activity.user.has(\"course.calendar.addOfficeHours\")',\n      id: 'activity.user.has.addOfficeHours',\n      label: {\n        badge: 'User Activity',\n        description: 'Has added course office hours',\n      },\n    },\n    {\n      color: '#D23369',\n      expr: '@.activity.user.has(\"components.directives.messages.courseConversation.sendMessage.button\")',\n      id: 'activity.user.has.sendCourseMessage',\n      label: {\n        badge: 'User Activity',\n        description: 'Has sent a course message',\n      },\n    },\n  ],\n};\n","import { Platform } from './Platform';\nimport { ultra } from './ultra';\n\nexport const Platforms: Record<string, Platform | undefined> = {\n  ultra,\n};\n","export function htmlEncode(str: string): string {\n  return str.replace(/[\\u00A0-\\u9999<>&]/g, i => `&#${i.charCodeAt(0)};`);\n}\n","import React from 'react';\n\nimport { Autocomplete, Chip } from '@mui/material';\nimport { TextField } from 'formik-mui';\n\nimport { PlatformCondition } from '../platforms/Platform';\nimport { htmlEncode } from '../util/HtmlUtil';\n\nexport type ConditionsSearchFieldProps = {\n  initialConditions?: Record<string, boolean>;\n  availableConditions: PlatformCondition[];\n  onDataChange: (conditions: Record<string, boolean>, jsonpath: string) => void;\n} & React.ComponentProps<typeof TextField>;\n\nconst OptionChip: React.FC<\n  { option: PlatformCondition } & React.ComponentProps<typeof Chip>\n> = ({ option, ...chipProps }) => (\n  <Chip\n    {...chipProps}\n    color=\"error\"\n    sx={{\n      ...chipProps.sx,\n      backgroundColor: option.color,\n    }}\n  />\n);\n\nexport const ConditionsSearchField: React.FC<ConditionsSearchFieldProps> = ({\n  availableConditions,\n  initialConditions = {},\n  field,\n  onDataChange,\n  ...textFieldProps\n}) => {\n  const [selectedConditions, setSelectedConditions] =\n    React.useState<PlatformCondition[]>();\n  const [searchValue, setSearchValue] = React.useState('');\n\n  React.useEffect(() => {\n    if (selectedConditions === undefined) {\n      setSelectedConditions(\n        availableConditions.filter(c => c.id in initialConditions),\n      );\n    }\n  }, [availableConditions, initialConditions, selectedConditions]);\n\n  return (\n    <Autocomplete\n      filterOptions={(options, state) => {\n        const applicableOptions = options.filter(\n          o => o.applicable?.({ conditions: selectedConditions ?? [] }) ?? true,\n        );\n        if (state.inputValue === '') {\n          return applicableOptions;\n        }\n\n        return applicableOptions\n          .filter(o =>\n            filterForSearch(state.inputValue, state.getOptionLabel(o)),\n          )\n          .sort(\n            (a, b) =>\n              state.getOptionLabel(a).length - state.getOptionLabel(b).length,\n          );\n      }}\n      getOptionLabel={option =>\n        `${option.label.badge}: ${option.label.description}`\n      }\n      multiple\n      onChange={(_, value) => {\n        const ids = value.reduce(\n          (acc, { id }) => ({ ...acc, [id]: true }),\n          {} as Record<string, boolean>,\n        );\n        setSelectedConditions(value);\n\n        const jsonpath =\n          value.length > 0\n            ? `@.lang.and(${availableConditions\n                .filter(c => c.id in ids)\n                .map(c => JSON.stringify(c.expr))\n                .join(',')})`\n            : '';\n        onDataChange(ids, jsonpath);\n      }}\n      options={availableConditions}\n      renderInput={params => {\n        const f = {\n          checked: false,\n          multiple: false,\n          name: field.name,\n          onBlur: field.onBlur,\n          onChange: (ev: React.ChangeEvent<HTMLInputElement>) =>\n            setSearchValue(ev.target.value),\n          value: searchValue,\n        };\n        return <TextField {...textFieldProps} {...params} field={f} />;\n      }}\n      renderOption={(props, option, state) => (\n        <li {...props}>\n          <OptionChip\n            label={option.label.badge}\n            option={option}\n            sx={{\n              mr: 1,\n            }}\n          />{' '}\n          <span\n            dangerouslySetInnerHTML={{\n              __html: highlightForSearch(\n                state.inputValue,\n                option.label.description,\n              ),\n            }}\n          />\n        </li>\n      )}\n      renderTags={(value, getTagProps, state) => {\n        return (\n          <>\n            {value.map((c, index) => (\n              <OptionChip\n                {...getTagProps({ index })}\n                label={state.getOptionLabel?.(c)}\n                option={c}\n              />\n            ))}\n          </>\n        );\n      }}\n      value={selectedConditions ?? []}\n    />\n  );\n};\n\nfunction highlightForSearch(search: string, result: string): string {\n  const tokens = tokenizeForRegExp(htmlEncode(search));\n  return htmlEncode(result).replaceAll(\n    new RegExp(`(${tokens.join('|')})`, 'gi'),\n    '<strong>$1</strong>',\n  );\n}\n\nfunction filterForSearch(search: string, result: string): boolean {\n  const tokens = tokenizeForRegExp(search);\n  for (const token of tokens) {\n    if (!new RegExp(token, 'i').test(result)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction tokenizeForRegExp(search: string): string[] {\n  return search\n    .split(/\\s+/g)\n    .map(s => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&'));\n}\n","import React from 'react';\n\nimport type { CreateTourRequest } from '@enactive-ac/api/src/domain/CreateTour';\nimport type { Site } from '@enactive-ac/api/src/domain/Site';\nimport type { Tour } from '@enactive-ac/api/src/domain/Tour';\nimport { Field, FieldAttributes, FormikProps } from 'formik';\nimport { TextField } from 'formik-mui';\n\nimport { Platforms } from '../platforms';\nimport { PlatformCondition } from '../platforms/Platform';\nimport { ConditionsSearchField } from './ConditionsSearchField';\n\nexport type ConditionsFieldProps = {\n  attrName: 'match' | 'launch';\n  formik: FormikProps<CreateTourRequest['tour']>;\n  site: Site;\n  tour?: Tour;\n  FieldProps?: {\n    base?: Partial<FieldAttributes<React.ComponentProps<typeof TextField>>>;\n    search?: Partial<FieldAttributes<React.ComponentProps<typeof TextField>>>;\n    text?: Partial<FieldAttributes<React.ComponentProps<typeof TextField>>>;\n  };\n};\n\nexport const ConditionsField: React.FC<ConditionsFieldProps> = ({\n  attrName,\n  formik,\n  site,\n  tour,\n  FieldProps = {},\n}) => {\n  const platform = Platforms[site.platform?.id ?? ''];\n  if (platform?.conditions !== undefined) {\n    return (\n      <Field\n        helperText=\"Search to add conditions\"\n        label=\"Conditions\"\n        placeholder=\"Begin typing to search...\"\n        size=\"medium\"\n        validate\n        variant=\"outlined\"\n        {...FieldProps.base}\n        {...FieldProps.search}\n        availableConditions={platform.conditions}\n        component={ConditionsSearchField}\n        initialConditions={tour?.[attrName]?.data?.conditions ?? []}\n        name={`${attrName}.jsonpath`}\n        onDataChange={(conditions: PlatformCondition[], jsonpath: string) => {\n          formik.setFieldValue(`${attrName}.data`, { conditions }, false);\n          formik.setFieldValue(`${attrName}.jsonpath`, jsonpath, true);\n        }}\n      />\n    );\n  } else {\n    return (\n      <Field\n        helperText=\"Enter a JSONPath boolean expression\"\n        placeholder={\n          '!@.context.user.anonymous && @.context.page.id == \"dashboard\"'\n        }\n        size=\"medium\"\n        validate\n        variant=\"outlined\"\n        {...FieldProps.base}\n        {...FieldProps.text}\n        component={TextField}\n        name={`${attrName}.jsonpath`}\n      />\n    );\n  }\n};\n","import React, { useState, useCallback } from 'react';\n\nimport { FormHelperText, styled, useTheme } from '@mui/material';\nimport { Editor as EditorComponent } from '@tinymce/tinymce-react';\nimport { Editor } from 'tinymce';\n\nexport type EditorWrapperProps = {\n  errorText?: string;\n  onBlur: () => void;\n  onChange: (html: string) => void;\n  value: string;\n};\n\nconst Container = styled('div')(({ theme }) => ({\n  '&.error .tox': {\n    border: `solid 1px ${theme.palette.error.main}`,\n  },\n}));\n\nexport const EditorWrapper: React.FC<EditorWrapperProps> = ({\n  errorText,\n  onBlur,\n  onChange,\n  value,\n}) => {\n  const theme = useTheme();\n\n  const [editor, setEditor] = useState<Editor>();\n  const handleChange = useCallback(() => {\n    if (editor !== undefined) {\n      onChange(editor.getContent());\n    }\n  }, [editor, onChange]);\n\n  return (\n    <Container className={errorText !== undefined ? 'error' : undefined}>\n      <EditorComponent\n        /** free tiny.cloud account mrvisser@gmail.com */\n        apiKey=\"lqdxhe0s1vh85uk1ft713xbc1t39xpqugkonxscjeu9azh4z\"\n        init={{\n          branding: false,\n          content_style: `\n            body { \n              color: ${theme.palette.text.primary};\n              font-family: ${theme.typography.fontFamily ?? 'sans-serif'};\n              font-weight: ${theme.typography.fontWeightRegular ?? '400'};\n              font-size: 1rem;\n              line-height: 1.5;\n            }\n\n            p {\n              margin: 0;\n            }\n          `,\n          init_instance_callback: editor => setEditor(editor),\n          max_height: 500,\n          menubar: false,\n          plugins: [\n            'autolink',\n            'autoresize',\n            'code',\n            'fullscreen',\n            'image',\n            'link',\n            'lists',\n            'table',\n            'advlist',\n          ],\n          toolbar:\n            'bold italic bullist numlist table image | fullscreen | removeformat code',\n        }}\n        onBlur={onBlur}\n        onEditorChange={() => handleChange()}\n        onKeyUp={() => handleChange()}\n        value={value}\n      />\n      {errorText !== undefined ? (\n        <FormHelperText error>{errorText}</FormHelperText>\n      ) : undefined}\n    </Container>\n  );\n};\n","import React, { ReactElement } from 'react';\n\nimport { Box, BoxProps, styled } from '@mui/material';\n\nexport type FirstActionProps = BoxProps & {\n  actionsComponent?: ReactElement | ReactElement[];\n  illustrationComponent: ReactElement | ReactElement[];\n};\n\nconst Container = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  maxWidth: '35em',\n});\n\nconst Illustration = styled(Box)(({ theme }) => ({\n  '& svg': {\n    height: theme.typography.h1.fontSize,\n    opacity: 0.3,\n    width: theme.typography.h1.fontSize,\n  },\n  marginRight: theme.spacing(2),\n}));\n\nconst ContentContainer = styled(Box)({\n  alignSelf: 'stretch',\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n});\n\nconst Content = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  padding: `${theme.spacing(2)} 0`,\n}));\n\nconst Actions = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'flex-end',\n});\n\nexport const FirstAction: React.FC<FirstActionProps> = ({\n  actionsComponent,\n  children,\n  illustrationComponent,\n  ...boxProps\n}) => {\n  return (\n    <Container {...boxProps}>\n      <Illustration>{illustrationComponent}</Illustration>\n      <ContentContainer>\n        <Content>{children}</Content>\n        {actionsComponent !== undefined ? (\n          <Actions>{actionsComponent}</Actions>\n        ) : undefined}\n      </ContentContainer>\n    </Container>\n  );\n};\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\n\nimport type { CreateTourRequest } from '@enactive-ac/api/src/domain/CreateTour';\nimport type { Site } from '@enactive-ac/api/src/domain/Site';\nimport type { Tour, TourMatch } from '@enactive-ac/api/src/domain/Tour';\nimport type { TourStatus } from '@enactive-ac/api/src/domain/TourStatus';\nimport type { TourStep } from '@enactive-ac/api/src/domain/TourStep';\nimport {\n  Add,\n  ArrowDownward,\n  ArrowUpward,\n  Delete,\n  Error,\n  ExpandMore,\n  SpeakerNotes,\n} from '@mui/icons-material';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  IconButton,\n  styled,\n  Stack,\n  Switch,\n  ToggleButton,\n  ToggleButtonGroup,\n  useTheme,\n  Box,\n  Typography,\n} from '@mui/material';\nimport {\n  Formik,\n  Field,\n  FieldArray,\n  Form,\n  FormikProps,\n  FormikErrors,\n  FieldArrayRenderProps,\n} from 'formik';\nimport { TextField } from 'formik-mui';\nimport { SchemaOf } from 'yup';\n\nimport { ManagementService } from '../services/ManagementService';\nimport yup from '../validation/yup';\nimport { Button } from './Button';\nimport { ConditionsField } from './ConditionsField';\nimport { DialogDrawer } from './DialogDrawer';\nimport { EditorWrapper } from './EditorWrapper';\nimport { FirstAction } from './FirstAction';\nimport { Flex, FlexItem } from './Flex';\n\nexport type EditTourDrawerProps = {\n  managementService: ManagementService;\n  onClose?: () => void;\n  onExited?: () => void;\n  onSave?: (tour: Tour) => void;\n  open: boolean;\n  site: Site;\n  tour?: Tour;\n};\n\nconst SelectorTypeContainer = styled(FlexItem)(({ theme }) => ({\n  margin: theme.spacing(0.5),\n}));\n\nconst StepAccordionSummary = styled(AccordionSummary)(({ theme }) => ({\n  '& > div.MuiAccordionSummary-content': {\n    marginRight: theme.spacing(2),\n    minWidth: 0,\n  },\n}));\n\nconst selectorSchema: SchemaOf<Required<TourStep['selector']>> = yup\n  .object()\n  .shape({\n    type: yup.mixed<'css' | 'xpath'>().oneOf(['css', 'xpath']).default('css'),\n    value: yup\n      .string()\n      .when('type', {\n        is: 'xpath',\n        otherwise: yup.string().validCssSelector(),\n        then: yup.string().validXpathSelector(),\n      })\n      .default(''),\n  });\n\nconst stepSchema: SchemaOf<Omit<TourStep, 'id' | 'buttons'>> = yup\n  .object()\n  .shape({\n    html: yup\n      .string()\n      .required('Message is required')\n      .validNonEmptyHtml({ empty: 'Message requires some text' }),\n    mask: yup.boolean().required(),\n    selector: selectorSchema.notRequired(),\n  });\n\nconst tourMatchSchema: SchemaOf<TourMatch> = yup.object().shape({\n  data: yup.object(),\n  jsonpath: yup.string().default('').validJsonPathFilter(),\n});\n\nconst tourSchema: SchemaOf<\n  Omit<Tour, 'id' | 'steps'> & { steps: Omit<TourStep, 'id' | 'buttons'>[] }\n> = yup.object().shape({\n  launch: tourMatchSchema.nullable(true).optional(),\n  match: tourMatchSchema,\n  name: yup.string().required('Name is required'),\n  status: yup\n    .mixed<'draft' | 'published'>()\n    .oneOf(['draft', 'published'])\n    .default('draft'),\n  steps: yup.array().of(stepSchema),\n});\n\nexport const EditTourDrawer: React.FC<EditTourDrawerProps> = ({\n  managementService,\n  onClose = () => undefined,\n  onExited = () => undefined,\n  onSave = () => undefined,\n  open,\n  site,\n  tour,\n}) => {\n  const theme = useTheme();\n  const formRef = useRef<FormikProps<CreateTourRequest['tour']>>(null);\n  const [formTour, setFormTour] = useState(() => mkTourEdit(tour));\n  const isEdit = useMemo(() => (tour?.id ?? '') !== '', [tour]);\n\n  const [changeStatus, setChangeStatus] = useState<TourStatus>();\n  const [stepExpansionState, setStepExpansionState] = useState<\n    Record<number, boolean>\n  >({});\n\n  useEffect(() => {\n    setFormTour(mkTourEdit(tour));\n    setStepExpansionState({});\n  }, [tour]);\n\n  function handleCreateStep(\n    formik: FormikProps<CreateTourRequest['tour']>,\n    fieldArray: FieldArrayRenderProps,\n  ) {\n    setStepExpansionState({\n      [formik.values.steps.length]: true,\n    });\n    fieldArray.push(mkTourEditStep());\n  }\n\n  function doSubmit(status?: TourStatus) {\n    setChangeStatus(status);\n    if (formRef.current !== null) {\n      void formRef.current.submitForm();\n    }\n  }\n\n  async function handleDelete() {\n    if (tour !== undefined) {\n      await managementService.deleteTour(site.id, tour.id);\n      onClose();\n    }\n  }\n\n  return (\n    <DialogDrawer\n      actions={\n        <>\n          <Button onClick={() => onClose()} size=\"large\">\n            Cancel\n          </Button>\n          <Button onClick={() => doSubmit('draft')} size=\"large\">\n            {!isEdit || formTour?.status === 'draft'\n              ? 'Save draft'\n              : 'Save and unpublish'}\n          </Button>\n          <Button\n            onClick={() => doSubmit('published')}\n            size=\"large\"\n            variant=\"contained\"\n          >\n            {!isEdit\n              ? 'Publish'\n              : formTour?.status === 'draft'\n              ? 'Save and publish'\n              : 'Save'}\n          </Button>\n        </>\n      }\n      onClose={onClose}\n      onExited={onExited}\n      open={open}\n      title={!isEdit ? 'Create tour' : 'Edit tour'}\n    >\n      <Formik\n        enableReinitialize\n        initialValues={formTour}\n        innerRef={formRef}\n        onSubmit={async (tourEdit, actions) => {\n          actions.setSubmitting(true);\n\n          // Clean the tour. Namely, remove selector objects whose value are blank\n          const toSave: CreateTourRequest['tour'] = {\n            ...tourEdit,\n            status: changeStatus ?? formTour?.status ?? tourEdit.status,\n            steps: tourEdit.steps.map(step => ({\n              ...step,\n              selector:\n                step.selector !== undefined && step.selector.value.trim() === ''\n                  ? undefined\n                  : step.selector,\n            })),\n          };\n\n          const result = await (!isEdit\n            ? managementService.createTour(site.id, { tour: toSave })\n            : managementService.updateTour(site.id, tour?.id ?? '', {\n                tour: toSave,\n              }));\n          actions.setSubmitting(false);\n          onSave(result);\n        }}\n        validateOnChange={false}\n        validationSchema={tourSchema}\n      >\n        {formik => (\n          <Form>\n            <Typography component=\"h2\" mb={0.75} variant=\"subtitle1\">\n              Profile\n            </Typography>\n            <Field\n              component={TextField}\n              fullWidth\n              helperText=\"A human-friendly name, for your eyes only\"\n              label=\"Tour name\"\n              name=\"name\"\n              placeholder=\"New account orientation\"\n              size=\"medium\"\n              validate\n              variant=\"outlined\"\n            />\n            <Typography component=\"h2\" mb={0.75} mt={2.5} variant=\"subtitle1\">\n              Criteria\n            </Typography>\n            <Box my={2}>\n              <ConditionsField\n                FieldProps={{\n                  base: {\n                    fullWidth: true,\n                    label: 'Available when...',\n                  },\n                }}\n                attrName=\"match\"\n                formik={formik}\n                site={site}\n                tour={tour}\n              />\n            </Box>\n            <Box my={2}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={formik.values.launch?.jsonpath === 'true'}\n                    onChange={() => {\n                      if ((formik.values.launch ?? undefined) === undefined) {\n                        formik.setFieldValue('launch', { jsonpath: 'true' });\n                      } else {\n                        formik.setFieldValue('launch', null);\n                      }\n                    }}\n                  />\n                }\n                label=\"Automatically launch\"\n              />\n            </Box>\n            <FieldArray name=\"steps\">\n              {fieldArray => (\n                <>\n                  <Typography\n                    component=\"h2\"\n                    mb={0.75}\n                    mt={2.5}\n                    variant=\"subtitle1\"\n                  >\n                    <Flex>\n                      <FlexItem grow>Steps</FlexItem>\n                      <FlexItem>\n                        <IconButton\n                          color=\"primary\"\n                          onClick={() => handleCreateStep(formik, fieldArray)}\n                        >\n                          <Add />\n                        </IconButton>\n                      </FlexItem>\n                    </Flex>\n                  </Typography>\n                  {formik.values.steps.length === 0 ? (\n                    <Flex justifyContent=\"center\" width=\"100%\">\n                      <FirstAction\n                        actionsComponent={\n                          <Button\n                            color=\"primary\"\n                            onClick={() => handleCreateStep(formik, fieldArray)}\n                            variant=\"contained\"\n                          >\n                            Create Step\n                          </Button>\n                        }\n                        illustrationComponent={\n                          <SpeakerNotes\n                            style={{\n                              height: theme.typography.h2.fontSize,\n                              width: theme.typography.h2.fontSize,\n                            }}\n                          />\n                        }\n                        mt={2}\n                        style={{ maxWidth: '30rem' }}\n                      >\n                        A tour step is one message in a sequence of interactive\n                        message dialogs that are shown to your users when the\n                        tour criteria is met.\n                      </FirstAction>\n                    </Flex>\n                  ) : (\n                    <Box sx={{ width: '100%' }}>\n                      {formik.values.steps.map((step, i) => (\n                        <Accordion\n                          key={i}\n                          expanded={stepExpansionState[i] ?? false}\n                        >\n                          <StepAccordionSummary\n                            expandIcon={<ExpandMore />}\n                            onClick={() =>\n                              setStepExpansionState(ses => ({ [i]: !ses[i] }))\n                            }\n                          >\n                            <FlexItem mr={1} width=\"2rem\">\n                              <Typography component=\"h3\" variant=\"body1\">\n                                {i + 1}.\n                              </Typography>\n                            </FlexItem>\n                            <FlexItem\n                              flex=\"1\"\n                              minWidth=\"0\"\n                              overflow=\"hidden\"\n                              textOverflow=\"ellipsis\"\n                              whiteSpace=\"nowrap\"\n                            >\n                              <Typography\n                                sx={{\n                                  display: 'inline',\n                                  opacity: 0.875,\n                                }}\n                                variant=\"body2\"\n                              >\n                                {getTextFromHtml(step.html)}\n                              </Typography>\n                            </FlexItem>\n                            {hasInnerStepError(formik.errors, i) ? (\n                              <FlexItem\n                                color=\"error.main\"\n                                mr={1}\n                                sx={{ alignItems: 'center', display: 'flex' }}\n                              >\n                                <Error />\n                              </FlexItem>\n                            ) : undefined}\n                          </StepAccordionSummary>\n                          <AccordionDetails>\n                            <Flex justifyContent=\"flex-end\">\n                              <IconButton\n                                disabled={i === 0}\n                                onClick={() => {\n                                  setStepExpansionState(ses => ({\n                                    ...ses,\n                                    [i - 1]: ses[i],\n                                    [i]: ses[i - 1],\n                                  }));\n                                  fieldArray.swap(i - 1, i);\n                                }}\n                                title=\"Move up\"\n                              >\n                                <ArrowUpward />\n                              </IconButton>\n                              <IconButton\n                                disabled={i === formik.values.steps.length - 1}\n                                onClick={() => {\n                                  setStepExpansionState(ses => ({\n                                    ...ses,\n                                    [i + 1]: ses[i],\n                                    [i]: ses[i + 1],\n                                  }));\n                                  fieldArray.swap(i, i + 1);\n                                }}\n                                title=\"Move down\"\n                              >\n                                <ArrowDownward />\n                              </IconButton>\n                              <Box ml={2}>\n                                <Button\n                                  color=\"inherit\"\n                                  onClick={() => {\n                                    fieldArray.remove(i);\n                                    setStepExpansionState(ses => ({\n                                      ...ses,\n                                      [i]: false,\n                                    }));\n                                  }}\n                                  startIcon={<Delete />}\n                                >\n                                  Delete\n                                </Button>\n                              </Box>\n                            </Flex>\n                            <Box my={2}>\n                              <label>\n                                Message content:\n                                <EditorWrapper\n                                  errorText={\n                                    formik.getFieldMeta(`steps[${i}].html`)\n                                      .error\n                                  }\n                                  onBlur={() => {\n                                    formik.setFieldTouched(\n                                      `steps[${i}].html`,\n                                      true,\n                                    );\n                                  }}\n                                  onChange={html => {\n                                    formik.setFieldValue(\n                                      `steps[${i}].html`,\n                                      html,\n                                    );\n                                  }}\n                                  value={formik.values.steps[i].html}\n                                />\n                              </label>\n                            </Box>\n                            <Box my={2}>\n                              <FormControlLabel\n                                control={\n                                  <Switch\n                                    checked={formik.values.steps[i].mask}\n                                    onChange={() => {\n                                      formik.setFieldValue(\n                                        `steps[${i}].mask`,\n                                        !formik.values.steps[i].mask,\n                                      );\n                                    }}\n                                  />\n                                }\n                                label=\"Darken the screen\"\n                              />\n                            </Box>\n                            <Stack direction=\"row\" my={2}>\n                              <FlexItem grow>\n                                <Field\n                                  component={TextField}\n                                  fullWidth\n                                  helperText=\"Use the CSS/XPath toggle to choose a selector format\"\n                                  label=\"Attach to element\"\n                                  name={`steps[${i}].selector.value`}\n                                  size=\"medium\"\n                                  variant=\"outlined\"\n                                />\n                              </FlexItem>\n                              <SelectorTypeContainer>\n                                <ToggleButtonGroup\n                                  onChange={() => {\n                                    // After the value change happens in the form, set the selector\n                                    // field as touched so it revalidates\n                                    setTimeout(() =>\n                                      formik.setFieldTouched(\n                                        `steps[${i}].selector.value`,\n                                        true,\n                                        true,\n                                      ),\n                                    );\n                                  }}\n                                  value={[\n                                    formik.values.steps[i].selector?.type ??\n                                      'css',\n                                  ]}\n                                >\n                                  <ToggleButton\n                                    onClick={() =>\n                                      formik.setFieldValue(\n                                        `steps[${i}].selector.type`,\n                                        'css',\n                                      )\n                                    }\n                                    value=\"css\"\n                                  >\n                                    CSS\n                                  </ToggleButton>\n                                  <ToggleButton\n                                    onClick={() =>\n                                      formik.setFieldValue(\n                                        `steps[${i}].selector.type`,\n                                        'xpath',\n                                      )\n                                    }\n                                    value=\"xpath\"\n                                  >\n                                    XPath\n                                  </ToggleButton>\n                                </ToggleButtonGroup>\n                              </SelectorTypeContainer>\n                            </Stack>\n                          </AccordionDetails>\n                        </Accordion>\n                      ))}\n                    </Box>\n                  )}\n                </>\n              )}\n            </FieldArray>\n            {isEdit ? (\n              <Stack direction=\"row-reverse\" my={2}>\n                <Button\n                  color=\"error\"\n                  onClick={handleDelete}\n                  variant=\"contained\"\n                >\n                  <Delete /> Delete\n                </Button>\n              </Stack>\n            ) : undefined}\n          </Form>\n        )}\n      </Formik>\n    </DialogDrawer>\n  );\n};\n\nfunction hasInnerStepError(\n  tour: FormikErrors<CreateTourRequest['tour']>,\n  stepIndex: number,\n) {\n  if (tour.steps === undefined || typeof tour.steps === 'string') {\n    return false;\n  } else {\n    // If there is any prop with a value, then it's an error\n    const step = tour.steps[stepIndex];\n    return (\n      step !== undefined &&\n      Object.values(step).find(s => s !== undefined) !== undefined\n    );\n  }\n}\n\nfunction getTextFromHtml(html: string): string {\n  try {\n    const text =\n      new DOMParser()\n        .parseFromString(html, 'text/html')\n        ?.body.textContent?.trim() ?? '';\n    return text === '' ? 'No content' : text;\n  } catch (err) {\n    return 'No content';\n  }\n}\n\nfunction mkTourEdit(tour?: Tour): CreateTourRequest['tour'] {\n  if (tour === undefined) {\n    return {\n      match: {\n        jsonpath: '',\n      },\n      name: '',\n      status: 'draft',\n      steps: [],\n    };\n  } else {\n    const { id: _, ...t } = tour;\n    return {\n      ...t,\n      match: {\n        jsonpath: tour.match.jsonpath ?? '',\n      },\n      steps: tour.steps.map(mkTourEditStep),\n    };\n  }\n}\n\nfunction mkTourEditStep(step?: TourStep): TourStep {\n  if (step === undefined) {\n    return {\n      html: '',\n      id: '',\n      mask: false,\n      selector: {\n        type: 'css',\n        value: '',\n      },\n    };\n  } else {\n    return step.selector !== undefined\n      ? step\n      : {\n          ...step,\n          selector: {\n            type: 'css',\n            value: '',\n          },\n        };\n  }\n}\n","import React, { ReactElement } from 'react';\n\nimport { Upload } from '@mui/icons-material';\nimport { IconButton, IconButtonProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nexport type FileImportButtonProps = {\n  accept?: string;\n  icon?: ReactElement;\n  inputId: string;\n  onImport: (file: File) => void;\n  ButtonProps?: IconButtonProps;\n};\n\nconst Input = styled('input')({\n  display: 'none',\n});\n\nexport const FileImportButton: React.FC<FileImportButtonProps> = ({\n  accept,\n  ButtonProps,\n  icon = <Upload />,\n  inputId,\n  onImport,\n}) => {\n  return (\n    <label htmlFor={inputId}>\n      <Input\n        accept={accept}\n        id={inputId}\n        onChange={async ev => {\n          const file = ev.target.files?.item(0) ?? undefined;\n          if (file !== undefined) {\n            onImport(file);\n          }\n        }}\n        type=\"file\"\n      />\n      <IconButton {...ButtonProps} component=\"span\">\n        {icon}\n      </IconButton>\n    </label>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport type { Tour } from '@enactive-ac/api/src/domain/Tour';\nimport { Map, Download } from '@mui/icons-material';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  IconButton,\n  Stack,\n  styled,\n} from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { map } from 'rxjs/operators';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { Button } from './Button';\nimport { EditTourDrawer } from './EditTourDrawer';\nimport { FeatureContainer } from './FeatureContainer';\nimport { FileImportButton } from './FileImportButton';\nimport { FirstAction } from './FirstAction';\nimport { Flex } from './Flex';\n\nexport type ToursScreenProps = {\n  managementService: ManagementService;\n};\n\nconst TourCard = styled(Card)(({ theme }) => ({\n  '&.published': {\n    borderLeftColor: theme.palette.success.main,\n  },\n  borderLeft: 'solid 3px #ccc',\n}));\n\nexport const ToursScreen: React.FC<ToursScreenProps> = ({\n  managementService,\n}) => {\n  const { siteId } = useParams<{ siteId: string }>();\n  const [site] = useObservable(\n    () =>\n      managementService.sites$.pipe(map(ss => ss?.find(s => s.id === siteId))),\n    [managementService],\n  );\n  const [tours] = useObservable(\n    () => managementService.tours$,\n    [managementService],\n  );\n\n  const [tourEditOpen, setTourEditOpen] = useState(false);\n  const [tourEdit, setTourEdit] = useState<Tour>();\n\n  useEffect(() => {\n    if (siteId !== undefined) {\n      void managementService.loadTours(siteId);\n    }\n  }, [managementService, siteId]);\n\n  return (\n    <>\n      {(() => {\n        if (siteId !== undefined && tours !== undefined && tours.length > 0) {\n          return (\n            <Box width=\"100%\">\n              <Stack direction=\"row\" my={3} spacing={1}>\n                <Button\n                  color=\"primary\"\n                  onClick={() => {\n                    setTourEdit(undefined);\n                    setTourEditOpen(true);\n                  }}\n                  variant=\"contained\"\n                >\n                  Create tour\n                </Button>\n                <FileImportButton\n                  ButtonProps={{\n                    title: 'Create from template',\n                  }}\n                  inputId=\"import-tour\"\n                  onImport={async data => {\n                    const importedTour: Tour = {\n                      ...JSON.parse(await data.text()),\n                      id: '',\n                      status: 'draft',\n                    };\n\n                    setTourEdit(importedTour);\n                    setTourEditOpen(true);\n                  }}\n                />\n              </Stack>\n              <Flex flexWrap=\"wrap\" m={-1}>\n                {tours.map(tour => (\n                  <Box key={tour.id} m={1} width=\"23%\">\n                    <TourCard\n                      className={tour.status}\n                      onClick={() => {\n                        setTourEdit(tour);\n                        setTourEditOpen(true);\n                      }}\n                      sx={{ cursor: 'pointer', position: 'relative' }}\n                    >\n                      <CardHeader\n                        action={\n                          <IconButton\n                            download={`Enactive_${tour.name.replace(\n                              /\\s+/,\n                              '_',\n                            )}.json`}\n                            href={`data:application/json;charset=utf-8,${encodeURIComponent(\n                              JSON.stringify(tour),\n                            )}`}\n                            onClick={ev => ev.stopPropagation()}\n                            title=\"Download as template\"\n                          >\n                            <Download />\n                          </IconButton>\n                        }\n                        avatar={\n                          <Avatar sx={{ bgcolor: 'blue' }}>\n                            {tour.name\n                              .split(/\\s+/)\n                              .map(w => w[0]?.toUpperCase())\n                              .join('')}\n                          </Avatar>\n                        }\n                        subheader={\n                          tour.status === 'draft' ? 'DRAFT' : 'PUBLISHED'\n                        }\n                        title={tour.name}\n                      />\n                    </TourCard>\n                  </Box>\n                ))}\n              </Flex>\n            </Box>\n          );\n        } else if (siteId !== undefined && tours !== undefined) {\n          return (\n            <FeatureContainer>\n              <FirstAction\n                actionsComponent={\n                  <Stack direction=\"row\" spacing={2}>\n                    <Button\n                      onClick={() => {\n                        setTourEdit(undefined);\n                        setTourEditOpen(true);\n                      }}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      Create tour\n                    </Button>\n                    <FileImportButton\n                      ButtonProps={{\n                        title: 'Create from template',\n                      }}\n                      inputId=\"import-tour\"\n                      onImport={async data => {\n                        const importedTour: Tour = {\n                          ...JSON.parse(await data.text()),\n                          id: '',\n                          status: 'draft',\n                        };\n\n                        setTourEdit(importedTour);\n                        setTourEditOpen(true);\n                      }}\n                    />\n                  </Stack>\n                }\n                illustrationComponent={<Map />}\n              >\n                Create your first contextual, interactive experience for your\n                user that is tailored for your product or website.\n              </FirstAction>\n            </FeatureContainer>\n          );\n        }\n      })()}\n      {site !== undefined ? (\n        <EditTourDrawer\n          managementService={managementService}\n          onClose={() => setTourEditOpen(false)}\n          onSave={() => setTourEditOpen(false)}\n          open={tourEditOpen}\n          site={site}\n          tour={tourEdit}\n        />\n      ) : undefined}\n    </>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\n\nimport type { Site } from '@enactive-ac/api/src/domain/Site';\nimport { Palette } from '@mui/icons-material';\nimport BubbleChartIcon from '@mui/icons-material/BubbleChart';\nimport {\n  AppBar,\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  IconButton,\n  styled,\n  Toolbar,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport {\n  Link as RouterLink,\n  Navigate,\n  Route,\n  Routes,\n  useMatch,\n} from 'react-router-dom';\n\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { AccountDropdown } from './AccountDropdown';\nimport { EditThemeDrawer } from './EditThemeDrawer';\nimport { InstallationScreen } from './InstallationScreen';\nimport { SignInScreen } from './SignInScreen';\nimport { ToursScreen } from './ToursScreen';\n\nconst ContentRoot = styled(Container)({\n  alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  width: '100%',\n});\n\nconst MenuContent = styled(Box)({\n  '& > a': {\n    border: 'solid 0.3em rgba(0, 0, 0, 0)',\n    borderLeftWidth: 0,\n    borderRadius: 0,\n    borderRightWidth: 0,\n    height: '100%',\n    padding: '0 2em',\n  },\n  '& > a.active': {\n    borderBottomColor: 'currentColor',\n  },\n  alignItems: 'center',\n  display: 'flex',\n  flexGrow: 1,\n  height: '100%',\n});\n\nconst MenuLogo = styled(BubbleChartIcon)(({ theme }) => ({\n  height: theme.typography.h5.fontSize,\n  marginRight: theme.spacing(1),\n  width: theme.typography.h5.fontSize,\n}));\n\nconst MenuTitle = styled(Typography)(({ theme }) => ({\n  marginRight: theme.spacing(4),\n}));\n\nconst Root = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh',\n});\n\nconst RootFullScreen = styled(Root)({\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: '100%',\n});\n\nconst managementService = new ManagementService();\n\n// Add the enactive script so we have enactive integration functionality on our own site\nconst enactiveScript = document.createElement('script');\nenactiveScript.src = `https://${\n  window.location.hostname\n}/integration/entrypoint.js?_=${Date.now()}`;\nenactiveScript.setAttribute(\n  'enactive.site-id',\n  '8c60a02a-3b36-4cf1-874a-bbf0d68f6e29',\n);\nenactiveScript.setAttribute('enactive.enabled', 'false');\ndocument.body.appendChild(enactiveScript);\n\nexport const AppRoot: React.FC = () => {\n  const theme = useTheme();\n  const [me] = useObservable(() => managementService.me$, []);\n  const [sites] = useObservable(() => managementService.sites$, []);\n  const [site, setSite] = useState<Site>();\n\n  const { viewId } = useMatch('/sites/:siteId/:viewId')?.params ?? {};\n\n  const [waitingForSignIn, setWaitingForSignIn] = useState(false);\n  const signedIn = useMemo(() => {\n    if (\n      me !== null &&\n      me !== undefined &&\n      site !== undefined &&\n      !waitingForSignIn\n    ) {\n      return true;\n    } else if (me !== undefined) {\n      return false;\n    } else {\n      return undefined;\n    }\n  }, [me, site, waitingForSignIn]);\n\n  const [openEditThemeDrawer, setOpenEditThemeDrawer] = useState(false);\n\n  useEffect(() => {\n    void managementService.init();\n  }, []);\n\n  useEffect(() => {\n    if (me !== undefined) {\n      if (me === null) {\n        setWaitingForSignIn(true);\n        enactiveScript.removeAttribute('enactive.context.user.id');\n      } else {\n        enactiveScript.setAttribute('enactive.context.user.id', me.id);\n      }\n\n      // Don't enable the integration until we have resolved whether or not we are signed in right\n      // now, and only enable it if we are running on production host\n      if (\n        window.location.hostname.indexOf('enactive.ac') !== -1 &&\n        window.location.hostname.indexOf('local.enactive.ac') === -1\n      ) {\n        enactiveScript.setAttribute('enactive.enabled', 'true');\n      }\n    } else {\n      enactiveScript.setAttribute('enactive.enabled', 'false');\n    }\n  }, [me]);\n\n  useEffect(() => {\n    if (sites !== undefined) {\n      setSite(sites[0]);\n    } else {\n      setSite(undefined);\n    }\n  }, [sites]);\n\n  return (\n    <>\n      {signedIn !== undefined ? (\n        <Root>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <MenuLogo />\n              <MenuTitle variant=\"h6\">Enactive Management</MenuTitle>\n              <MenuContent>\n                {(() => {\n                  if (signedIn && site !== undefined) {\n                    return (\n                      <>\n                        <Button\n                          className={viewId === 'tours' ? 'active' : undefined}\n                          color=\"inherit\"\n                          component={RouterLink}\n                          to={`/sites/${site.id}/tours`}\n                        >\n                          Tours\n                        </Button>\n                        <Button\n                          className={\n                            viewId === 'installation' ? 'active' : undefined\n                          }\n                          color=\"inherit\"\n                          component={RouterLink}\n                          to={`/sites/${site.id}/installation`}\n                        >\n                          Installation\n                        </Button>\n                      </>\n                    );\n                  }\n                })()}\n              </MenuContent>\n              {(() => {\n                if (!signedIn) {\n                  return (\n                    <Button\n                      color=\"inherit\"\n                      component={RouterLink}\n                      sx={{\n                        display: 'flex',\n                        height: '100%',\n                        paddingX: theme.spacing(2),\n                      }}\n                      to=\"/signin\"\n                    >\n                      Sign In\n                    </Button>\n                  );\n                } else if (me !== null && me !== undefined) {\n                  return (\n                    <>\n                      <Box mr={2}>\n                        <IconButton\n                          color=\"inherit\"\n                          onClick={() => setOpenEditThemeDrawer(true)}\n                          size=\"large\"\n                          title=\"Edit theme\"\n                        >\n                          <Palette />\n                        </IconButton>\n                      </Box>\n                      <AccountDropdown\n                        buttonProps={{\n                          sx: { display: 'flex', height: '100%' },\n                        }}\n                        me={me}\n                        onSignOut={() => managementService.logout()}\n                      />\n                    </>\n                  );\n                }\n              })()}\n            </Toolbar>\n          </AppBar>\n          <ContentRoot>\n            <Routes>\n              <Route\n                element={\n                  !signedIn ? (\n                    <SignInScreen\n                      managementService={managementService}\n                      onSignIn={() => setWaitingForSignIn(false)}\n                    />\n                  ) : (\n                    <Navigate replace to=\"/\" />\n                  )\n                }\n                path=\"/signin\"\n              />\n              <Route\n                element={(() => {\n                  if (signedIn && site !== undefined) {\n                    return (\n                      <>\n                        <Routes>\n                          <Route\n                            element={\n                              <Navigate\n                                replace\n                                to={`/sites/${site.id}/tours`}\n                              />\n                            }\n                            path=\"/\"\n                          />\n                          <Route\n                            element={\n                              <ToursScreen\n                                managementService={managementService}\n                              />\n                            }\n                            path=\"/sites/:siteId/tours\"\n                          />\n                          <Route\n                            element={<InstallationScreen />}\n                            path=\"/sites/:siteId/installation\"\n                          />\n                        </Routes>\n                        <EditThemeDrawer\n                          managementService={managementService}\n                          onClose={() => setOpenEditThemeDrawer(false)}\n                          onExited={() => undefined}\n                          onSave={() => setOpenEditThemeDrawer(false)}\n                          open={openEditThemeDrawer}\n                          site={site}\n                        />\n                      </>\n                    );\n                  } else {\n                    return <Navigate replace to=\"/signin\" />;\n                  }\n                })()}\n                path=\"/*\"\n              />\n            </Routes>\n          </ContentRoot>\n        </Root>\n      ) : (\n        <RootFullScreen>\n          <CircularProgress />\n        </RootFullScreen>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { CssBaseline, StyledEngineProvider } from '@mui/material';\nimport { HashRouter } from 'react-router-dom';\n\nimport { AppRoot } from '../components/AppRoot';\n\nconst Standalone: React.FC = () => (\n  <StyledEngineProvider injectFirst>\n    <HashRouter>\n      <CssBaseline>\n        <AppRoot />\n      </CssBaseline>\n    </HashRouter>\n  </StyledEngineProvider>\n);\n\nexport default Standalone;\n"],"names":["useObservable","observableGenerator","deps","initialValue","useState","value","setValue","cb","useCallback","useEffect","o","undefined","sub","subscribe","unsubscribe","ManagementService","axios","axiosStatic","baseURL","URLSearchParams","window","location","search","slice","get","hostname","replace","withCredentials","me$$","BehaviorSubject","sites$$","tours$$","me$","this","asObservable","sites$","tours$","before","getMe","catch","after","id","next","loadSites","data","me","email","req","account","post","response","displayName","isExternal","accountId","code","reload","siteId","put","map","s","site","tours","tour","concat","tourId","t","delete","status","filter","sites","AccountDropdown","buttonProps","onSignOut","anchorEl","useRef","open","setOpen","color","ref","onClick","ev","Popper","current","disablePortal","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","yup","test","path","createError","RegExp","err","Error","message","document","querySelector","jp","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","empty","invalid","DOMParser","parseFromString","body","textContent","trim","Button","disabled","key","k","useMemo","DDTitle","styled","DialogTitle","alignItems","display","justifyContent","marginBottom","theme","spacing","DDContent","DialogContent","padding","DDActions","DialogActions","backgroundColor","palette","grey","borderTop","borderTopColor","DialogDrawer","actions","children","onClose","onExited","title","width","Drawer","SlideProps","anchor","disableEnforceFocus","Typography","component","style","flexGrow","variant","IconButton","Close","sx","Flex","col","boxProps","Box","flexDirection","FlexItem","grow","themeSchema","object","shape","primaryColor","required","matches","primaryContrastText","ColorPicker","props","alignSelf","border","borderRadius","height","mr","mt","size","TextField","EditThemeDrawer","managementService","onSave","useTheme","formRef","submitForm","initialValues","innerRef","onSubmit","siteTheme","setSubmitting","updateSite","validationSchema","formik","my","fullWidth","helperText","label","name","placeholder","primary","main","values","contrastText","Container","right","top","CodeBlock","language","text","a11yLight","CenteredCell","TableCell","textAlign","CodeCell","CenteredCodeCell","AttributeRow","attrName","attrType","defaultValue","example","TableRow","Tooltip","Badge","badgeContent","InstallationScreen","useParams","maxWidth","mx","trimLines","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","mb","Alert","severity","Table","TableHead","TableBody","str","end","start","split","line","join","FeatureContainer","codeSchema","SignInButtonContainer","marginTop","CodeForm","onCancel","onSignIn","login","signInAccount","ButtonGroup","signInSchema","EmailForm","onSignUp","signUp","endIcon","ArrowForward","SignInScreen","emailEntered","setEmailEntered","signUpAccount","setSignUpAccount","Slide","direction","in","onEntered","focusInput","unmountOnExit","position","selector","focus","ultraLabels","badge","description","Platforms","ultra","conditions","applicable","find","startsWith","expr","htmlEncode","i","charCodeAt","OptionChip","option","chipProps","Chip","ConditionsSearchField","availableConditions","initialConditions","field","onDataChange","textFieldProps","React","selectedConditions","setSelectedConditions","searchValue","setSearchValue","c","Autocomplete","filterOptions","options","state","applicableOptions","inputValue","result","tokens","tokenizeForRegExp","token","filterForSearch","getOptionLabel","sort","a","b","length","multiple","onChange","_","ids","reduce","acc","jsonpath","JSON","stringify","renderInput","params","f","checked","onBlur","target","renderOption","dangerouslySetInnerHTML","__html","highlightForSearch","renderTags","getTagProps","index","replaceAll","ConditionsField","FieldProps","platform","validate","base","setFieldValue","error","EditorWrapper","errorText","editor","setEditor","handleChange","getContent","className","apiKey","init","branding","content_style","typography","fontFamily","fontWeightRegular","init_instance_callback","max_height","menubar","plugins","toolbar","onEditorChange","onKeyUp","FormHelperText","Illustration","h1","fontSize","opacity","marginRight","ContentContainer","Content","Actions","FirstAction","actionsComponent","illustrationComponent","SelectorTypeContainer","margin","StepAccordionSummary","minWidth","selectorSchema","type","mixed","oneOf","default","when","is","otherwise","string","validCssSelector","then","validXpathSelector","stepSchema","html","validNonEmptyHtml","mask","boolean","notRequired","tourMatchSchema","validJsonPathFilter","tourSchema","launch","nullable","optional","match","steps","array","of","EditTourDrawer","mkTourEdit","formTour","setFormTour","isEdit","changeStatus","setChangeStatus","stepExpansionState","setStepExpansionState","handleCreateStep","fieldArray","push","mkTourEditStep","doSubmit","handleDelete","deleteTour","enableReinitialize","tourEdit","toSave","step","updateTour","createTour","validateOnChange","FormControlLabel","control","Switch","Add","SpeakerNotes","h2","expanded","ses","flex","overflow","textOverflow","whiteSpace","getTextFromHtml","hasInnerStepError","errors","swap","ArrowUpward","ArrowDownward","ml","remove","startIcon","Delete","getFieldMeta","setFieldTouched","Stack","ToggleButtonGroup","setTimeout","ToggleButton","stepIndex","Object","Input","FileImportButton","accept","ButtonProps","icon","Upload","inputId","onImport","htmlFor","file","files","item","TourCard","Card","borderLeftColor","success","borderLeft","ToursScreen","pipe","ss","tourEditOpen","setTourEditOpen","setTourEdit","loadTours","parse","importedTour","flexWrap","m","cursor","CardHeader","action","download","href","encodeURIComponent","stopPropagation","Download","avatar","Avatar","bgcolor","w","toUpperCase","subheader","Map","ContentRoot","MenuContent","borderLeftWidth","borderRightWidth","borderBottomColor","MenuLogo","BubbleChartIcon","h5","MenuTitle","Root","RootFullScreen","enactiveScript","createElement","src","Date","now","setAttribute","appendChild","AppRoot","setSite","viewId","useMatch","waitingForSignIn","setWaitingForSignIn","signedIn","openEditThemeDrawer","setOpenEditThemeDrawer","removeAttribute","indexOf","AppBar","Toolbar","RouterLink","to","Palette","logout","paddingX","element","CircularProgress","StyledEngineProvider","injectFirst","CssBaseline"],"sourceRoot":""}