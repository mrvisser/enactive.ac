{"version":3,"sources":["hooks/useObservable.ts","services/ManagementService.ts","components/AccountDropdown.tsx","validation/yup.ts","components/Button.tsx","components/DialogDrawer.tsx","components/Flex.tsx","components/EditThemeDrawer.tsx","components/CodeBlock.tsx","components/InstallationScreen.tsx","components/FeatureContainer.tsx","components/SignInScreen/CodeForm.tsx","components/SignInScreen/EmailForm.tsx","components/SignInScreen.tsx","components/FirstAction.tsx","components/QuillWrapper.tsx","components/EditTourDrawer.tsx","components/ToursScreen.tsx","components/AppRoot.tsx","App.tsx","index.tsx"],"names":["useObservable","observableGenerator","deps","initialValue","React","useState","value","setValue","cb","useCallback","useEffect","o","undefined","sub","subscribe","unsubscribe","ManagementService","axios","axiosStatic","create","baseURL","URLSearchParams","window","location","search","slice","get","hostname","replace","withCredentials","account$$","BehaviorSubject","sites$$","tours$$","account$","this","asObservable","sites$","tours$","before","getMe","catch","after","id","next","loadSites","data","account","email","req","post","response","accountId","code","reload","siteId","put","map","s","site","tours","tour","concat","tourId","t","sites","AccountDropdown","buttonProps","onSignOut","anchorEl","useRef","open","setOpen","color","ref","onClick","ev","Popper","current","disablePortal","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","yup","test","path","createError","RegExp","err","Error","message","document","querySelector","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","empty","invalid","DOMParser","parseFromString","body","textContent","trim","Button","disabled","key","k","useMemo","DDTitle","styled","DialogTitle","alignItems","display","justifyContent","marginBottom","theme","spacing","DDContent","DialogContent","padding","DDActions","DialogActions","backgroundColor","palette","grey","borderTop","borderTopColor","DialogDrawer","actions","children","onClose","onExited","title","width","Drawer","SlideProps","anchor","Typography","component","style","flexGrow","variant","IconButton","Close","sx","Flex","col","boxProps","Box","flexDirection","FlexItem","grow","themeSchema","object","shape","primaryColor","string","required","matches","primaryContrastText","ColorPicker","props","alignSelf","border","borderRadius","height","mr","mt","size","TextField","EditThemeDrawer","managementService","onSave","useTheme","formRef","submitForm","initialValues","innerRef","onSubmit","siteTheme","a","setSubmitting","updateSite","validationSchema","formik","my","fullWidth","helperText","label","name","placeholder","primary","main","values","contrastText","Container","right","top","CodeBlock","language","text","a11yLight","CenteredCell","TableCell","textAlign","CodeCell","CenteredCodeCell","AttributeRow","attrName","attrType","defaultValue","example","TableRow","Tooltip","Badge","badgeContent","InstallationScreen","useParams","maxWidth","mx","trimLines","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","mb","Alert","severity","Table","TableHead","TableBody","str","end","start","split","line","join","FeatureContainer","codeSchema","SignInButtonContainer","marginTop","CodeForm","onCancel","onSignIn","login","signInAccount","ButtonGroup","signInSchema","EmailForm","onSignUp","signUp","endIcon","ArrowForward","SignInScreen","emailEntered","setEmailEntered","signUpAccount","setSignUpAccount","Slide","direction","in","onEntered","focusInput","unmountOnExit","position","selector","focus","Illustration","typography","h1","fontSize","opacity","marginRight","ContentContainer","Content","Actions","FirstAction","actionsComponent","illustrationComponent","error","QuillWrapper","errorText","onBlur","onChange","className","FormHelperText","SelectorTypeContainer","margin","StepAccordionSummary","minWidth","selectorSchema","type","mixed","oneOf","default","when","is","otherwise","validCssSelector","then","validXpathSelector","stepSchema","html","validNonEmptyHtml","mask","boolean","notRequired","tourSchema","match","regex","validRegex","status","steps","array","of","EditTourDrawer","mkTourEdit","formTour","setFormTour","changeStatus","setChangeStatus","stepExpansionState","setStepExpansionState","handleCreateStep","fieldArray","length","push","mkTourEditStep","doSubmit","toSave","step","createTour","updateTour","result","validateOnChange","validate","Add","SpeakerNotes","h2","i","expanded","ses","flex","overflow","textOverflow","whiteSpace","getTextFromHtml","hasInnerStepError","errors","swap","ArrowUpward","ArrowDownward","ml","remove","startIcon","Delete","getFieldMeta","setFieldTouched","setFieldValue","FormControlLabel","control","Switch","checked","ToggleButtonGroup","setTimeout","ToggleButton","stepIndex","Object","find","TourCard","Card","success","boxShadow","content","ToursScreen","tourEditOpen","setTourEditOpen","tourEdit","setTourEdit","loadTours","flexWrap","m","cursor","CardHeader","avatar","Avatar","bgcolor","w","toUpperCase","Map","ContentRoot","MenuContent","borderLeftWidth","borderRightWidth","borderBottomColor","MenuLogo","BubbleChartIcon","h5","MenuTitle","Root","RootFullScreen","enactiveScript","createElement","src","Date","now","setAttribute","appendChild","AppRoot","setSite","viewId","useRouteMatch","params","waitingForSignIn","setWaitingForSignIn","signedIn","openEditThemeDrawer","setOpenEditThemeDrawer","init","removeAttribute","indexOf","AppBar","Toolbar","RouterLink","to","Palette","logout","paddingX","exact","CircularProgress","App","StyledEngineProvider","injectFirst","CssBaseline","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18d533c3.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\n\nimport { Observable } from 'rxjs';\n\nexport type ObserverFunction<T> = () => Observable<T> | undefined;\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n): [T | undefined];\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue: T,\n): [T];\n\n/**\n * A custom hook that exposes an observable as its latest emitted value.\n *\n * @param observableGenerator A factory function for the observable\n * @param deps The dependency array. When any of these dependencies changes, the observable will\n *   be regenerated.\n * @param initialValue The initial value of the observable value, before it emits its first value.\n *   When the dependency array changes, the value will not revert to the initial value.\n * @returns\n */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue?: T,\n): [typeof initialValue] {\n  const [value, setValue] = React.useState<T | typeof initialValue>(\n    initialValue,\n  );\n  const cb = React.useCallback(observableGenerator, deps);\n\n  /** When the callback changes, reinvoke it and subscribe to the new observable. */\n  React.useEffect(() => {\n    const o = cb();\n    if (o !== undefined) {\n      const sub = o.subscribe(setValue);\n      return () => sub.unsubscribe();\n    }\n  }, [cb]);\n\n  return [value];\n}\n","import axiosStatic, { AxiosInstance } from 'axios';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Account } from '../../../api/src/domain/Account';\nimport {\n  CreateTourRequest,\n  CreateTourResponse,\n} from '../../../api/src/domain/CreateTour';\nimport { GetAccountResponse } from '../../../api/src/domain/GetAccount';\nimport { ListSitesResponse } from '../../../api/src/domain/ListSites';\nimport { ListToursResponse } from '../../../api/src/domain/ListTours';\nimport { LoginResponse } from '../../../api/src/domain/Login';\nimport { SignupRequest, SignupResponse } from '../../../api/src/domain/Signup';\nimport { Site } from '../../../api/src/domain/Site';\nimport { Tour } from '../../../api/src/domain/Tour';\nimport {\n  UpdateSiteRequest,\n  UpdateSiteResponse,\n} from '../../../api/src/domain/UpdateSite';\n\nexport class ManagementService {\n  private readonly account$$ = new BehaviorSubject<Account | null | undefined>(\n    undefined,\n  );\n  private readonly sites$$ = new BehaviorSubject<Site[] | undefined>(undefined);\n  private readonly tours$$ = new BehaviorSubject<Tour[] | undefined>(undefined);\n\n  public readonly account$ = this.account$$.asObservable();\n  public readonly sites$ = this.sites$$.asObservable();\n  public readonly tours$ = this.tours$$.asObservable();\n\n  constructor(\n    private readonly axios: AxiosInstance = axiosStatic.create({\n      baseURL: `${\n        new URLSearchParams(window.location.search.slice(1)).get('_devHost') ??\n        `https://api.${window.location.hostname.replace('www.', '')}`\n      }/api/`,\n      withCredentials: true,\n    }),\n  ) {}\n\n  public async init(): Promise<void> {\n    const before = this.account$$.value;\n    const after = await this.getMe().catch(() => null);\n    if (before?.id !== after?.id) {\n      if (after === null) {\n        this.sites$$.next(undefined);\n      } else {\n        await this.loadSites();\n      }\n    }\n    this.account$$.next(after);\n  }\n\n  public async getMe(): Promise<Account> {\n    return (await this.axios.get<GetAccountResponse>('management/me')).data\n      .account;\n  }\n\n  public async signUp(email: string): Promise<Account> {\n    const req: SignupRequest = {\n      account: {\n        email,\n        id: '',\n      },\n    };\n    const response = await this.axios.post<SignupResponse>(\n      'management/signup',\n      req,\n    );\n\n    this.account$$.next(response.data.account);\n    return response.data.account;\n  }\n\n  public async login(accountId: string, code: string): Promise<Account> {\n    const response = await this.axios.post<LoginResponse>('management/login', {\n      code,\n      id: accountId,\n    });\n    this.account$$.next(response.data.account);\n    await this.loadSites();\n    return response.data.account;\n  }\n\n  public async logout(): Promise<void> {\n    await this.axios.post<Account>('management/logout');\n    this.tours$$.next(undefined);\n    this.sites$$.next(undefined);\n    this.account$$.next(undefined);\n    window.location.reload();\n  }\n\n  public async updateSite(\n    siteId: string,\n    req: UpdateSiteRequest,\n  ): Promise<Site> {\n    const response = await this.axios.put<UpdateSiteResponse>(\n      `management/sites/${siteId}`,\n      req,\n    );\n    this.sites$$.next(\n      this.sites$$.value?.map(s => (s.id === siteId ? response.data.site : s)),\n    );\n    return response.data.site;\n  }\n\n  public async loadTours(siteId: string): Promise<Tour[]> {\n    const response = await this.axios.get<ListToursResponse>(\n      `management/sites/${siteId}/tours`,\n    );\n\n    this.tours$$.next(response.data.tours);\n    return response.data.tours;\n  }\n\n  public async createTour(\n    siteId: string,\n    req: CreateTourRequest,\n  ): Promise<Tour> {\n    const response = await this.axios.post<CreateTourResponse>(\n      `management/sites/${siteId}/tours`,\n      req,\n    );\n    const tour = response.data.tour;\n    const tours = this.tours$$.value;\n    this.tours$$.next(tours === undefined ? [tour] : tours.concat([tour]));\n    return tour;\n  }\n\n  public async updateTour(\n    siteId: string,\n    tourId: string,\n    req: CreateTourRequest,\n  ): Promise<Tour> {\n    const response = await this.axios.put<CreateTourResponse>(\n      `management/sites/${siteId}/tours/${tourId}`,\n      req,\n    );\n    const tour = response.data.tour;\n    const tours = this.tours$$.value;\n    this.tours$$.next(\n      tours === undefined\n        ? [tour]\n        : tours.map(t => (t.id === tour.id ? tour : t)),\n    );\n    return tour;\n  }\n\n  private async loadSites(): Promise<Site[]> {\n    const response = await this.axios.get<ListSitesResponse>(\n      'management/sites',\n    );\n    this.sites$$.next(response.data.sites);\n    return response.data.sites;\n  }\n}\n","import React from 'react';\n\nimport {\n  Button,\n  ButtonProps,\n  ClickAwayListener,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n} from '@material-ui/core';\n\nimport { Account } from '../../../api/src/domain/Account';\n\nexport type AccountDropdownButtonProps = {\n  account: Account;\n  buttonProps?: Omit<ButtonProps, 'children' | 'ref'>;\n  onSignOut: () => void;\n};\n\nexport const AccountDropdown: React.FC<AccountDropdownButtonProps> = ({\n  account,\n  buttonProps,\n  onSignOut,\n}) => {\n  const anchorEl = React.useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = React.useState(false);\n  return (\n    <>\n      <Button\n        color=\"inherit\"\n        {...buttonProps}\n        ref={anchorEl}\n        onClick={(ev) => {\n          setOpen(true);\n          buttonProps?.onClick?.(ev);\n        }}\n      >\n        {account.email}\n      </Button>\n      <Popper anchorEl={anchorEl.current} disablePortal open={open}>\n        <Paper>\n          <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <MenuList>\n              <MenuItem>\n                <Button onClick={() => onSignOut()}>Sign Out</Button>\n              </MenuItem>\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </>\n  );\n};\n","import * as yup from 'yup';\n\ntype ValidNonEmptyHtmlOpts = {\n  empty?: string;\n  invalid?: (err: Error | undefined) => string;\n};\n\nyup.addMethod(yup.string, 'validRegex', function () {\n  return this.test('test-valid-regex', function (value) {\n    if (value !== undefined) {\n      const { path, createError } = this;\n\n      try {\n        new RegExp(value);\n        return true;\n      } catch (err) {\n        if (err instanceof Error) {\n          return createError({ message: err.message, path });\n        } else {\n          return createError({ message: err as string, path });\n        }\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validCssSelector', function () {\n  return this.test('test-valid-css-selector', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        document.querySelector(value);\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid CSS selector', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validXpathSelector', function () {\n  return this.test('test-valid-xpath-selector', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        document.evaluate(\n          value,\n          document,\n          null,\n          XPathResult.FIRST_ORDERED_NODE_TYPE,\n          null,\n        );\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid XPath selector', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(\n  yup.string,\n  'validNonEmptyHtml',\n  function ({\n    empty = 'Please enter some text',\n    invalid = (err: Error | undefined) =>\n      `Invalid HTML${err !== undefined ? `: ${err.message}` : ''}`,\n  }: ValidNonEmptyHtmlOpts = {}) {\n    return this.test('test-valid-non-empty-html', function (value) {\n      const { path, createError } = this;\n      if (value !== undefined) {\n        try {\n          const parser = new DOMParser();\n          const text =\n            parser\n              .parseFromString(value, 'text/html')\n              ?.body.textContent?.trim() ?? '';\n          if (text !== '') {\n            return true;\n          } else {\n            return createError({ message: empty, path });\n          }\n        } catch (err) {\n          return createError({\n            message: invalid(err instanceof Error ? err : undefined),\n            path,\n          });\n        }\n      } else {\n        return createError({ message: empty, path });\n      }\n    });\n  },\n);\n\ndeclare module 'yup' {\n  interface StringSchema {\n    validCssSelector(): this;\n    validNonEmptyHtml(opts?: ValidNonEmptyHtmlOpts): this;\n    validRegex(): this;\n    validXpathSelector(): this;\n  }\n}\n\nexport default yup;\n","import React from 'react';\n\nimport { ButtonProps, Button as MuiButton } from '@material-ui/core';\n\nexport const Button: React.FC<ButtonProps> = ({\n  disabled = false,\n  key,\n  ...buttonProps\n}) => {\n  const k = React.useMemo(() => {\n    // Workaround: https://github.com/mui-org/material-ui/issues/26251\n    if ((key === undefined || key === null) && !disabled) {\n      return undefined;\n    } else if (key === undefined || key === null) {\n      return 'disabled';\n    } else if (!disabled) {\n      return key;\n    } else {\n      return `${key}-disabled`;\n    }\n  }, [disabled, key]);\n  return <MuiButton {...buttonProps} key={k} disabled={disabled} />;\n};\n","import React, { ReactElement, ReactNode } from 'react';\n\nimport {\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Drawer,\n  IconButton,\n  styled,\n  Typography,\n} from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\n\nexport type DialogDrawerProps = {\n  actions: ReactElement;\n  children: ReactNode;\n  onClose?: () => void;\n  onExited?: () => void;\n  open: boolean;\n  title: ReactNode;\n  width?: string | number;\n};\n\nconst DDTitle = styled(DialogTitle)(({ theme }) => ({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: theme.spacing(4),\n}));\n\nconst DDContent = styled(DialogContent)({\n  padding: '3em',\n});\n\nconst DDActions = styled(DialogActions)(({ theme }) => ({\n  backgroundColor: theme.palette.grey['50'],\n  borderTop: `solid 1px`,\n  borderTopColor: theme.palette.grey['200'],\n  padding: theme.spacing(4),\n}));\n\nexport const DialogDrawer: React.FC<DialogDrawerProps> = ({\n  actions,\n  children,\n  onClose,\n  onExited,\n  open,\n  title,\n  width = '35rem',\n}) => {\n  return (\n    <Drawer\n      SlideProps={{ onExited }}\n      anchor=\"right\"\n      onClose={onClose}\n      open={open}\n    >\n      <DDTitle>\n        <Typography component=\"span\" style={{ flexGrow: 1 }} variant=\"h5\">\n          {title}\n        </Typography>\n        {onClose !== undefined ? (\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : undefined}\n      </DDTitle>\n      <DDContent sx={{ width }}>{children}</DDContent>\n      <DDActions>{actions}</DDActions>\n    </Drawer>\n  );\n};\n","import React from 'react';\n\nimport { Box, BoxProps } from '@material-ui/core';\n\nexport type FlexProps = BoxProps & {\n  col?: boolean;\n};\n\nexport const Flex: React.FC<FlexProps> = ({\n  alignItems = 'center',\n  col = false,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      {...boxProps}\n      alignItems={alignItems}\n      sx={{\n        ...boxProps.sx,\n        display: 'flex',\n        flexDirection: col ? 'column' : 'row',\n      }}\n    />\n  );\n};\n\nexport type FlexItemProps = BoxProps & {\n  grow?: boolean;\n};\n\nexport const FlexItem: React.FC<FlexItemProps> = ({\n  grow = false,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      {...boxProps}\n      sx={{\n        ...boxProps.sx,\n        flexGrow: grow ? 1 : undefined,\n      }}\n    />\n  );\n};\n","import React from 'react';\n\nimport { Box, TextFieldProps, useTheme } from '@material-ui/core';\nimport { Field, Form, Formik, FormikProps } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { SchemaOf } from 'yup';\n\nimport { Site } from '../../../api/src/domain/Site';\nimport { SiteTheme } from '../../../api/src/domain/SiteTheme';\nimport { ManagementService } from '../services/ManagementService';\nimport yup from '../validation/yup';\nimport { Button } from './Button';\nimport { DialogDrawer } from './DialogDrawer';\nimport { Flex } from './Flex';\n\nexport type ThemeScreenProps = {\n  managementService: ManagementService;\n  onClose: () => void;\n  onExited: () => void;\n  onSave: (theme: SiteTheme) => void;\n  open: boolean;\n  site: Site;\n};\n\nconst themeSchema: SchemaOf<SiteTheme> = yup.object().shape({\n  primaryColor: yup\n    .string()\n    .required()\n    .matches(/^#([a-f0-9]{3}|[a-f0-9]{6})$/i, {\n      message: 'Please specify a valid hex colour (e.g., #4f4f4f)',\n    }),\n  primaryContrastText: yup\n    .string()\n    .required()\n    .matches(/^#([a-f0-9]{3}|[a-f0-9]{6})$/i, {\n      message: 'Please specify a valid hex colour (e.g., #FFF)',\n    }),\n});\n\nconst ColorPicker: React.FC<TextFieldProps & { value?: string }> = ({\n  value,\n  ...props\n}) => {\n  return (\n    <Flex>\n      <Box\n        alignSelf=\"flex-start\"\n        border=\"solid 1px #eee\"\n        borderRadius=\"0.25rem\"\n        height=\"3rem\"\n        mr={1}\n        mt={0.5}\n        sx={{ backgroundColor: value }}\n        width={'3.3rem'}\n      />\n      <Field\n        size=\"medium\"\n        variant=\"outlined\"\n        {...props}\n        component={TextField}\n      />\n    </Flex>\n  );\n};\n\nexport const EditThemeDrawer: React.FC<ThemeScreenProps> = ({\n  managementService,\n  onClose,\n  onExited,\n  onSave,\n  open,\n  site,\n}) => {\n  const theme = useTheme();\n  const formRef = React.useRef<FormikProps<SiteTheme>>(null);\n  return (\n    <DialogDrawer\n      actions={\n        <>\n          <Button onClick={() => onClose()} size=\"large\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => formRef.current?.submitForm()}\n            size=\"large\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </>\n      }\n      onClose={onClose}\n      onExited={onExited}\n      open={open}\n      title=\"Edit theme\"\n    >\n      <Formik\n        initialValues={\n          site.theme ?? {\n            primaryColor: '#4f4f4f',\n            primaryContrastText: '#fff',\n          }\n        }\n        innerRef={formRef}\n        // eslint-disable-next-line no-console\n        onSubmit={async (siteTheme, actions) => {\n          actions.setSubmitting(true);\n          await managementService.updateSite(site.id, {\n            site: { ...site, theme: siteTheme },\n          });\n          actions.setSubmitting(false);\n          onSave(siteTheme);\n        }}\n        validationSchema={themeSchema}\n      >\n        {(formik) => (\n          <Form>\n            <Box my={2}>\n              <ColorPicker\n                fullWidth\n                helperText=\"Used for primary button background. This is usually your primary brand color.\"\n                label=\"Primary color\"\n                name=\"primaryColor\"\n                placeholder={theme.palette.primary.main}\n                value={formik.values.primaryColor}\n              />\n            </Box>\n            <Box my={2}>\n              <ColorPicker\n                fullWidth\n                helperText=\"Text color that is displayed on top of your primary color.\"\n                label=\"Primary contrast text\"\n                name=\"primaryContrastText\"\n                placeholder={theme.palette.primary.contrastText}\n                value={formik.values.primaryContrastText}\n              />\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </DialogDrawer>\n  );\n};\n","import { Box, BoxProps, styled } from '@material-ui/core';\nimport { CopyBlock, a11yLight } from 'react-code-blocks';\n\nexport type CodeBlockProps = BoxProps & {\n  code: string;\n  language: 'html' | 'javascript';\n};\n\nconst Container = styled(Box)(({ theme }) => ({\n  '& button': {\n    right: 0,\n    top: 0,\n  },\n  border: 'solid 1px #eaeafa',\n  borderRadius: theme.spacing(1),\n  padding: theme.spacing(1),\n}));\n\nexport const CodeBlock: React.FC<CodeBlockProps> = ({\n  code,\n  language,\n  ...boxProps\n}) => {\n  return (\n    <Container {...boxProps}>\n      <CopyBlock language={language} text={code} theme={a11yLight} />\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Alert,\n  Badge,\n  Box,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableCellProps,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport { useParams } from 'react-router-dom';\n\nimport { CodeBlock } from './CodeBlock';\n\nconst CenteredCell = styled(TableCell)({\n  textAlign: 'center',\n});\n\nconst CodeCell: React.FC<TableCellProps> = ({ children, ...props }) => {\n  return (\n    <TableCell {...props}>\n      <code>{children}</code>\n    </TableCell>\n  );\n};\n\nconst CenteredCodeCell = styled(CodeCell)({\n  textAlign: 'center',\n});\n\nconst AttributeRow: React.FC<{\n  attrName: string;\n  attrType: string;\n  defaultValue?: string;\n  example?: string;\n  required?: boolean;\n}> = ({\n  attrName,\n  attrType,\n  children,\n  defaultValue = '',\n  example,\n  required = false,\n}) => {\n  return (\n    <TableRow>\n      <CenteredCell>\n        <Tooltip title={required ? 'Required attribute' : 'Optional attribute'}>\n          {required ? (\n            <Badge badgeContent=\"R\" color=\"error\" />\n          ) : (\n            <Badge badgeContent=\"O\" color=\"info\" />\n          )}\n        </Tooltip>\n      </CenteredCell>\n      <CodeCell>{attrName}</CodeCell>\n      <CenteredCodeCell>{attrType}</CenteredCodeCell>\n      <TableCell>{defaultValue}</TableCell>\n      <TableCell>\n        {children}\n        {example !== undefined ? (\n          <>\n            <Typography my={1} variant=\"subtitle2\">\n              Example:\n            </Typography>\n            <code>{example}</code>\n          </>\n        ) : undefined}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport const InstallationScreen: React.FC = () => {\n  const { siteId } = useParams<{ siteId: string }>();\n  return (\n    <Box maxWidth=\"md\" mx=\"auto\" my={2} width=\"100%\">\n      <Typography component=\"h2\" variant=\"h5\">\n        Installation\n      </Typography>\n      <p>\n        To enable Enactive Tours you must place a script into all webpages on\n        which you want tours to run. Usually you will put this in a site\n        template or use Google Tag Manager so it applies to all pages, and then\n        you can control which URL each tour runs on in the tour configuration.\n      </p>\n      <p>In its simplest form, the script looks like this:</p>\n      <CodeBlock\n        code={trimLines(`\n              |<script\n              |  defer\n              |  enactive.site-id=\"${siteId}\"\n              |  src=\"https://www.enactive.ac/integration/entrypoint.js\"\n              |></script>\n            `)}\n        language=\"html\"\n        mx=\"auto\"\n        my={2}\n      />\n      <p>\n        Please refer to the following examples for various methods of putting\n        Enactive Tours on your site.\n      </p>\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          <Typography component=\"h2\" variant=\"h6\">\n            JavaScript\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          Copy and paste the following block of HTML and JavaScript code to the\n          end of the <code>&lt;body&gt;</code> tag of your website.\n          <CodeBlock\n            code={trimLines(`\n              |<script>\n              |  const script = document.createElement('script');\n              |  script.src = 'https://www.enactive.ac/integration/entrypoint.js';\n              |  script.setAttribute('enactive.site-id', '${siteId}');\n              |\n              |  // If there is a user signed in to your website, add their User ID\n              |  script.setAttribute('enactive.context.user.id', '{the user id}');\n              |  document.body.appendChild(script);\n              |</script>\n            `)}\n            language=\"javascript\"\n            mx=\"auto\"\n            my={2}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          <Typography component=\"h2\" variant=\"h6\">\n            HTML\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box mb={1}>\n            <Alert severity=\"info\">\n              The HTML example on its own is only suitable for displaying tours\n              to anonymous users. To improve our ability to remember user\n              preferences, you must add a{' '}\n              <code>enactive.context.user.id=\"{'{the user id}'}\"</code>{' '}\n              attribute to the script tag either in server-side rendering or\n              with JavaScript.\n            </Alert>\n          </Box>\n          Copy and paste the following block of HTML code to the end of the{' '}\n          <code>&lt;body&gt;</code> tag of your website.\n          <CodeBlock\n            code={trimLines(`\n              |<script \n              |  defer\n              |  enactive.site-id=\"${siteId}\"\n              |  src=\"https://www.enactive.ac/integration/entrypoint.js\"\n              |></script>\n            `)}\n            language=\"html\"\n            mx=\"auto\"\n            my={2}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Typography component=\"h2\" mt={4} variant=\"h5\">\n        Script API\n      </Typography>\n      <p>\n        You can specify various metadata attributes on your script tag to\n        control how Enactive works. Please refer to the following list for all\n        metadata attributes that are available.\n      </p>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Attribute</TableCell>\n            <CenteredCell>Type</CenteredCell>\n            <CenteredCell>Default</CenteredCell>\n            <TableCell>Description</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <AttributeRow\n            attrName=\"enactive.site-id\"\n            attrType=\"string\"\n            example={`enactive.site-id=\"${siteId}\"`}\n            required\n          >\n            Your Enactive Site ID: <code>{siteId}</code>\n          </AttributeRow>\n          <AttributeRow\n            attrName=\"enactive.enabled\"\n            attrType=\"boolean\"\n            defaultValue=\"true\"\n            example='attr.enabled=\"false\"'\n          >\n            If set to <code>false</code> then all functionality will be\n            deactivated.\n          </AttributeRow>\n          <AttributeRow\n            attrName=\"enactive.context.user.id\"\n            attrType=\"string\"\n            defaultValue=\"{random}\"\n            example='enactive.context.user.id=\"155987\"'\n          >\n            Specify a User ID if a user is signed in to your website. This\n            ensures that when a user \"dismisses\" a tour, they are not shown the\n            tour again when switching devices.\n          </AttributeRow>\n          <AttributeRow\n            attrName=\"enactive.context.user.locale\"\n            attrType=\"string\"\n            defaultValue=\"{derived}\"\n            example='enactive.context.user.locale=\"fr-fr\"'\n          >\n            Specify a locale if a user is signed in to your website and has\n            their own language preference. If unspecified, a preference is\n            derived from the page language and the user's browser.\n          </AttributeRow>\n        </TableBody>\n      </Table>\n    </Box>\n  );\n};\n\nfunction trimLines(str: string, { end = /\\s+$/, start = /^\\s*\\|/g } = {}) {\n  return str\n    .trim()\n    .split('\\n')\n    .map(line => line.replace(start, '').replace(end, ''))\n    .join('\\n');\n}\n","import { Container, styled } from '@material-ui/core';\n\nexport const FeatureContainer = styled(Container)({\n  alignItems: 'center',\n  display: 'flex',\n  flexGrow: 1,\n  justifyContent: 'center',\n  width: '100%',\n});\n","import { Box, ButtonGroup, styled } from '@material-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nimport { Account } from '../../../../api/src/domain/Account';\nimport { ManagementService } from '../../services/ManagementService';\nimport yup from '../../validation/yup';\nimport { Button } from '../Button';\n\nexport type CodeFormProps = {\n  account: Account | undefined;\n  managementService: ManagementService;\n  onCancel: () => void;\n  onSignIn?: (account: Account) => void;\n};\n\nconst codeSchema = yup.object().shape({\n  code: yup\n    .string()\n    .required('A 6-digit code is required')\n    .matches(/[0-9]{6}/, { message: 'A valid 6-digit code is required' }),\n});\n\nconst SignInButtonContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  textAlign: 'right',\n}));\n\nexport const CodeForm: React.FC<CodeFormProps> = ({\n  account,\n  managementService,\n  onCancel,\n  onSignIn = () => undefined,\n}) => {\n  return (\n    <Formik\n      initialValues={{ code: '' }}\n      onSubmit={async (values, actions) => {\n        if (account !== undefined) {\n          actions.setSubmitting(true);\n          const signInAccount = await managementService.login(\n            account.id,\n            values.code,\n          );\n          actions.setSubmitting(false);\n          onSignIn(signInAccount);\n        }\n      }}\n      validationSchema={codeSchema}\n    >\n      {(formik) => (\n        <Form>\n          <Field\n            component={TextField}\n            fullWidth\n            helperText=\"Check your email and copy your 6 digit sign-in code into this field.\"\n            label=\"Sign-in code\"\n            name=\"code\"\n          />\n          <SignInButtonContainer>\n            <ButtonGroup>\n              <Button onClick={onCancel} size=\"large\">\n                Cancel\n              </Button>\n              <Button\n                onClick={() => formik.submitForm()}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Sign In\n              </Button>\n            </ButtonGroup>\n          </SignInButtonContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { Box, ButtonGroup, styled } from '@material-ui/core';\nimport { ArrowForward } from '@material-ui/icons';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nimport { Account } from '../../../../api/src/domain/Account';\nimport { ManagementService } from '../../services/ManagementService';\nimport yup from '../../validation/yup';\nimport { Button } from '../Button';\n\nexport type EmailFormProps = {\n  managementService: ManagementService;\n  onSignUp: (account: Account) => void;\n};\n\nconst signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .required('Email address is required')\n    .email('Invalid email address'),\n});\n\nconst SignInButtonContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  textAlign: 'right',\n}));\n\nexport const EmailForm: React.FC<EmailFormProps> = ({\n  managementService,\n  onSignUp,\n}) => {\n  return (\n    <Formik\n      initialValues={{ email: '' }}\n      onSubmit={async (values, actions) => {\n        actions.setSubmitting(true);\n        const account = await managementService.signUp(values.email);\n        actions.setSubmitting(false);\n        onSignUp(account);\n      }}\n      validationSchema={signInSchema}\n    >\n      {(formik) => (\n        <Form>\n          <Field\n            component={TextField}\n            fullWidth\n            helperText=\"We'll send you a sign-in code to this email address.\"\n            label=\"Email address\"\n            name=\"email\"\n          />\n          <SignInButtonContainer>\n            <ButtonGroup>\n              <Button\n                endIcon={<ArrowForward />}\n                onClick={() => formik.submitForm()}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Next\n              </Button>\n            </ButtonGroup>\n          </SignInButtonContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React from 'react';\n\nimport { Box, Slide } from '@material-ui/core';\n\nimport { Account } from '../../../api/src/domain/Account';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { FeatureContainer } from './FeatureContainer';\nimport { CodeForm } from './SignInScreen/CodeForm';\nimport { EmailForm } from './SignInScreen/EmailForm';\n\nexport type SignInScreenProps = {\n  managementService: ManagementService;\n  onSignIn: () => void;\n};\n\nexport const SignInScreen: React.FC<SignInScreenProps> = ({\n  managementService,\n  onSignIn,\n}) => {\n  const [emailEntered, setEmailEntered] = React.useState(false);\n  const [signUpAccount, setSignUpAccount] = React.useState<Account>();\n  const [sites] = useObservable(\n    () => managementService.sites$,\n    [managementService],\n  );\n\n  return (\n    <FeatureContainer>\n      <Slide\n        direction={emailEntered ? 'right' : 'left'}\n        in={signUpAccount === undefined}\n        onEntered={() => {\n          setEmailEntered(true);\n          focusInput();\n        }}\n        unmountOnExit\n      >\n        <Box position=\"absolute\" width={1 / 4}>\n          <EmailForm\n            managementService={managementService}\n            onSignUp={setSignUpAccount}\n          />\n        </Box>\n      </Slide>\n      <Slide\n        direction={sites === undefined ? 'left' : 'right'}\n        in={signUpAccount !== undefined && sites === undefined}\n        onEntered={() => focusInput()}\n        onExited={() => {\n          if (signUpAccount !== undefined && sites !== undefined) {\n            onSignIn();\n          }\n        }}\n        unmountOnExit\n      >\n        <Box position=\"absolute\" width={1 / 4}>\n          <CodeForm\n            account={signUpAccount}\n            managementService={managementService}\n            onCancel={() => setSignUpAccount(undefined)}\n          />\n        </Box>\n      </Slide>\n    </FeatureContainer>\n  );\n};\n\nfunction focusInput(selector = 'input[name]'): void {\n  document.querySelector<HTMLInputElement>(selector)?.focus?.();\n}\n","import React, { ReactElement } from 'react';\n\nimport { Box, BoxProps, styled } from '@material-ui/core';\n\nexport type FirstActionProps = BoxProps & {\n  actionsComponent?: ReactElement | ReactElement[];\n  illustrationComponent: ReactElement | ReactElement[];\n};\n\nconst Container = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  maxWidth: '35em',\n});\n\nconst Illustration = styled(Box)(({ theme }) => ({\n  '& svg': {\n    height: theme.typography.h1.fontSize,\n    opacity: 0.3,\n    width: theme.typography.h1.fontSize,\n  },\n  marginRight: theme.spacing(2),\n}));\n\nconst ContentContainer = styled(Box)({\n  alignSelf: 'stretch',\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n});\n\nconst Content = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  padding: `${theme.spacing(2)} 0`,\n}));\n\nconst Actions = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'flex-end',\n});\n\nexport const FirstAction: React.FC<FirstActionProps> = ({\n  actionsComponent,\n  children,\n  illustrationComponent,\n  ...boxProps\n}) => {\n  return (\n    <Container {...boxProps}>\n      <Illustration>{illustrationComponent}</Illustration>\n      <ContentContainer>\n        <Content>{children}</Content>\n        {actionsComponent !== undefined ? (\n          <Actions>{actionsComponent}</Actions>\n        ) : undefined}\n      </ContentContainer>\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport { FormHelperText, styled } from '@material-ui/core';\nimport ReactQuill from 'react-quill';\n\nexport type QuillWrapperProps = {\n  errorText?: string;\n  onBlur: () => void;\n  onChange: (html: string) => void;\n  value: string;\n};\n\nconst Container = styled('div')(({ theme }) => ({\n  '& > .quill.error': {\n    border: `solid 1px ${theme.palette.error.main}`,\n  },\n}));\n\nexport const QuillWrapper: React.FC<QuillWrapperProps> = ({\n  errorText,\n  onBlur,\n  onChange,\n  value,\n}) => {\n  return (\n    <Container>\n      <ReactQuill\n        className={errorText !== undefined ? 'error' : undefined}\n        onBlur={onBlur}\n        onChange={onChange}\n        value={value}\n      />\n      {errorText !== undefined ? (\n        <FormHelperText error>{errorText}</FormHelperText>\n      ) : undefined}\n    </Container>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\n\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  IconButton,\n  styled,\n  Switch,\n  ToggleButton,\n  ToggleButtonGroup,\n  useTheme,\n Box, Typography } from '@material-ui/core';\nimport {\n  Add,\n  ArrowDownward,\n  ArrowUpward,\n  Delete,\n  Error,\n  ExpandMore,\n  SpeakerNotes,\n} from '@material-ui/icons';\nimport {\n  Formik,\n  Field,\n  FieldArray,\n  Form,\n  FormikProps,\n  FormikErrors,\n  FieldArrayRenderProps,\n} from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { SchemaOf } from 'yup';\n\nimport { Tour } from '../../../api/src/domain/Tour';\nimport { TourStatus } from '../../../api/src/domain/TourStatus';\nimport { TourStep } from '../../../api/src/domain/TourStep';\nimport { ManagementService } from '../services/ManagementService';\nimport yup from '../validation/yup';\nimport { Button } from './Button';\nimport { DialogDrawer } from './DialogDrawer';\nimport { FirstAction } from './FirstAction';\nimport { Flex, FlexItem } from './Flex';\nimport { QuillWrapper } from './QuillWrapper';\n\nexport type EditTourDrawerProps = {\n  managementService: ManagementService;\n  onClose?: () => void;\n  onExited?: () => void;\n  onSave?: (tour: Tour) => void;\n  open: boolean;\n  siteId: string;\n  tour?: Tour;\n};\n\nconst SelectorTypeContainer = styled(FlexItem)(({ theme }) => ({\n  margin: theme.spacing(0.5),\n}));\n\nconst StepAccordionSummary = styled(AccordionSummary)(({ theme }) => ({\n  '& > div.MuiAccordionSummary-content': {\n    marginRight: theme.spacing(2),\n    minWidth: 0,\n  },\n}));\n\nconst selectorSchema: SchemaOf<Required<TourStep['selector']>> = yup\n  .object()\n  .shape({\n    type: yup.mixed<'css' | 'xpath'>().oneOf(['css', 'xpath']).default('css'),\n    value: yup\n      .string()\n      .when('type', {\n        is: 'xpath',\n        otherwise: yup.string().validCssSelector(),\n        then: yup.string().validXpathSelector(),\n      })\n      .default(''),\n  });\n\nconst stepSchema: SchemaOf<Omit<TourStep, 'id' | 'buttons'>> = yup\n  .object()\n  .shape({\n    html: yup\n      .string()\n      .required('Message is required')\n      .validNonEmptyHtml({ empty: 'Message requires some text' }),\n    mask: yup.boolean().required(),\n    selector: selectorSchema.notRequired(),\n  });\n\nconst tourSchema: SchemaOf<\n  Omit<Tour, 'id' | 'steps'> & { steps: Omit<TourStep, 'id' | 'buttons'>[] }\n> = yup.object().shape({\n  match: yup.object().shape({\n    regex: yup\n      .string()\n      .required('URL match expression is required')\n      .validRegex(),\n  }),\n  name: yup.string().required('Name is required'),\n  status: yup\n    .mixed<'draft' | 'published'>()\n    .oneOf(['draft', 'published'])\n    .default('draft'),\n  steps: yup.array().of(stepSchema),\n});\n\nexport const EditTourDrawer: React.FC<EditTourDrawerProps> = ({\n  managementService,\n  onClose = () => undefined,\n  onExited = () => undefined,\n  onSave = () => undefined,\n  open,\n  siteId,\n  tour,\n}) => {\n  const theme = useTheme();\n  const formRef = React.useRef<FormikProps<Tour>>(null);\n  const [formTour, setFormTour] = React.useState(() => mkTourEdit(tour));\n\n  const [changeStatus, setChangeStatus] = React.useState<TourStatus>();\n  const [stepExpansionState, setStepExpansionState] = React.useState<\n    Record<number, boolean>\n  >({});\n\n  React.useEffect(() => {\n    setFormTour(mkTourEdit(tour));\n    setStepExpansionState({});\n  }, [tour]);\n\n  function handleCreateStep(\n    formik: FormikProps<Tour>,\n    fieldArray: FieldArrayRenderProps,\n  ) {\n    setStepExpansionState({\n      [formik.values.steps.length]: true,\n    });\n    fieldArray.push(mkTourEditStep());\n  }\n\n  function doSubmit(status?: TourStatus) {\n    setChangeStatus(status);\n    if (formRef.current !== null) {\n      void formRef.current.submitForm();\n    }\n  }\n\n  return (\n    <DialogDrawer\n      actions={\n        <>\n          <Button onClick={() => onClose()} size=\"large\">\n            Cancel\n          </Button>\n          <Button onClick={() => doSubmit('draft')} size=\"large\">\n            {formTour?.id === '' || formTour?.status === 'draft'\n              ? 'Save draft'\n              : 'Save and unpublish'}\n          </Button>\n          <Button\n            onClick={() => doSubmit('published')}\n            size=\"large\"\n            variant=\"contained\"\n          >\n            {formTour?.id === ''\n              ? 'Publish'\n              : formTour?.status === 'draft'\n              ? 'Save and publish'\n              : 'Save'}\n          </Button>\n        </>\n      }\n      onClose={onClose}\n      onExited={onExited}\n      open={open}\n      title={formTour?.id === '' ? 'Create tour' : 'Edit tour'}\n    >\n      <Formik\n        initialValues={formTour}\n        innerRef={formRef}\n        onSubmit={async (tour, actions) => {\n          actions.setSubmitting(true);\n\n          // Clean the tour. Namely, remove selector objects whose value are blank\n          const toSave: Tour = {\n            ...tour,\n            status: changeStatus ?? formTour?.status ?? tour.status,\n            steps: tour.steps.map((step) => ({\n              ...step,\n              selector:\n                step.selector !== undefined && step.selector.value.trim() === ''\n                  ? undefined\n                  : step.selector,\n            })),\n          };\n\n          const result = await (toSave.id === ''\n            ? managementService.createTour(siteId, { tour: toSave })\n            : managementService.updateTour(siteId, toSave.id, {\n                tour: toSave,\n              }));\n          actions.setSubmitting(false);\n          onSave(result);\n        }}\n        validateOnChange={false}\n        validationSchema={tourSchema}\n      >\n        {(formik) => (\n          <Form>\n            <Typography component=\"h2\" mb={0.75} variant=\"subtitle1\">\n              Profile\n            </Typography>\n            <Field\n              component={TextField}\n              fullWidth\n              helperText=\"A human-friendly name, for your eyes only\"\n              label=\"Tour name\"\n              name=\"name\"\n              placeholder=\"New account orientation\"\n              size=\"medium\"\n              validate\n              variant=\"outlined\"\n            />\n            <Typography component=\"h2\" mb={0.75} mt={2.5} variant=\"subtitle1\">\n              Criteria\n            </Typography>\n            <Field\n              component={TextField}\n              fullWidth\n              helperText=\"The page this tour should be on (regular expression)\"\n              label=\"Page URL match\"\n              name=\"match.regex\"\n              placeholder=\"/dashboard/?\"\n              size=\"medium\"\n              validate\n              variant=\"outlined\"\n            />\n            <FieldArray name=\"steps\">\n              {(fieldArray) => (\n                <>\n                  <Typography\n                    component=\"h2\"\n                    mb={0.75}\n                    mt={2.5}\n                    variant=\"subtitle1\"\n                  >\n                    <Flex>\n                      <FlexItem grow>Steps</FlexItem>\n                      <FlexItem>\n                        <IconButton\n                          color=\"primary\"\n                          onClick={() => handleCreateStep(formik, fieldArray)}\n                        >\n                          <Add />\n                        </IconButton>\n                      </FlexItem>\n                    </Flex>\n                  </Typography>\n                  {formik.values.steps.length === 0 ? (\n                    <Flex justifyContent=\"center\" width=\"100%\">\n                      <FirstAction\n                        actionsComponent={\n                          <Button\n                            color=\"primary\"\n                            onClick={() => handleCreateStep(formik, fieldArray)}\n                            variant=\"contained\"\n                          >\n                            Create Step\n                          </Button>\n                        }\n                        illustrationComponent={\n                          <SpeakerNotes\n                            style={{\n                              height: theme.typography.h2.fontSize,\n                              width: theme.typography.h2.fontSize,\n                            }}\n                          />\n                        }\n                        mt={2}\n                        style={{ maxWidth: '30rem' }}\n                      >\n                        A tour step is one message in a sequence of interactive\n                        message dialogs that are shown to your users when the\n                        tour criteria is met.\n                      </FirstAction>\n                    </Flex>\n                  ) : (\n                    <Box sx={{ width: '100%' }}>\n                      {formik.values.steps.map((step, i) => (\n                        <Accordion\n                          key={i}\n                          expanded={stepExpansionState[i] ?? false}\n                        >\n                          <StepAccordionSummary\n                            expandIcon={<ExpandMore />}\n                            onClick={() =>\n                              setStepExpansionState((ses) => ({ [i]: !ses[i] }))\n                            }\n                          >\n                            <FlexItem mr={1} width=\"2rem\">\n                              <Typography component=\"h3\" variant=\"body1\">\n                                {i + 1}.\n                              </Typography>\n                            </FlexItem>\n                            <FlexItem\n                              flex=\"1\"\n                              minWidth=\"0\"\n                              overflow=\"hidden\"\n                              textOverflow=\"ellipsis\"\n                              whiteSpace=\"nowrap\"\n                            >\n                              <Typography\n                                sx={{\n                                  display: 'inline',\n                                  opacity: 0.875,\n                                }}\n                                variant=\"body2\"\n                              >\n                                {getTextFromHtml(step.html)}\n                              </Typography>\n                            </FlexItem>\n                            {hasInnerStepError(formik.errors, i) ? (\n                              <FlexItem\n                                color=\"error.main\"\n                                mr={1}\n                                sx={{ alignItems: 'center', display: 'flex' }}\n                              >\n                                <Error />\n                              </FlexItem>\n                            ) : undefined}\n                          </StepAccordionSummary>\n                          <AccordionDetails>\n                            <Flex justifyContent=\"flex-end\">\n                              <IconButton\n                                disabled={i === 0}\n                                onClick={() => {\n                                  setStepExpansionState((ses) => ({\n                                    ...ses,\n                                    [i - 1]: ses[i],\n                                    [i]: ses[i - 1],\n                                  }));\n                                  fieldArray.swap(i - 1, i);\n                                }}\n                                title=\"Move up\"\n                              >\n                                <ArrowUpward />\n                              </IconButton>\n                              <IconButton\n                                disabled={i === formik.values.steps.length - 1}\n                                onClick={() => {\n                                  setStepExpansionState((ses) => ({\n                                    ...ses,\n                                    [i + 1]: ses[i],\n                                    [i]: ses[i + 1],\n                                  }));\n                                  fieldArray.swap(i, i + 1);\n                                }}\n                                title=\"Move down\"\n                              >\n                                <ArrowDownward />\n                              </IconButton>\n                              <Box ml={2}>\n                                <Button\n                                  color=\"inherit\"\n                                  onClick={() => {\n                                    fieldArray.remove(i);\n                                    setStepExpansionState((ses) => ({\n                                      ...ses,\n                                      [i]: false,\n                                    }));\n                                  }}\n                                  startIcon={<Delete />}\n                                >\n                                  Delete\n                                </Button>\n                              </Box>\n                            </Flex>\n                            <Box my={2}>\n                              <label>\n                                Message content:\n                                <QuillWrapper\n                                  errorText={\n                                    formik.getFieldMeta(`steps[${i}].html`)\n                                      .error\n                                  }\n                                  onBlur={() => {\n                                    formik.setFieldTouched(\n                                      `steps[${i}].html`,\n                                      true,\n                                    );\n                                  }}\n                                  onChange={(html) => {\n                                    formik.setFieldValue(\n                                      `steps[${i}].html`,\n                                      html,\n                                    );\n                                  }}\n                                  value={formik.values.steps[i].html}\n                                />\n                              </label>\n                            </Box>\n                            <Box my={2}>\n                              <FormControlLabel\n                                control={\n                                  <Switch\n                                    checked={formik.values.steps[i].mask}\n                                    onChange={() => {\n                                      formik.setFieldValue(\n                                        `steps[${i}].mask`,\n                                        !formik.values.steps[i].mask,\n                                      );\n                                    }}\n                                  />\n                                }\n                                label=\"Highlight the message\"\n                              />\n                            </Box>\n                            <Flex alignItems=\"flex-start\" my={2}>\n                              <FlexItem grow>\n                                <Field\n                                  component={TextField}\n                                  fullWidth\n                                  helperText=\"Use the CSS/XPath toggle to choose a selector format\"\n                                  label=\"Highlight element\"\n                                  name={`steps[${i}].selector.value`}\n                                  size=\"medium\"\n                                  variant=\"outlined\"\n                                />\n                              </FlexItem>\n                              <SelectorTypeContainer>\n                                <ToggleButtonGroup\n                                  onChange={() => {\n                                    // After the value change happens in the form, set the selector\n                                    // field as touched so it revalidates\n                                    setTimeout(() =>\n                                      formik.setFieldTouched(\n                                        `steps[${i}].selector.value`,\n                                        true,\n                                        true,\n                                      ),\n                                    );\n                                  }}\n                                  value={[\n                                    formik.values.steps[i].selector?.type ??\n                                      'css',\n                                  ]}\n                                >\n                                  <ToggleButton\n                                    onClick={() =>\n                                      formik.setFieldValue(\n                                        `steps[${i}].selector.type`,\n                                        'css',\n                                      )\n                                    }\n                                    value=\"css\"\n                                  >\n                                    CSS\n                                  </ToggleButton>\n                                  <ToggleButton\n                                    onClick={() =>\n                                      formik.setFieldValue(\n                                        `steps[${i}].selector.type`,\n                                        'xpath',\n                                      )\n                                    }\n                                    value=\"xpath\"\n                                  >\n                                    XPath\n                                  </ToggleButton>\n                                </ToggleButtonGroup>\n                              </SelectorTypeContainer>\n                            </Flex>\n                          </AccordionDetails>\n                        </Accordion>\n                      ))}\n                    </Box>\n                  )}\n                </>\n              )}\n            </FieldArray>\n          </Form>\n        )}\n      </Formik>\n    </DialogDrawer>\n  );\n};\n\nfunction hasInnerStepError(tour: FormikErrors<Tour>, stepIndex: number) {\n  if (tour.steps === undefined || typeof tour.steps === 'string') {\n    return false;\n  } else {\n    // If there is any prop with a value, then it's an error\n    const step = tour.steps[stepIndex];\n    return (\n      step !== undefined &&\n      Object.values(step).find((s) => s !== undefined) !== undefined\n    );\n  }\n}\n\nfunction getTextFromHtml(html: string): string {\n  try {\n    const text =\n      new DOMParser()\n        .parseFromString(html, 'text/html')\n        ?.body.textContent?.trim() ?? '';\n    return text === '' ? 'No content' : text;\n  } catch (err) {\n    return 'No content';\n  }\n}\n\nfunction mkTourEdit(tour?: Tour): Tour {\n  if (tour === undefined) {\n    return {\n      id: '',\n      match: {\n        regex: '',\n      },\n      name: '',\n      status: 'draft',\n      steps: [],\n    };\n  } else {\n    return {\n      ...tour,\n      steps: tour.steps.map(mkTourEditStep),\n    };\n  }\n}\n\nfunction mkTourEditStep(step?: TourStep): TourStep {\n  if (step === undefined) {\n    return {\n      html: '',\n      id: '',\n      mask: false,\n      selector: {\n        type: 'css',\n        value: '',\n      },\n    };\n  } else {\n    return step.selector !== undefined\n      ? step\n      : {\n          ...step,\n          selector: {\n            type: 'css',\n            value: '',\n          },\n        };\n  }\n}\n","import React from 'react';\n\nimport { Avatar, Box, Card, CardHeader, styled } from '@material-ui/core';\nimport { Map } from '@material-ui/icons';\nimport { useParams } from 'react-router-dom';\n\nimport { Tour } from '../../../api/src/domain/Tour';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { Button } from './Button';\nimport { EditTourDrawer } from './EditTourDrawer';\nimport { FeatureContainer } from './FeatureContainer';\nimport { FirstAction } from './FirstAction';\nimport { Flex } from './Flex';\n\nexport type ToursScreenProps = {\n  managementService: ManagementService;\n};\n\nconst TourCard = styled(Card)(({ theme }) => ({\n  '&.published:before': {\n    backgroundColor: theme.palette.success.main,\n    boxShadow: `0px 0px 5px 1px ${theme.palette.success.main}`,\n  },\n  '&:before': {\n    backgroundColor: theme.palette.grey['300'],\n    borderRadius: theme.spacing(1.5),\n    content: '\" \"',\n    height: theme.spacing(1.5),\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    width: theme.spacing(1.5),\n  },\n}));\n\nexport const ToursScreen: React.FC<ToursScreenProps> = ({\n  managementService,\n}) => {\n  const { siteId } = useParams<{ siteId: string }>();\n  const [tours] = useObservable(\n    () => managementService.tours$,\n    [managementService],\n  );\n\n  const [tourEditOpen, setTourEditOpen] = React.useState(false);\n  const [tourEdit, setTourEdit] = React.useState<Tour>();\n\n  React.useEffect(() => {\n    void managementService.loadTours(siteId);\n  }, [managementService, siteId]);\n\n  return (\n    <>\n      {(() => {\n        if (tours !== undefined && tours.length > 0) {\n          return (\n            <Box width=\"100%\">\n              <Box my={3}>\n                <Button\n                  color=\"primary\"\n                  onClick={() => {\n                    setTourEdit(undefined);\n                    setTourEditOpen(true);\n                  }}\n                  variant=\"contained\"\n                >\n                  Create tour\n                </Button>\n              </Box>\n              <Flex flexWrap=\"wrap\" m={-1}>\n                {tours.map((tour) => (\n                  <Box key={tour.id} m={1} width=\"23%\">\n                    <TourCard\n                      className={tour.status}\n                      onClick={() => {\n                        setTourEdit(tour);\n                        setTourEditOpen(true);\n                      }}\n                      sx={{ cursor: 'pointer', position: 'relative' }}\n                    >\n                      <CardHeader\n                        avatar={\n                          <Avatar sx={{ bgcolor: 'blue' }}>\n                            {tour.name\n                              .split(/\\s+/)\n                              .map((w) => w[0]?.toUpperCase())\n                              .join('')}\n                          </Avatar>\n                        }\n                        title={tour.name}\n                      />\n                    </TourCard>\n                  </Box>\n                ))}\n              </Flex>\n            </Box>\n          );\n        } else if (tours !== undefined) {\n          return (\n            <FeatureContainer>\n              <FirstAction\n                actionsComponent={\n                  <Button\n                    onClick={() => {\n                      setTourEdit(undefined);\n                      setTourEditOpen(true);\n                    }}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Create tour\n                  </Button>\n                }\n                illustrationComponent={<Map />}\n              >\n                Create your first contextual, interactive experience for your\n                user that is tailored for your product or website.\n              </FirstAction>\n            </FeatureContainer>\n          );\n        }\n      })()}\n      <EditTourDrawer\n        managementService={managementService}\n        onClose={() => setTourEditOpen(false)}\n        onSave={() => setTourEditOpen(false)}\n        open={tourEditOpen}\n        siteId={siteId}\n        tour={tourEdit}\n      />\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React from 'react';\n\nimport {\n  AppBar,\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  IconButton,\n  styled,\n  Toolbar,\n  Typography,\n  useTheme,\n} from '@material-ui/core';\nimport { Palette } from '@material-ui/icons';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport {\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport { Site } from '../../../api/src/domain/Site';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { AccountDropdown } from './AccountDropdown';\nimport { EditThemeDrawer } from './EditThemeDrawer';\nimport { InstallationScreen } from './InstallationScreen';\nimport { SignInScreen } from './SignInScreen';\nimport { ToursScreen } from './ToursScreen';\n\nconst ContentRoot = styled(Container)({\n  alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  width: '100%',\n});\n\nconst MenuContent = styled(Box)({\n  '& > a': {\n    border: 'solid 0.3em rgba(0, 0, 0, 0)',\n    borderLeftWidth: 0,\n    borderRadius: 0,\n    borderRightWidth: 0,\n    height: '100%',\n    padding: '0 2em',\n  },\n  '& > a.active': {\n    borderBottomColor: 'currentColor',\n  },\n  alignItems: 'center',\n  display: 'flex',\n  flexGrow: 1,\n  height: '100%',\n});\n\nconst MenuLogo = styled(BubbleChartIcon)(({ theme }) => ({\n  height: theme.typography.h5.fontSize,\n  marginRight: theme.spacing(1),\n  width: theme.typography.h5.fontSize,\n}));\n\nconst MenuTitle = styled(Typography)(({ theme }) => ({\n  marginRight: theme.spacing(4),\n}));\n\nconst Root = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh',\n});\n\nconst RootFullScreen = styled(Root)({\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: '100%',\n});\n\nconst managementService = new ManagementService();\n\n// Add the enactive script so we have enactive integration functionality on our own site\nconst enactiveScript = document.createElement('script');\nenactiveScript.src = `https://${\n  window.location.hostname\n}/integration/entrypoint.js?_=${Date.now()}`;\nenactiveScript.setAttribute(\n  'enactive.site-id',\n  '8c60a02a-3b36-4cf1-874a-bbf0d68f6e29',\n);\nenactiveScript.setAttribute('enactive.enabled', 'false');\ndocument.body.appendChild(enactiveScript);\n\nexport const AppRoot: React.FC = () => {\n  const theme = useTheme();\n  const [account] = useObservable(() => managementService.account$, []);\n  const [sites] = useObservable(() => managementService.sites$, []);\n  const [site, setSite] = React.useState<Site>();\n\n  const { viewId } =\n    useRouteMatch<{ viewId?: string }>('/sites/:siteId/:viewId')?.params ?? {};\n\n  const [waitingForSignIn, setWaitingForSignIn] = React.useState(false);\n  const signedIn = React.useMemo(() => {\n    if (\n      account !== null &&\n      account !== undefined &&\n      site !== undefined &&\n      !waitingForSignIn\n    ) {\n      return true;\n    } else if (account !== undefined) {\n      return false;\n    } else {\n      return undefined;\n    }\n  }, [account, site, waitingForSignIn]);\n\n  const [openEditThemeDrawer, setOpenEditThemeDrawer] = React.useState(false);\n\n  React.useEffect(() => {\n    void managementService.init();\n  }, []);\n\n  React.useEffect(() => {\n    if (account !== undefined) {\n      if (account === null) {\n        setWaitingForSignIn(true);\n        enactiveScript.removeAttribute('enactive.context.user.id');\n      } else {\n        enactiveScript.setAttribute('enactive.context.user.id', account.id);\n      }\n\n      // Don't enable the integration until we have resolved whether or not we are signed in right\n      // now, and only enable it if we are running on production host\n      if (window.location.hostname.indexOf('enactive.ac') !== -1) {\n        enactiveScript.setAttribute('enactive.enabled', 'true');\n      }\n    } else {\n      enactiveScript.setAttribute('enactive.enabled', 'false');\n    }\n  }, [account]);\n\n  React.useEffect(() => {\n    if (sites !== undefined) {\n      setSite(sites[0]);\n    } else {\n      setSite(undefined);\n    }\n  }, [sites]);\n\n  return (\n    <>\n      {signedIn !== undefined ? (\n        <Root>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <MenuLogo />\n              <MenuTitle variant=\"h6\">Enactive Management</MenuTitle>\n              <MenuContent>\n                {(() => {\n                  if (signedIn && site !== undefined) {\n                    return (\n                      <>\n                        <Button\n                          className={viewId === 'tours' ? 'active' : undefined}\n                          color=\"inherit\"\n                          component={RouterLink}\n                          to={`/sites/${site.id}/tours`}\n                        >\n                          Tours\n                        </Button>\n                        <Button\n                          className={\n                            viewId === 'installation' ? 'active' : undefined\n                          }\n                          color=\"inherit\"\n                          component={RouterLink}\n                          to={`/sites/${site.id}/installation`}\n                        >\n                          Installation\n                        </Button>\n                      </>\n                    );\n                  }\n                })()}\n              </MenuContent>\n              {(() => {\n                if (!signedIn) {\n                  return (\n                    <Button\n                      color=\"inherit\"\n                      component={RouterLink}\n                      sx={{\n                        display: 'flex',\n                        height: '100%',\n                        paddingX: theme.spacing(2),\n                      }}\n                      to=\"/signin\"\n                    >\n                      Sign In\n                    </Button>\n                  );\n                } else if (account !== null && account !== undefined) {\n                  return (\n                    <>\n                      <Box mr={2}>\n                        <IconButton\n                          color=\"inherit\"\n                          onClick={() => setOpenEditThemeDrawer(true)}\n                          size=\"large\"\n                          title=\"Edit theme\"\n                        >\n                          <Palette />\n                        </IconButton>\n                      </Box>\n                      <AccountDropdown\n                        account={account}\n                        buttonProps={{\n                          sx: { display: 'flex', height: '100%' },\n                        }}\n                        onSignOut={() => managementService.logout()}\n                      />\n                    </>\n                  );\n                }\n              })()}\n            </Toolbar>\n          </AppBar>\n          <ContentRoot>\n            <Switch>\n              <Route exact path=\"/signin\">\n                {!signedIn ? (\n                  <SignInScreen\n                    managementService={managementService}\n                    onSignIn={() => setWaitingForSignIn(false)}\n                  />\n                ) : (\n                  <Redirect to=\"/\" />\n                )}\n              </Route>\n              <Route path=\"/\">\n                {(() => {\n                  if (signedIn && site !== undefined) {\n                    return (\n                      <>\n                        <Switch>\n                          <Route exact path=\"/\">\n                            <Redirect to={`/sites/${site.id}/tours`} />\n                          </Route>\n                          <Route exact path=\"/sites/:siteId/tours\">\n                            <ToursScreen\n                              managementService={managementService}\n                            />\n                          </Route>\n                          <Route exact path=\"/sites/:siteId/installation\">\n                            <InstallationScreen />\n                          </Route>\n                        </Switch>\n                        <EditThemeDrawer\n                          managementService={managementService}\n                          onClose={() => setOpenEditThemeDrawer(false)}\n                          onExited={() => undefined}\n                          onSave={() => setOpenEditThemeDrawer(false)}\n                          open={openEditThemeDrawer}\n                          site={site}\n                        />\n                      </>\n                    );\n                  } else {\n                    return <Redirect to=\"/signin\" />;\n                  }\n                })()}\n              </Route>\n            </Switch>\n          </ContentRoot>\n        </Root>\n      ) : (\n        <RootFullScreen>\n          <CircularProgress />\n        </RootFullScreen>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { CssBaseline, StyledEngineProvider } from '@material-ui/core';\nimport { HashRouter } from 'react-router-dom';\n\nimport { AppRoot } from './components/AppRoot';\n\nconst App: React.FC = () => {\n  return (\n    <StyledEngineProvider injectFirst>\n      <HashRouter>\n        <CssBaseline>\n          <AppRoot />\n        </CssBaseline>\n      </HashRouter>\n    </StyledEngineProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'typeface-roboto';\nimport 'react-quill/dist/quill.snow.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}