{"version":3,"sources":["hooks/useObservable.ts","services/ManagementService.ts","components/AccountDropdown.tsx","components/CodeBlock.tsx","components/InstallationScreen.tsx","components/FeatureContainer.tsx","validation/yup.ts","components/Button.tsx","components/SignInScreen/CodeForm.tsx","components/SignInScreen/EmailForm.tsx","components/SignInScreen.tsx","components/DialogDrawer.tsx","components/FirstAction.tsx","components/Flex.tsx","components/QuillWrapper.tsx","components/EditTourDrawer.tsx","components/ToursScreen.tsx","components/AppRoot.tsx","App.tsx","index.tsx"],"names":["useObservable","observableGenerator","deps","initialValue","React","useState","value","setValue","cb","useCallback","useEffect","o","undefined","sub","subscribe","unsubscribe","ManagementService","axios","axiosStatic","create","baseURL","URLSearchParams","window","location","search","slice","get","hostname","replace","withCredentials","account$$","BehaviorSubject","sites$$","tours$$","account$","this","asObservable","sites$","tours$","before","getMe","catch","after","id","next","loadSites","data","account","email","post","accountId","code","response","reload","siteId","tours","req","tour","concat","tourId","put","map","t","sites","length","createSite","domain","site","push","AccountDropdown","buttonProps","onSignOut","anchorEl","useRef","open","setOpen","color","onClick","ev","ref","Popper","current","disablePortal","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","Container","styled","Box","theme","right","top","border","borderRadius","spacing","padding","CodeBlock","language","boxProps","text","a11yLight","CenteredCell","TableCell","textAlign","CodeCell","children","props","CenteredCodeCell","AttributeRow","attrName","attrType","defaultValue","example","required","TableRow","Tooltip","title","Badge","badgeContent","Typography","my","variant","InstallationScreen","useParams","maxWidth","mx","width","component","trimLines","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","mb","Alert","severity","mt","Table","TableHead","TableBody","str","end","start","trim","split","line","join","FeatureContainer","alignItems","display","flexGrow","justifyContent","yup","test","path","createError","RegExp","err","message","document","querySelector","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","empty","invalid","DOMParser","parseFromString","body","textContent","Error","Button","disabled","key","k","useMemo","codeSchema","object","shape","string","matches","SignInButtonContainer","marginTop","CodeForm","managementService","onCancel","onSignIn","initialValues","onSubmit","values","actions","a","setSubmitting","login","signInAccount","validationSchema","formik","TextField","fullWidth","helperText","label","name","ButtonGroup","size","submitForm","signInSchema","EmailForm","onSignUp","signUp","endIcon","ArrowForward","SignInScreen","emailEntered","setEmailEntered","signUpAccount","setSignUpAccount","Slide","direction","in","onEntered","focusInput","unmountOnExit","position","onExited","selector","focus","DDTitle","DialogTitle","marginBottom","DDContent","DialogContent","DDActions","DialogActions","backgroundColor","palette","grey","borderTop","borderTopColor","DialogDrawer","onClose","Drawer","anchor","SlideProps","style","IconButton","Close","sx","Illustration","fontSize","height","typography","h1","opacity","marginRight","ContentContainer","alignSelf","flexDirection","Content","Actions","FirstAction","actionsComponent","illustrationComponent","Flex","col","FlexItem","grow","error","main","QuillWrapper","errorText","onBlur","onChange","className","FormHelperText","SelectorTypeContainer","margin","StepAccordionSummary","minWidth","selectorSchema","type","mixed","oneOf","default","when","is","otherwise","validCssSelector","then","validXpathSelector","stepSchema","html","validNonEmptyHtml","mask","boolean","notRequired","tourSchema","match","regex","validRegex","status","steps","array","of","EditTourDrawer","onSave","useTheme","formRef","mkTourEdit","formTour","setFormTour","changeStatus","setChangeStatus","stepExpansionState","setStepExpansionState","handleCreateStep","fieldArray","mkTourEditStep","doSubmit","innerRef","toSave","step","createTour","updateTour","result","validateOnChange","placeholder","validate","Add","SpeakerNotes","h2","i","expanded","ses","mr","flex","overflow","textOverflow","whiteSpace","getTextFromHtml","hasInnerStepError","errors","swap","ArrowUpward","ArrowDownward","ml","remove","startIcon","Delete","getFieldMeta","setFieldTouched","setFieldValue","FormControlLabel","control","Switch","checked","ToggleButtonGroup","setTimeout","ToggleButton","stepIndex","Object","find","s","TourCard","Card","success","boxShadow","content","ToursScreen","tourEditOpen","setTourEditOpen","tourEdit","setTourEdit","loadTours","flexWrap","m","cursor","CardHeader","avatar","Avatar","bgcolor","w","toUpperCase","Map","ContentRoot","MenuContent","borderLeftWidth","borderRightWidth","borderBottomColor","MenuLogo","BubbleChartIcon","h5","MenuTitle","Root","RootFullScreen","enactiveScript","createElement","src","Date","now","setAttribute","appendChild","AppRoot","setSite","isToursView","useRouteMatch","isInstallationView","waitingForSignIn","setWaitingForSignIn","signedIn","init","removeAttribute","indexOf","AppBar","Toolbar","RouterLink","to","logout","exact","CircularProgress","App","StyledEngineProvider","injectFirst","CssBaseline","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4917e324.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { Observable } from 'rxjs';\n\nexport type ObserverFunction<T> = () => Observable<T> | undefined;\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n): [T | undefined];\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue: T,\n): [T];\n\n/**\n * A custom hook that exposes an observable as its latest emitted value.\n *\n * @param observableGenerator A factory function for the observable\n * @param deps The dependency array. When any of these dependencies changes, the observable will\n *   be regenerated.\n * @param initialValue The initial value of the observable value, before it emits its first value.\n *   When the dependency array changes, the value will not revert to the initial value.\n * @returns\n */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue?: T,\n): [typeof initialValue] {\n  const [value, setValue] = React.useState<T | typeof initialValue>(\n    initialValue,\n  );\n  const cb = React.useCallback(observableGenerator, deps);\n\n  /** When the callback changes, reinvoke it and subscribe to the new observable. */\n  React.useEffect(() => {\n    const o = cb();\n    if (o !== undefined) {\n      const sub = o.subscribe(setValue);\n      return () => sub.unsubscribe();\n    }\n  }, [cb]);\n\n  return [value];\n}\n","import axiosStatic, { AxiosInstance } from 'axios';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Account } from '../../../api/src/domain/Account';\nimport { CreateSiteRequest } from '../../../api/src/domain/CreateSite';\nimport {\n  CreateTourRequest,\n  CreateTourResponse,\n} from '../../../api/src/domain/CreateTour';\nimport { ListToursResponse } from '../../../api/src/domain/ListTours';\nimport { Site } from '../../../api/src/domain/Site';\nimport { Tour } from '../../../api/src/domain/Tour';\n\nexport class ManagementService {\n  private readonly account$$ = new BehaviorSubject<Account | null | undefined>(\n    undefined,\n  );\n  private readonly sites$$ = new BehaviorSubject<Site[] | undefined>(undefined);\n  private readonly tours$$ = new BehaviorSubject<Tour[] | undefined>(undefined);\n\n  public readonly account$ = this.account$$.asObservable();\n  public readonly sites$ = this.sites$$.asObservable();\n  public readonly tours$ = this.tours$$.asObservable();\n\n  constructor(\n    private readonly axios: AxiosInstance = axiosStatic.create({\n      baseURL: `${\n        new URLSearchParams(window.location.search.slice(1)).get('_devHost') ??\n        `https://api.${window.location.hostname.replace('www.', '')}`\n      }/api/v1/`,\n      withCredentials: true,\n    }),\n  ) {}\n\n  public async init(): Promise<void> {\n    const before = this.account$$.value;\n    const after = await this.getMe().catch(() => null);\n    if (before?.id !== after?.id) {\n      if (after === null) {\n        this.sites$$.next(undefined);\n      } else {\n        await this.loadSites(after);\n      }\n    }\n    this.account$$.next(after);\n  }\n\n  public async getMe(): Promise<Account> {\n    return (await this.axios.get<{ account: Account }>('management/me')).data\n      .account;\n  }\n\n  public async signUp(email: string): Promise<Account> {\n    const { data: account } = await this.axios.post<Account>(\n      'management/signup',\n      {\n        email,\n        id: '',\n      },\n    );\n\n    this.account$$.next(account);\n    return account;\n  }\n\n  public async login(accountId: string, code: string): Promise<Account> {\n    const response = await this.axios.post<Account>('management/login', {\n      code,\n      id: accountId,\n    });\n    const account = response.data;\n\n    this.account$$.next(account);\n    await this.loadSites(account);\n\n    return account;\n  }\n\n  public async logout(): Promise<void> {\n    await this.axios.post<Account>('management/logout');\n    this.tours$$.next(undefined);\n    this.sites$$.next(undefined);\n    this.account$$.next(undefined);\n    window.location.reload();\n  }\n\n  public async loadTours(siteId: string): Promise<Tour[]> {\n    const response = await this.axios.get<ListToursResponse>(\n      `management/sites/${siteId}/tours`,\n    );\n\n    this.tours$$.next(response.data.tours);\n    return response.data.tours;\n  }\n\n  public async createTour(\n    siteId: string,\n    req: CreateTourRequest,\n  ): Promise<Tour> {\n    const response = await this.axios.post<CreateTourResponse>(\n      `management/sites/${siteId}/tours`,\n      req,\n    );\n    const tour = response.data.tour;\n    const tours = this.tours$$.value;\n    this.tours$$.next(tours === undefined ? [tour] : tours.concat([tour]));\n    return tour;\n  }\n\n  public async updateTour(\n    siteId: string,\n    tourId: string,\n    req: CreateTourRequest,\n  ): Promise<Tour> {\n    const response = await this.axios.put<CreateTourResponse>(\n      `management/sites/${siteId}/tours/${tourId}`,\n      req,\n    );\n    const tour = response.data.tour;\n    const tours = this.tours$$.value;\n    this.tours$$.next(\n      tours === undefined\n        ? [tour]\n        : tours.map((t) => (t.id === tour.id ? tour : t)),\n    );\n    return tour;\n  }\n\n  private async loadSites(account: Account): Promise<Site[]> {\n    const response = await this.axios.get<{ sites: Site[] }>(\n      'management/sites',\n    );\n    const sites = response.data.sites;\n\n    if (sites.length === 0) {\n      const site = await this.createSite({ domain: account.email, id: '' });\n      sites.push(site);\n    }\n\n    this.sites$$.next(sites);\n    return sites;\n  }\n\n  private async createSite(req: CreateSiteRequest): Promise<Site> {\n    const response = await this.axios.post<{ site: Site }>(\n      'management/sites',\n      req,\n    );\n    return response.data.site;\n  }\n}\n","import {\n  Button,\n  ButtonProps,\n  ClickAwayListener,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n} from '@material-ui/core';\nimport React from 'react';\n\nimport { Account } from '../../../api/src/domain/Account';\n\nexport type AccountDropdownButtonProps = {\n  account: Account;\n  buttonProps?: Omit<ButtonProps, 'children' | 'ref'>;\n  onSignOut: () => void;\n};\n\nexport const AccountDropdown: React.FC<AccountDropdownButtonProps> = ({\n  account,\n  buttonProps,\n  onSignOut,\n}) => {\n  const anchorEl = React.useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = React.useState(false);\n  return (\n    <>\n      <Button\n        color=\"inherit\"\n        {...buttonProps}\n        onClick={(ev) => {\n          setOpen(true);\n          buttonProps?.onClick?.(ev);\n        }}\n        ref={anchorEl}\n      >\n        {account.email}\n      </Button>\n      <Popper anchorEl={anchorEl.current} disablePortal open={open}>\n        <Paper>\n          <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <MenuList>\n              <MenuItem>\n                <Button onClick={() => onSignOut()}>Sign Out</Button>\n              </MenuItem>\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </>\n  );\n};\n","import { Box, BoxProps, styled } from '@material-ui/core';\nimport { CopyBlock, a11yLight } from 'react-code-blocks';\n\nexport type CodeBlockProps = BoxProps & {\n  code: string;\n  language: 'html' | 'javascript';\n};\n\nconst Container = styled(Box)(({ theme }) => ({\n  '& button': {\n    right: 0,\n    top: 0,\n  },\n  border: 'solid 1px #eaeafa',\n  borderRadius: theme.spacing(1),\n  padding: theme.spacing(1),\n}));\n\nexport const CodeBlock: React.FC<CodeBlockProps> = ({\n  code,\n  language,\n  ...boxProps\n}) => {\n  return (\n    <Container {...boxProps}>\n      <CopyBlock language={language} text={code} theme={a11yLight} />\n    </Container>\n  );\n};\n","import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Alert,\n  Badge,\n  Box,\n  styled,\n  Table,\n  TableBody,\n  TableCell,\n  TableCellProps,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { CodeBlock } from './CodeBlock';\n\nconst CenteredCell = styled(TableCell)({\n  textAlign: 'center',\n});\n\nconst CodeCell: React.FC<TableCellProps> = ({ children, ...props }) => {\n  return (\n    <TableCell {...props}>\n      <code>{children}</code>\n    </TableCell>\n  );\n};\n\nconst CenteredCodeCell = styled(CodeCell)({\n  textAlign: 'center',\n});\n\nconst AttributeRow: React.FC<{\n  attrName: string;\n  attrType: string;\n  defaultValue?: string;\n  example?: string;\n  required?: boolean;\n}> = ({\n  attrName,\n  attrType,\n  children,\n  defaultValue = '',\n  example,\n  required = false,\n}) => {\n  return (\n    <TableRow>\n      <CenteredCell>\n        <Tooltip title={required ? 'Required attribute' : 'Optional attribute'}>\n          {required ? (\n            <Badge badgeContent=\"R\" color=\"error\" />\n          ) : (\n            <Badge badgeContent=\"O\" color=\"info\" />\n          )}\n        </Tooltip>\n      </CenteredCell>\n      <CodeCell>{attrName}</CodeCell>\n      <CenteredCodeCell>{attrType}</CenteredCodeCell>\n      <TableCell>{defaultValue}</TableCell>\n      <TableCell>\n        {children}\n        {example !== undefined ? (\n          <>\n            <Typography my={1} variant=\"subtitle2\">\n              Example:\n            </Typography>\n            <code>{example}</code>\n          </>\n        ) : undefined}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport const InstallationScreen: React.FC = () => {\n  const { siteId } = useParams<{ siteId: string }>();\n  return (\n    <Box maxWidth=\"md\" mx=\"auto\" my={2} width=\"100%\">\n      <Typography component=\"h2\" variant=\"h5\">\n        Installation\n      </Typography>\n      <p>\n        To enable Enactive Tours you must place a script into all webpages on\n        which you want tours to run. Usually you will put this in a site\n        template or use Google Tag Manager so it applies to all pages, and then\n        you can control which URL each tour runs on in the tour configuration.\n      </p>\n      <p>In its simplest form, the script looks like this:</p>\n      <CodeBlock\n        code={trimLines(`\n              |<script \n              |  defer\n              |  enactive.site-id=\"${siteId}\"\n              |></script>\n            `)}\n        language=\"html\"\n        mx=\"auto\"\n        my={2}\n      />\n      <p>\n        Please refer to the following examples for various methods of putting\n        Enactive Tours on your site.\n      </p>\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          <Typography component=\"h2\" variant=\"h6\">\n            JavaScript\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          Copy and paste the following block of HTML and JavaScript code to the\n          end of the <code>&lt;body&gt;</code> tag of your website.\n          <CodeBlock\n            code={trimLines(`\n              |<script>\n              |  const script = document.createElement('script');\n              |  script.src = 'https://www.enactive.ac/integration/entrypoint.js';\n              |  script.setAttribute('enactive.site-id', '${siteId}');\n              |\n              |  // If there is a user signed in to your website, add their User ID\n              |  script.setAttribute('enactive.context.user.id', '{the user id}');\n              |  document.body.appendChild(script);\n              |</script>\n            `)}\n            language=\"javascript\"\n            mx=\"auto\"\n            my={2}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary expandIcon={<ExpandMore />}>\n          <Typography component=\"h2\" variant=\"h6\">\n            HTML\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Box mb={1}>\n            <Alert severity=\"info\">\n              The HTML example on its own is only suitable for displaying tours\n              to anonymous users. To improve our ability to remember user\n              preferences, you must add a{' '}\n              <code>enactive.context.user.id=\"{'{the user id}'}\"</code>{' '}\n              attribute to the script tag either in server-side rendering or\n              with JavaScript.\n            </Alert>\n          </Box>\n          Copy and paste the following block of HTML code to the end of the{' '}\n          <code>&lt;body&gt;</code> tag of your website.\n          <Typography variant=\"body2\">Anonymous users only</Typography>\n          <CodeBlock\n            code={trimLines(`\n              |<script \n              |  defer\n              |  enactive.site-id=\"${siteId}\"\n              |></script>\n            `)}\n            language=\"html\"\n            mx=\"auto\"\n            my={2}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Typography component=\"h2\" mt={4} variant=\"h5\">\n        Script API\n      </Typography>\n      <p>\n        You can specify various metadata attributes on your script tag to\n        control how Enactive works. Please refer to the following list for all\n        metadata attributes that are available.\n      </p>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Attribute</TableCell>\n            <CenteredCell>Type</CenteredCell>\n            <CenteredCell>Default</CenteredCell>\n            <TableCell>Description</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <AttributeRow\n            attrName=\"enactive.site-id\"\n            attrType=\"string\"\n            example={`enactive.site-id=\"${siteId}\"`}\n            required\n          >\n            Your Enactive Site ID: <code>{siteId}</code>\n          </AttributeRow>\n          <AttributeRow\n            attrName=\"enactive.enabled\"\n            attrType=\"boolean\"\n            defaultValue=\"true\"\n            example='attr.enabled=\"false\"'\n          >\n            If set to <code>false</code> then all functionality will be\n            deactivated.\n          </AttributeRow>\n          <AttributeRow\n            attrName=\"enactive.context.user.id\"\n            attrType=\"string\"\n            defaultValue=\"{random}\"\n            example='enactive.context.user.id=\"155987\"'\n          >\n            Specify a User ID if a user is signed in to your website. This\n            ensures that when a user \"dismisses\" a tour, they are not shown the\n            tour again when switching devices.\n          </AttributeRow>\n          <AttributeRow\n            attrName=\"enactive.context.user.locale\"\n            attrType=\"string\"\n            defaultValue=\"{derived}\"\n            example='enactive.context.user.locale=\"fr-fr\"'\n          >\n            Specify a locale if a user is signed in to your website and has\n            their own language preference. If unspecified, a preference is\n            derived from the page language and the user's browser.\n          </AttributeRow>\n        </TableBody>\n      </Table>\n    </Box>\n  );\n};\n\nfunction trimLines(str: string, { end = /\\s+$/, start = /^\\s*\\|/g } = {}) {\n  return str\n    .trim()\n    .split('\\n')\n    .map((line) => line.replace(start, '').replace(end, ''))\n    .join('\\n');\n}\n","import { Container, styled } from '@material-ui/core';\n\nexport const FeatureContainer = styled(Container)({\n  alignItems: 'center',\n  display: 'flex',\n  flexGrow: 1,\n  justifyContent: 'center',\n  width: '100%',\n});\n","import * as yup from 'yup';\n\ntype ValidNonEmptyHtmlOpts = {\n  empty?: string;\n  invalid?: (err: Error | undefined) => string;\n};\n\nyup.addMethod(yup.string, 'validRegex', function () {\n  return this.test('test-valid-regex', function (value) {\n    if (value !== undefined) {\n      const { path, createError } = this;\n\n      try {\n        new RegExp(value);\n        return true;\n      } catch (err) {\n        return createError({ message: err.message, path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validCssSelector', function () {\n  return this.test('test-valid-css-selector', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        document.querySelector(value);\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid CSS selector', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validXpathSelector', function () {\n  return this.test('test-valid-xpath-selector', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        document.evaluate(\n          value,\n          document,\n          null,\n          XPathResult.FIRST_ORDERED_NODE_TYPE,\n          null,\n        );\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid XPath selector', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(\n  yup.string,\n  'validNonEmptyHtml',\n  function ({\n    empty = 'Please enter some text',\n    invalid = (err: Error | undefined) =>\n      `Invalid HTML${err !== undefined ? `: ${err.message}` : ''}`,\n  }: ValidNonEmptyHtmlOpts = {}) {\n    return this.test('test-valid-non-empty-html', function (value) {\n      const { path, createError } = this;\n      if (value !== undefined) {\n        try {\n          const parser = new DOMParser();\n          const text =\n            parser\n              .parseFromString(value, 'text/html')\n              ?.body.textContent?.trim() ?? '';\n          if (text !== '') {\n            return true;\n          } else {\n            return createError({ message: empty, path });\n          }\n        } catch (err) {\n          return createError({\n            message: invalid(err instanceof Error ? err : undefined),\n            path,\n          });\n        }\n      } else {\n        return createError({ message: empty, path });\n      }\n    });\n  },\n);\n\ndeclare module 'yup' {\n  interface StringSchema {\n    validCssSelector(): this;\n    validNonEmptyHtml(opts?: ValidNonEmptyHtmlOpts): this;\n    validRegex(): this;\n    validXpathSelector(): this;\n  }\n}\n\nexport default yup;\n","import { ButtonProps, Button as MuiButton } from '@material-ui/core';\nimport React from 'react';\n\nexport const Button: React.FC<ButtonProps> = ({\n  disabled = false,\n  key,\n  ...buttonProps\n}) => {\n  const k = React.useMemo(() => {\n    // Workaround: https://github.com/mui-org/material-ui/issues/26251\n    if (key === undefined && !disabled) {\n      return undefined;\n    } else if (key === undefined) {\n      return 'disabled';\n    } else if (!disabled) {\n      return key;\n    } else {\n      return `${key}-disabled`;\n    }\n  }, [disabled, key]);\n  return <MuiButton {...buttonProps} disabled={disabled} key={k} />;\n};\n","import { Box, ButtonGroup, styled } from '@material-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nimport { Account } from '../../../../api/src/domain/Account';\nimport { ManagementService } from '../../services/ManagementService';\nimport yup from '../../validation/yup';\nimport { Button } from '../Button';\n\nexport type CodeFormProps = {\n  account: Account | undefined;\n  managementService: ManagementService;\n  onCancel: () => void;\n  onSignIn?: (account: Account) => void;\n};\n\nconst codeSchema = yup.object().shape({\n  code: yup\n    .string()\n    .required('A 6-digit code is required')\n    .matches(/[0-9]{6}/, { message: 'A valid 6-digit code is required' }),\n});\n\nconst SignInButtonContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  textAlign: 'right',\n}));\n\nexport const CodeForm: React.FC<CodeFormProps> = ({\n  account,\n  managementService,\n  onCancel,\n  onSignIn = () => undefined,\n}) => {\n  return (\n    <Formik\n      initialValues={{ code: '' }}\n      onSubmit={async (values, actions) => {\n        if (account !== undefined) {\n          actions.setSubmitting(true);\n          const signInAccount = await managementService.login(\n            account.id,\n            values.code,\n          );\n          actions.setSubmitting(false);\n          onSignIn(signInAccount);\n        }\n      }}\n      validationSchema={codeSchema}\n    >\n      {(formik) => (\n        <Form>\n          <Field\n            component={TextField}\n            fullWidth\n            helperText=\"Check your email and copy your 6 digit sign-in code into this field.\"\n            label=\"Sign-in code\"\n            name=\"code\"\n          />\n          <SignInButtonContainer>\n            <ButtonGroup>\n              <Button onClick={onCancel} size=\"large\">\n                Cancel\n              </Button>\n              <Button\n                onClick={() => formik.submitForm()}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Sign In\n              </Button>\n            </ButtonGroup>\n          </SignInButtonContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { Box, ButtonGroup, styled } from '@material-ui/core';\nimport { ArrowForward } from '@material-ui/icons';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nimport { Account } from '../../../../api/src/domain/Account';\nimport { ManagementService } from '../../services/ManagementService';\nimport yup from '../../validation/yup';\nimport { Button } from '../Button';\n\nexport type EmailFormProps = {\n  managementService: ManagementService;\n  onSignUp: (account: Account) => void;\n};\n\nconst signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .required('Email address is required')\n    .email('Invalid email address'),\n});\n\nconst SignInButtonContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  textAlign: 'right',\n}));\n\nexport const EmailForm: React.FC<EmailFormProps> = ({\n  managementService,\n  onSignUp,\n}) => {\n  return (\n    <Formik\n      initialValues={{ email: '' }}\n      onSubmit={async (values, actions) => {\n        actions.setSubmitting(true);\n        const account = await managementService.signUp(values.email);\n        actions.setSubmitting(false);\n        onSignUp(account);\n      }}\n      validationSchema={signInSchema}\n    >\n      {(formik) => (\n        <Form>\n          <Field\n            component={TextField}\n            fullWidth\n            helperText=\"We'll send you a sign-in code to this email address.\"\n            label=\"Email address\"\n            name=\"email\"\n          />\n          <SignInButtonContainer>\n            <ButtonGroup>\n              <Button\n                endIcon={<ArrowForward />}\n                onClick={() => formik.submitForm()}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Next\n              </Button>\n            </ButtonGroup>\n          </SignInButtonContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { Box, Slide } from '@material-ui/core';\nimport React from 'react';\n\nimport { Account } from '../../../api/src/domain/Account';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { FeatureContainer } from './FeatureContainer';\nimport { CodeForm } from './SignInScreen/CodeForm';\nimport { EmailForm } from './SignInScreen/EmailForm';\n\nexport type SignInScreenProps = {\n  managementService: ManagementService;\n  onSignIn: () => void;\n};\n\nexport const SignInScreen: React.FC<SignInScreenProps> = ({\n  managementService,\n  onSignIn,\n}) => {\n  const [emailEntered, setEmailEntered] = React.useState(false);\n  const [signUpAccount, setSignUpAccount] = React.useState<Account>();\n  const [sites] = useObservable(\n    () => managementService.sites$,\n    [managementService],\n  );\n\n  return (\n    <FeatureContainer>\n      <Slide\n        direction={emailEntered ? 'right' : 'left'}\n        in={signUpAccount === undefined}\n        onEntered={() => {\n          setEmailEntered(true);\n          focusInput();\n        }}\n        unmountOnExit\n      >\n        <Box position=\"absolute\" width={1 / 4}>\n          <EmailForm\n            managementService={managementService}\n            onSignUp={setSignUpAccount}\n          />\n        </Box>\n      </Slide>\n      <Slide\n        direction={sites === undefined ? 'left' : 'right'}\n        in={signUpAccount !== undefined && sites === undefined}\n        onEntered={() => focusInput()}\n        onExited={() => {\n          if (signUpAccount !== undefined && sites !== undefined) {\n            onSignIn();\n          }\n        }}\n        unmountOnExit\n      >\n        <Box position=\"absolute\" width={1 / 4}>\n          <CodeForm\n            account={signUpAccount}\n            managementService={managementService}\n            onCancel={() => setSignUpAccount(undefined)}\n          />\n        </Box>\n      </Slide>\n    </FeatureContainer>\n  );\n};\n\nfunction focusInput(selector = 'input[name]'): void {\n  document.querySelector<HTMLInputElement>(selector)?.focus?.();\n}\n","import {\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Drawer,\n  IconButton,\n  styled,\n  Typography,\n} from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport { CSSProperties } from '@material-ui/system';\nimport React, { ReactElement, ReactNode } from 'react';\n\nexport type DialogDrawerProps = {\n  actions: ReactElement;\n  children: ReactNode;\n  onClose?: () => void;\n  onExited?: () => void;\n  open: boolean;\n  title: ReactNode;\n  width?: CSSProperties['width'];\n};\n\nconst DDTitle = styled(DialogTitle)(({ theme }) => ({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: theme.spacing(4),\n}));\n\nconst DDContent = styled(DialogContent)({\n  padding: '3em',\n});\n\nconst DDActions = styled(DialogActions)(({ theme }) => ({\n  backgroundColor: theme.palette.grey['50'],\n  borderTop: `solid 1px`,\n  borderTopColor: theme.palette.grey['200'],\n  padding: theme.spacing(4),\n}));\n\nexport const DialogDrawer: React.FC<DialogDrawerProps> = ({\n  actions,\n  children,\n  onClose,\n  onExited,\n  open,\n  title,\n  width = '35rem',\n}) => {\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n      SlideProps={{ onExited }}\n    >\n      <DDTitle>\n        <Typography component=\"span\" variant=\"h5\" style={{ flexGrow: 1 }}>\n          {title}\n        </Typography>\n        {onClose !== undefined ? (\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : undefined}\n      </DDTitle>\n      <DDContent sx={{ width }}>{children}</DDContent>\n      <DDActions>{actions}</DDActions>\n    </Drawer>\n  );\n};\n","import { Box, BoxProps, styled } from '@material-ui/core';\nimport React, { ReactElement } from 'react';\n\nexport type FirstActionProps = BoxProps & {\n  actionsComponent?: ReactElement | ReactElement[];\n  illustrationComponent: ReactElement | ReactElement[];\n};\n\nconst Container = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  maxWidth: '35em',\n});\n\nconst Illustration = styled(Box)(({ fontSize, theme }) => ({\n  '& svg': {\n    height: theme.typography.h1.fontSize,\n    opacity: 0.3,\n    width: theme.typography.h1.fontSize,\n  },\n  marginRight: theme.spacing(2),\n}));\n\nconst ContentContainer = styled(Box)({\n  alignSelf: 'stretch',\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n});\n\nconst Content = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  padding: `${theme.spacing(2)} 0`,\n}));\n\nconst Actions = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'flex-end',\n});\n\nexport const FirstAction: React.FC<FirstActionProps> = ({\n  actionsComponent,\n  children,\n  illustrationComponent,\n  ...boxProps\n}) => {\n  return (\n    <Container {...boxProps}>\n      <Illustration>{illustrationComponent}</Illustration>\n      <ContentContainer>\n        <Content>{children}</Content>\n        {actionsComponent !== undefined ? (\n          <Actions>{actionsComponent}</Actions>\n        ) : undefined}\n      </ContentContainer>\n    </Container>\n  );\n};\n","import { Box, BoxProps } from '@material-ui/core';\nimport React from 'react';\n\nexport type FlexProps = BoxProps & {\n  col?: boolean;\n};\n\nexport const Flex: React.FC<FlexProps> = ({\n  alignItems = 'center',\n  col = false,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      {...boxProps}\n      alignItems={alignItems}\n      sx={{\n        ...boxProps.sx,\n        display: 'flex',\n        flexDirection: col ? 'column' : 'row',\n      }}\n    />\n  );\n};\n\nexport type FlexItemProps = BoxProps & {\n  grow?: boolean;\n};\n\nexport const FlexItem: React.FC<FlexItemProps> = ({\n  grow = false,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      {...boxProps}\n      sx={{\n        ...boxProps.sx,\n        flexGrow: grow ? 1 : undefined,\n      }}\n    />\n  );\n};\n","import { FormHelperText, styled } from '@material-ui/core';\nimport React from 'react';\nimport ReactQuill from 'react-quill';\n\nexport type QuillWrapperProps = {\n  errorText?: string;\n  onBlur: () => void;\n  onChange: (html: string) => void;\n  value: string;\n};\n\nconst Container = styled('div')(({ theme }) => ({\n  '& > .quill.error': {\n    border: `solid 1px ${theme.palette.error.main}`,\n  },\n}));\n\nexport const QuillWrapper: React.FC<QuillWrapperProps> = ({\n  errorText,\n  onBlur,\n  onChange,\n  value,\n}) => {\n  return (\n    <Container>\n      <ReactQuill\n        className={errorText !== undefined ? 'error' : undefined}\n        onBlur={onBlur}\n        onChange={onChange}\n        value={value}\n      />\n      {errorText !== undefined ? (\n        <FormHelperText error>{errorText}</FormHelperText>\n      ) : undefined}\n    </Container>\n  );\n};\n","/* eslint-disable no-console */\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  IconButton,\n  styled,\n  Switch,\n  ToggleButton,\n  ToggleButtonGroup,\n  useTheme,\n} from '@material-ui/core';\nimport { Box, Typography } from '@material-ui/core';\nimport {\n  Add,\n  ArrowDownward,\n  ArrowUpward,\n  Delete,\n  Error,\n  ExpandMore,\n  SpeakerNotes,\n} from '@material-ui/icons';\nimport {\n  Formik,\n  Field,\n  FieldArray,\n  Form,\n  FormikProps,\n  FormikErrors,\n  FieldArrayRenderProps,\n} from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport React from 'react';\nimport { SchemaOf } from 'yup';\n\nimport { Tour } from '../../../api/src/domain/Tour';\nimport { TourStatus } from '../../../api/src/domain/TourStatus';\nimport { TourStep } from '../../../api/src/domain/TourStep';\nimport { ManagementService } from '../services/ManagementService';\nimport yup from '../validation/yup';\nimport { Button } from './Button';\nimport { DialogDrawer } from './DialogDrawer';\nimport { FirstAction } from './FirstAction';\nimport { Flex, FlexItem } from './Flex';\nimport { QuillWrapper } from './QuillWrapper';\n\nexport type EditTourDrawerProps = {\n  managementService: ManagementService;\n  onClose?: () => void;\n  onExited?: () => void;\n  onSave?: (tour: Tour) => void;\n  open: boolean;\n  siteId: string;\n  tour?: Tour;\n};\n\nconst SelectorTypeContainer = styled(FlexItem)(({ theme }) => ({\n  margin: theme.spacing(0.5),\n}));\n\nconst StepAccordionSummary = styled(AccordionSummary)(({ theme }) => ({\n  '& > div.MuiAccordionSummary-content': {\n    marginRight: theme.spacing(2),\n    minWidth: 0,\n  },\n}));\n\nconst selectorSchema: SchemaOf<Required<TourStep['selector']>> = yup\n  .object()\n  .shape({\n    type: yup.mixed<'css' | 'xpath'>().oneOf(['css', 'xpath']).default('css'),\n    value: yup\n      .string()\n      .when('type', {\n        is: 'xpath',\n        otherwise: yup.string().validCssSelector(),\n        then: yup.string().validXpathSelector(),\n      })\n      .default(''),\n  });\n\nconst stepSchema: SchemaOf<Omit<TourStep, 'id' | 'buttons'>> = yup\n  .object()\n  .shape({\n    html: yup\n      .string()\n      .required('Message is required')\n      .validNonEmptyHtml({ empty: 'Message requires some text' }),\n    mask: yup.boolean().required(),\n    selector: selectorSchema.notRequired(),\n  });\n\nconst tourSchema: SchemaOf<\n  Omit<Tour, 'id' | 'steps'> & { steps: Omit<TourStep, 'id' | 'buttons'>[] }\n> = yup.object().shape({\n  match: yup.object().shape({\n    regex: yup\n      .string()\n      .required('URL match expression is required')\n      .validRegex(),\n  }),\n  name: yup.string().required('Name is required'),\n  status: yup\n    .mixed<'draft' | 'published'>()\n    .oneOf(['draft', 'published'])\n    .default('draft'),\n  steps: yup.array().of(stepSchema),\n});\n\nexport const EditTourDrawer: React.FC<EditTourDrawerProps> = ({\n  managementService,\n  onClose = () => undefined,\n  onExited = () => undefined,\n  onSave = () => undefined,\n  open,\n  siteId,\n  tour,\n}) => {\n  const theme = useTheme();\n  const formRef = React.useRef<FormikProps<Tour>>(null);\n  const [formTour, setFormTour] = React.useState(() => mkTourEdit(tour));\n\n  const [changeStatus, setChangeStatus] = React.useState<TourStatus>();\n  const [stepExpansionState, setStepExpansionState] = React.useState<\n    Record<number, boolean>\n  >({});\n\n  React.useEffect(() => {\n    setFormTour(mkTourEdit(tour));\n    setStepExpansionState({});\n  }, [tour]);\n\n  function handleCreateStep(\n    formik: FormikProps<Tour>,\n    fieldArray: FieldArrayRenderProps,\n  ) {\n    setStepExpansionState({\n      [formik.values.steps.length]: true,\n    });\n    fieldArray.push(mkTourEditStep());\n  }\n\n  function doSubmit(status?: TourStatus) {\n    setChangeStatus(status);\n    if (formRef.current !== null) {\n      void formRef.current.submitForm();\n    }\n  }\n\n  return (\n    <DialogDrawer\n      actions={\n        <>\n          <Button onClick={() => onClose()} size=\"large\">\n            Cancel\n          </Button>\n          <Button onClick={() => doSubmit('draft')} size=\"large\">\n            {formTour?.id === '' || formTour?.status === 'draft'\n              ? 'Save draft'\n              : 'Save and unpublish'}\n          </Button>\n          <Button\n            onClick={() => doSubmit('published')}\n            size=\"large\"\n            variant=\"contained\"\n          >\n            {formTour?.id === ''\n              ? 'Publish'\n              : formTour?.status === 'draft'\n              ? 'Save and publish'\n              : 'Save'}\n          </Button>\n        </>\n      }\n      onClose={onClose}\n      onExited={onExited}\n      open={open}\n      title={formTour?.id === '' ? 'Create tour' : 'Edit tour'}\n    >\n      <Formik\n        initialValues={formTour}\n        innerRef={formRef}\n        onSubmit={async (tour, actions) => {\n          actions.setSubmitting(true);\n\n          // Clean the tour. Namely, remove selector objects whose value are blank\n          const toSave: Tour = {\n            ...tour,\n            status: changeStatus ?? formTour?.status ?? tour.status,\n            steps: tour.steps.map((step) => ({\n              ...step,\n              selector:\n                step.selector !== undefined && step.selector.value.trim() === ''\n                  ? undefined\n                  : step.selector,\n            })),\n          };\n\n          const result = await (toSave.id === ''\n            ? managementService.createTour(siteId, toSave)\n            : managementService.updateTour(siteId, toSave.id, toSave));\n          actions.setSubmitting(false);\n          onSave(result);\n        }}\n        validateOnChange={false}\n        validationSchema={tourSchema}\n      >\n        {(formik) => (\n          <Form>\n            <Typography mb={0.75} component=\"h2\" variant=\"subtitle1\">\n              Profile\n            </Typography>\n            <Field\n              component={TextField}\n              fullWidth\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"New account orientation\"\n              size=\"medium\"\n              validate\n              variant=\"outlined\"\n            />\n            <Typography mb={0.75} mt={2.5} component=\"h2\" variant=\"subtitle1\">\n              Criteria\n            </Typography>\n            <Field\n              component={TextField}\n              fullWidth\n              helperText=\"Enter a valid regular expression\"\n              label=\"URL match expression\"\n              name=\"match.regex\"\n              placeholder=\"/dashboard/?\"\n              size=\"medium\"\n              validate\n              variant=\"outlined\"\n            />\n            <FieldArray name=\"steps\">\n              {(fieldArray) => (\n                <>\n                  <Typography\n                    mb={0.75}\n                    mt={2.5}\n                    component=\"h2\"\n                    variant=\"subtitle1\"\n                  >\n                    <Flex>\n                      <FlexItem grow>Steps</FlexItem>\n                      <FlexItem>\n                        <IconButton\n                          color=\"primary\"\n                          onClick={() => handleCreateStep(formik, fieldArray)}\n                        >\n                          <Add />\n                        </IconButton>\n                      </FlexItem>\n                    </Flex>\n                  </Typography>\n                  {formik.values.steps.length === 0 ? (\n                    <Flex justifyContent=\"center\" width=\"100%\">\n                      <FirstAction\n                        actionsComponent={\n                          <Button\n                            color=\"primary\"\n                            onClick={() => handleCreateStep(formik, fieldArray)}\n                            variant=\"contained\"\n                          >\n                            Create Step\n                          </Button>\n                        }\n                        illustrationComponent={\n                          <SpeakerNotes\n                            style={{\n                              height: theme.typography.h2.fontSize,\n                              width: theme.typography.h2.fontSize,\n                            }}\n                          />\n                        }\n                        mt={2}\n                        style={{ maxWidth: '30rem' }}\n                      >\n                        A tour step is one message in a sequence of interactive\n                        message dialogs that are shown to your users when the\n                        tour criteria is met.\n                      </FirstAction>\n                    </Flex>\n                  ) : (\n                    <Box sx={{ width: '100%' }}>\n                      {formik.values.steps.map((step, i) => (\n                        <Accordion\n                          expanded={stepExpansionState[i] ?? false}\n                          key={i}\n                        >\n                          <StepAccordionSummary\n                            expandIcon={<ExpandMore />}\n                            onClick={() =>\n                              setStepExpansionState((ses) => ({ [i]: !ses[i] }))\n                            }\n                          >\n                            <FlexItem width=\"2rem\" mr={1}>\n                              <Typography variant=\"body1\" component=\"h3\">\n                                {i + 1}.\n                              </Typography>\n                            </FlexItem>\n                            <FlexItem\n                              flex=\"1\"\n                              minWidth=\"0\"\n                              overflow=\"hidden\"\n                              textOverflow=\"ellipsis\"\n                              whiteSpace=\"nowrap\"\n                            >\n                              <Typography\n                                variant=\"body2\"\n                                sx={{\n                                  display: 'inline',\n                                  opacity: 0.875,\n                                }}\n                              >\n                                {getTextFromHtml(step.html)}\n                              </Typography>\n                            </FlexItem>\n                            {hasInnerStepError(formik.errors, i) ? (\n                              <FlexItem\n                                color=\"error.main\"\n                                mr={1}\n                                sx={{ alignItems: 'center', display: 'flex' }}\n                              >\n                                <Error />\n                              </FlexItem>\n                            ) : undefined}\n                          </StepAccordionSummary>\n                          <AccordionDetails>\n                            <Flex justifyContent=\"flex-end\">\n                              <IconButton\n                                disabled={i === 0}\n                                onClick={() => {\n                                  setStepExpansionState((ses) => ({\n                                    ...ses,\n                                    [i - 1]: ses[i],\n                                    [i]: ses[i - 1],\n                                  }));\n                                  fieldArray.swap(i - 1, i);\n                                }}\n                                title=\"Move up\"\n                              >\n                                <ArrowUpward />\n                              </IconButton>\n                              <IconButton\n                                disabled={i === formik.values.steps.length - 1}\n                                onClick={() => {\n                                  setStepExpansionState((ses) => ({\n                                    ...ses,\n                                    [i + 1]: ses[i],\n                                    [i]: ses[i + 1],\n                                  }));\n                                  fieldArray.swap(i, i + 1);\n                                }}\n                                title=\"Move down\"\n                              >\n                                <ArrowDownward />\n                              </IconButton>\n                              <Box ml={2}>\n                                <Button\n                                  color=\"inherit\"\n                                  onClick={() => {\n                                    fieldArray.remove(i);\n                                    setStepExpansionState((ses) => ({\n                                      ...ses,\n                                      [i]: false,\n                                    }));\n                                  }}\n                                  startIcon={<Delete />}\n                                >\n                                  Delete\n                                </Button>\n                              </Box>\n                            </Flex>\n                            <Box my={2}>\n                              <QuillWrapper\n                                errorText={\n                                  formik.getFieldMeta(`steps[${i}].html`).error\n                                }\n                                onBlur={() => {\n                                  formik.setFieldTouched(\n                                    `steps[${i}].html`,\n                                    true,\n                                  );\n                                }}\n                                onChange={(html) => {\n                                  formik.setFieldValue(\n                                    `steps[${i}].html`,\n                                    html,\n                                  );\n                                }}\n                                value={formik.values.steps[i].html}\n                              />\n                            </Box>\n                            <Box my={2}>\n                              <FormControlLabel\n                                control={\n                                  <Switch\n                                    checked={formik.values.steps[i].mask}\n                                    onChange={() => {\n                                      formik.setFieldValue(\n                                        `steps[${i}].mask`,\n                                        !formik.values.steps[i].mask,\n                                      );\n                                    }}\n                                  />\n                                }\n                                label=\"Highlight the message\"\n                              />\n                            </Box>\n                            <Flex alignItems=\"flex-start\" my={2}>\n                              <FlexItem grow>\n                                <Field\n                                  component={TextField}\n                                  fullWidth\n                                  helperText=\"Use the CSS/XPath toggle to choose a selector format\"\n                                  label=\"Highlight element\"\n                                  name={`steps[${i}].selector.value`}\n                                  size=\"medium\"\n                                  variant=\"outlined\"\n                                />\n                              </FlexItem>\n                              <SelectorTypeContainer>\n                                <ToggleButtonGroup\n                                  onChange={() => {\n                                    // After the value change happens in the form, set the selector\n                                    // field as touched so it revalidates\n                                    setTimeout(() =>\n                                      formik.setFieldTouched(\n                                        `steps[${i}].selector.value`,\n                                        true,\n                                        true,\n                                      ),\n                                    );\n                                  }}\n                                  value={[\n                                    formik.values.steps[i].selector?.type ??\n                                      'css',\n                                  ]}\n                                >\n                                  <ToggleButton\n                                    onClick={() =>\n                                      formik.setFieldValue(\n                                        `steps[${i}].selector.type`,\n                                        'css',\n                                      )\n                                    }\n                                    value=\"css\"\n                                  >\n                                    CSS\n                                  </ToggleButton>\n                                  <ToggleButton\n                                    onClick={() =>\n                                      formik.setFieldValue(\n                                        `steps[${i}].selector.type`,\n                                        'xpath',\n                                      )\n                                    }\n                                    value=\"xpath\"\n                                  >\n                                    XPath\n                                  </ToggleButton>\n                                </ToggleButtonGroup>\n                              </SelectorTypeContainer>\n                            </Flex>\n                          </AccordionDetails>\n                        </Accordion>\n                      ))}\n                    </Box>\n                  )}\n                </>\n              )}\n            </FieldArray>\n          </Form>\n        )}\n      </Formik>\n    </DialogDrawer>\n  );\n};\n\nfunction hasInnerStepError(tour: FormikErrors<Tour>, stepIndex: number) {\n  if (tour.steps === undefined || typeof tour.steps === 'string') {\n    return false;\n  } else {\n    // If there is any prop with a value, then it's an error\n    const step = tour.steps[stepIndex];\n    return (\n      step !== undefined &&\n      Object.values(step).find((s) => s !== undefined) !== undefined\n    );\n  }\n}\n\nfunction getTextFromHtml(html: string): string {\n  try {\n    const text =\n      new DOMParser()\n        .parseFromString(html, 'text/html')\n        ?.body.textContent?.trim() ?? '';\n    return text === '' ? 'No content' : text;\n  } catch (err) {\n    return 'No content';\n  }\n}\n\nfunction mkTourEdit(tour?: Tour): Tour {\n  if (tour === undefined) {\n    return {\n      id: '',\n      match: {\n        regex: '',\n      },\n      name: '',\n      status: 'draft',\n      steps: [],\n    };\n  } else {\n    return {\n      ...tour,\n      steps: tour.steps.map(mkTourEditStep),\n    };\n  }\n}\n\nfunction mkTourEditStep(step?: TourStep): TourStep {\n  if (step === undefined) {\n    return {\n      html: '',\n      id: '',\n      mask: false,\n      selector: {\n        type: 'css',\n        value: '',\n      },\n    };\n  } else {\n    return step.selector !== undefined\n      ? step\n      : {\n          ...step,\n          selector: {\n            type: 'css',\n            value: '',\n          },\n        };\n  }\n}\n","import { Avatar, Box, Card, CardHeader, styled } from '@material-ui/core';\nimport { Map } from '@material-ui/icons';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Tour } from '../../../api/src/domain/Tour';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { Button } from './Button';\nimport { EditTourDrawer } from './EditTourDrawer';\nimport { FeatureContainer } from './FeatureContainer';\nimport { FirstAction } from './FirstAction';\nimport { Flex } from './Flex';\n\nexport type ToursScreenProps = {\n  managementService: ManagementService;\n};\n\nconst TourCard = styled(Card)(({ theme }) => ({\n  '&.published:before': {\n    backgroundColor: theme.palette.success.main,\n    boxShadow: `0px 0px 5px 1px ${theme.palette.success.main}`,\n  },\n  '&:before': {\n    backgroundColor: theme.palette.grey['300'],\n    borderRadius: theme.spacing(1.5),\n    content: '\" \"',\n    height: theme.spacing(1.5),\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    width: theme.spacing(1.5),\n  },\n}));\n\nexport const ToursScreen: React.FC<ToursScreenProps> = ({\n  managementService,\n}) => {\n  const { siteId } = useParams<{ siteId: string }>();\n  const [tours] = useObservable(\n    () => managementService.tours$,\n    [managementService],\n  );\n\n  const [tourEditOpen, setTourEditOpen] = React.useState(false);\n  const [tourEdit, setTourEdit] = React.useState<Tour>();\n\n  React.useEffect(() => {\n    void managementService.loadTours(siteId);\n  }, [managementService, siteId]);\n\n  return (\n    <>\n      {(() => {\n        if (tours !== undefined && tours.length > 0) {\n          return (\n            <Box width=\"100%\">\n              <Box my={3}>\n                <Button\n                  color=\"primary\"\n                  onClick={() => {\n                    setTourEdit(undefined);\n                    setTourEditOpen(true);\n                  }}\n                  variant=\"contained\"\n                >\n                  Create tour\n                </Button>\n              </Box>\n              <Flex flexWrap=\"wrap\" m={-1}>\n                {tours.map((tour) => (\n                  <Box key={tour.id} m={1} width=\"23%\">\n                    <TourCard\n                      className={tour.status}\n                      onClick={() => {\n                        setTourEdit(tour);\n                        setTourEditOpen(true);\n                      }}\n                      sx={{ cursor: 'pointer', position: 'relative' }}\n                    >\n                      <CardHeader\n                        avatar={\n                          <Avatar sx={{ bgcolor: 'blue' }}>\n                            {tour.name\n                              .split(/\\s+/)\n                              .map((w) => w[0]?.toUpperCase())\n                              .join('')}\n                          </Avatar>\n                        }\n                        title={tour.name}\n                      />\n                    </TourCard>\n                  </Box>\n                ))}\n              </Flex>\n            </Box>\n          );\n        } else if (tours !== undefined) {\n          return (\n            <FeatureContainer>\n              <FirstAction\n                actionsComponent={\n                  <Button\n                    onClick={() => {\n                      setTourEdit(undefined);\n                      setTourEditOpen(true);\n                    }}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Create tour\n                  </Button>\n                }\n                illustrationComponent={<Map />}\n              >\n                Create your first contextual, interactive experience for your\n                user that is tailored for your product or website.\n              </FirstAction>\n            </FeatureContainer>\n          );\n        }\n      })()}\n      <EditTourDrawer\n        managementService={managementService}\n        onClose={() => setTourEditOpen(false)}\n        onSave={() => setTourEditOpen(false)}\n        open={tourEditOpen}\n        siteId={siteId}\n        tour={tourEdit}\n      />\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport {\n  AppBar,\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  styled,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport React from 'react';\nimport {\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport { Site } from '../../../api/src/domain/Site';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { AccountDropdown } from './AccountDropdown';\nimport { InstallationScreen } from './InstallationScreen';\nimport { SignInScreen } from './SignInScreen';\nimport { ToursScreen } from './ToursScreen';\n\nconst ContentRoot = styled(Container)({\n  alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  width: '100%',\n});\n\nconst MenuContent = styled(Box)({\n  '& > a': {\n    border: 'solid 0.3em rgba(0, 0, 0, 0)',\n    borderLeftWidth: 0,\n    borderRadius: 0,\n    borderRightWidth: 0,\n    height: '100%',\n    padding: '0 2em',\n  },\n  '& > a.active': {\n    borderBottomColor: 'currentColor',\n  },\n  alignItems: 'center',\n  display: 'flex',\n  flexGrow: 1,\n  height: '100%',\n});\n\nconst MenuLogo = styled(BubbleChartIcon)(({ theme }) => ({\n  height: theme.typography.h5.fontSize,\n  marginRight: theme.spacing(1),\n  width: theme.typography.h5.fontSize,\n}));\n\nconst MenuTitle = styled(Typography)(({ theme }) => ({\n  marginRight: theme.spacing(4),\n}));\n\nconst Root = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh',\n});\n\nconst RootFullScreen = styled(Root)({\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: '100%',\n});\n\nconst managementService = new ManagementService();\n\n// Add the enactive script so we have enactive integration functionality on our own site\nconst enactiveScript = document.createElement('script');\nenactiveScript.src = `https://${\n  window.location.hostname\n}/integration/entrypoint.js?_=${Date.now()}`;\nenactiveScript.setAttribute(\n  'enactive.site-id',\n  '007b9009-5f1b-4e70-9c68-165c60003798',\n);\nenactiveScript.setAttribute('enactive.enabled', 'false');\ndocument.body.appendChild(enactiveScript);\n\nexport const AppRoot: React.FC = () => {\n  const [account] = useObservable(() => managementService.account$, []);\n  const [sites] = useObservable(() => managementService.sites$, []);\n  const [site, setSite] = React.useState<Site>();\n\n  const isToursView = useRouteMatch('/sites/:siteId/tours');\n  const isInstallationView = useRouteMatch('/sites/:siteId/installation');\n\n  const [waitingForSignIn, setWaitingForSignIn] = React.useState(false);\n  const signedIn = React.useMemo(() => {\n    if (\n      account !== null &&\n      account !== undefined &&\n      site !== undefined &&\n      !waitingForSignIn\n    ) {\n      return true;\n    } else if (account !== undefined) {\n      return false;\n    } else {\n      return undefined;\n    }\n  }, [account, site, waitingForSignIn]);\n\n  React.useEffect(() => {\n    void managementService.init();\n  }, []);\n\n  React.useEffect(() => {\n    if (account !== undefined) {\n      if (account === null) {\n        setWaitingForSignIn(true);\n        enactiveScript.removeAttribute('enactive.context.user.id');\n      } else {\n        enactiveScript.setAttribute('enactive.context.user.id', account.id);\n      }\n\n      // Don't enable the integration until we have resolved whether or not we are signed in right\n      // now, and only enable it if we are running on production host\n      if (window.location.hostname.indexOf('enactive.ac') !== -1) {\n        enactiveScript.setAttribute('enactive.enabled', 'true');\n      }\n    } else {\n      enactiveScript.setAttribute('enactive.enabled', 'false');\n    }\n  }, [account]);\n\n  React.useEffect(() => {\n    if (sites !== undefined) {\n      setSite(sites[0]);\n    } else {\n      setSite(undefined);\n    }\n  }, [sites]);\n\n  return (\n    <>\n      {signedIn !== undefined ? (\n        <Root>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <MenuLogo />\n              <MenuTitle variant=\"h6\">Enactive Management</MenuTitle>\n              <MenuContent>\n                {(() => {\n                  if (signedIn && site !== undefined) {\n                    return (\n                      <>\n                        <Button\n                          className={\n                            isToursView !== null ? 'active' : undefined\n                          }\n                          color=\"inherit\"\n                          component={RouterLink}\n                          to={`/sites/${site.id}/tours`}\n                        >\n                          Tours\n                        </Button>\n                        <Button\n                          className={\n                            isInstallationView !== null ? 'active' : undefined\n                          }\n                          color=\"inherit\"\n                          component={RouterLink}\n                          to={`/sites/${site.id}/installation`}\n                        >\n                          Installation\n                        </Button>\n                      </>\n                    );\n                  }\n                })()}\n              </MenuContent>\n              {(() => {\n                if (!signedIn) {\n                  return (\n                    <Button color=\"inherit\" component={RouterLink} to=\"/signin\">\n                      Sign In\n                    </Button>\n                  );\n                } else if (account !== null && account !== undefined) {\n                  return (\n                    <AccountDropdown\n                      account={account}\n                      onSignOut={() => managementService.logout()}\n                    />\n                  );\n                }\n              })()}\n            </Toolbar>\n          </AppBar>\n          <ContentRoot>\n            <Switch>\n              <Route exact path=\"/signin\">\n                {!signedIn ? (\n                  <SignInScreen\n                    managementService={managementService}\n                    onSignIn={() => setWaitingForSignIn(false)}\n                  />\n                ) : (\n                  <Redirect to=\"/\" />\n                )}\n              </Route>\n              <Route path=\"/\">\n                {(() => {\n                  if (signedIn && site !== undefined) {\n                    return (\n                      <Switch>\n                        <Route exact path=\"/\">\n                          <Redirect to={`/sites/${site.id}/tours`} />\n                        </Route>\n                        <Route exact path=\"/sites/:siteId/tours\">\n                          <ToursScreen managementService={managementService} />\n                        </Route>\n                        <Route exact path=\"/sites/:siteId/installation\">\n                          <InstallationScreen />\n                        </Route>\n                      </Switch>\n                    );\n                  } else {\n                    return <Redirect to=\"/signin\" />;\n                  }\n                })()}\n              </Route>\n            </Switch>\n          </ContentRoot>\n        </Root>\n      ) : (\n        <RootFullScreen>\n          <CircularProgress />\n        </RootFullScreen>\n      )}\n    </>\n  );\n};\n","import { CssBaseline, StyledEngineProvider } from '@material-ui/core';\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport { AppRoot } from './components/AppRoot';\n\nconst App: React.FC = () => {\n  return (\n    <StyledEngineProvider injectFirst>\n      <HashRouter>\n        <CssBaseline>\n          <AppRoot />\n        </CssBaseline>\n      </HashRouter>\n    </StyledEngineProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'typeface-roboto';\nimport 'react-quill/dist/quill.snow.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}