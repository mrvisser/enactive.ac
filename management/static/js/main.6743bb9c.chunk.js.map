{"version":3,"sources":["hooks/useObservable.ts","services/ManagementService.ts","components/AccountDropdown.tsx","components/Button.tsx","validation/yup.ts","components/DialogDrawer.tsx","components/FirstAction.tsx","components/Flex.tsx","components/EditTourDrawer.tsx","components/FeatureContainer.tsx","components/SiteScreen.tsx","components/HomeScreen.tsx","components/SignInScreen/CodeForm.tsx","components/SignInScreen/EmailForm.tsx","components/SignInScreen.tsx","components/AppRoot.tsx","App.tsx","index.tsx"],"names":["useObservable","observableGenerator","deps","initialValue","React","useState","value","setValue","cb","useCallback","useEffect","o","undefined","sub","subscribe","unsubscribe","ManagementService","axiosBase","axiosStatic","create","baseURL","URLSearchParams","window","location","search","slice","get","hostname","replace","axios","account$$","BehaviorSubject","sites$$","tours$$","account$","this","asObservable","sites$","tours$","next","email","post","id","account","data","accountId","code","defaults","headers","Authorization","btoa","response","loadSites","siteId","tours","req","tour","concat","tourId","put","map","t","sites","length","createSite","domain","site","push","AccountDropdown","buttonProps","onSignOut","anchorEl","useRef","open","setOpen","color","onClick","ev","ref","Popper","current","disablePortal","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","Button","disabled","key","k","useMemo","yup","test","path","createError","RegExp","err","message","document","querySelector","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","DDTitle","styled","DialogTitle","alignItems","display","justifyContent","marginBottom","theme","spacing","DDContent","DialogContent","padding","DDActions","DialogActions","backgroundColor","palette","grey","borderTop","borderTopColor","DialogDrawer","actions","children","onClose","onExited","title","width","Drawer","anchor","SlideProps","Typography","component","variant","style","flexGrow","IconButton","Close","sx","Container","Box","maxWidth","Illustration","fontSize","height","typography","h1","opacity","marginRight","ContentContainer","alignSelf","flexDirection","Content","Actions","FirstAction","actionsComponent","illustrationComponent","boxProps","Flex","col","FlexItem","grow","SelectorTypeContainer","margin","StepAccordionSummary","AccordionSummary","minWidth","selectorSchema","object","shape","type","mixed","oneOf","default","string","when","is","otherwise","validCssSelector","then","validXpathSelector","stepSchema","html","required","mask","boolean","selector","notRequired","tourSchema","match","regex","validRegex","name","status","steps","array","of","EditTourDrawer","managementService","onSave","useTheme","formRef","mkTourEdit","formTour","setFormTour","stepExpansionState","setStepExpansionState","handleCreateStep","formik","fieldArray","ses","values","mkTourEditStep","size","submitForm","initialValues","innerRef","onSubmit","a","setSubmitting","toSave","step","trim","createTour","updateTour","result","validateOnChange","validationSchema","mb","FormControlLabel","control","Switch","checked","onChange","setFieldValue","label","labelPlacement","TextField","fullWidth","placeholder","validate","mt","helperText","Add","SpeakerNotes","h2","i","Accordion","expanded","expandIcon","ExpandMore","mr","flex","overflow","textOverflow","whiteSpace","hasInnerStepError","errors","Error","AccordionDetails","swap","ArrowUpward","ArrowDownward","ml","remove","startIcon","Delete","my","minRows","multiline","ToggleButtonGroup","setTimeout","setFieldTouched","ToggleButton","stepIndex","Object","find","s","FeatureContainer","TourCard","Card","success","main","boxShadow","borderRadius","content","position","right","top","SiteScreen","useParams","tourEditOpen","setTourEditOpen","tourEdit","setTourEdit","loadTours","flexWrap","m","className","cursor","CardHeader","avatar","Avatar","bgcolor","split","w","toUpperCase","join","Map","HomeScreen","exact","codeSchema","matches","SignInButtonContainer","marginTop","textAlign","CodeForm","onCancel","onSignIn","authenticate","signInAccount","autoFocus","ButtonGroup","signInSchema","EmailForm","onSignUp","signUp","endIcon","ArrowForward","SignInScreen","emailEntered","setEmailEntered","signUpAccount","setSignUpAccount","Slide","direction","in","onEntered","unmountOnExit","ContentRoot","MenuContent","MenuLogo","BubbleChartIcon","h5","MenuTitle","Root","AppRoot","signedIn","setSignedIn","setSite","AppBar","Toolbar","RouterLink","to","signOut","App","StyledEngineProvider","injectFirst","CssBaseline","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6743bb9c.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { Observable } from 'rxjs';\n\nexport type ObserverFunction<T> = () => Observable<T> | undefined;\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n): [T | undefined];\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue: T,\n): [T];\n\n/**\n * A custom hook that exposes an observable as its latest emitted value.\n *\n * @param observableGenerator A factory function for the observable\n * @param deps The dependency array. When any of these dependencies changes, the observable will\n *   be regenerated.\n * @param initialValue The initial value of the observable value, before it emits its first value.\n *   When the dependency array changes, the value will not revert to the initial value.\n * @returns\n */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue?: T,\n): [typeof initialValue] {\n  const [value, setValue] = React.useState<T | typeof initialValue>(\n    initialValue,\n  );\n  const cb = React.useCallback(observableGenerator, deps);\n\n  /** When the callback changes, reinvoke it and subscribe to the new observable. */\n  React.useEffect(() => {\n    const o = cb();\n    if (o !== undefined) {\n      const sub = o.subscribe(setValue);\n      return () => sub.unsubscribe();\n    }\n  }, [cb]);\n\n  return [value];\n}\n","import axiosStatic, { AxiosInstance } from 'axios';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Account } from '../../../api/src/domain/Account';\nimport { CreateSiteRequest } from '../../../api/src/domain/CreateSite';\nimport {\n  CreateTourRequest,\n  CreateTourResponse,\n} from '../../../api/src/domain/CreateTour';\nimport { ListToursResponse } from '../../../api/src/domain/ListTours';\nimport { Site } from '../../../api/src/domain/Site';\nimport { Tour } from '../../../api/src/domain/Tour';\n\nexport class ManagementService {\n  private axios: AxiosInstance;\n\n  private readonly account$$ = new BehaviorSubject<Account | undefined>(\n    undefined,\n  );\n  private readonly sites$$ = new BehaviorSubject<Site[] | undefined>(undefined);\n  private readonly tours$$ = new BehaviorSubject<Tour[] | undefined>(undefined);\n\n  public readonly account$ = this.account$$.asObservable();\n  public readonly sites$ = this.sites$$.asObservable();\n  public readonly tours$ = this.tours$$.asObservable();\n\n  constructor(\n    private readonly axiosBase: AxiosInstance = axiosStatic.create({\n      baseURL: `${\n        new URLSearchParams(window.location.search.slice(1)).get('_devHost') ??\n        `https://api.${window.location.hostname.replace('www.', '')}`\n      }/api/v1/`,\n    }),\n  ) {\n    this.axios = axiosBase;\n  }\n\n  public async signOut(): Promise<void> {\n    this.tours$$.next(undefined);\n    this.sites$$.next(undefined);\n    this.account$$.next(undefined);\n    this.axios = this.axiosBase;\n  }\n\n  public async signUp(email: string): Promise<Account> {\n    const { data: account } = await this.axiosBase.post<Account>(\n      'management/signup',\n      {\n        email,\n        id: '',\n      },\n    );\n\n    this.account$$.next(account);\n    return account;\n  }\n\n  public async authenticate(accountId: string, code: string): Promise<Account> {\n    const axios = axiosStatic.create({\n      ...this.axiosBase.defaults,\n      headers: {\n        ...this.axiosBase.defaults.headers,\n        Authorization: `Basic ${window.btoa(`${accountId}:${code}`)}`,\n      },\n    });\n    const response = await axios.get<{ account: Account }>('management/me');\n    const { account } = response.data;\n\n    this.account$$.next(account);\n    this.axios = axios;\n    await this.loadSites(account);\n\n    return account;\n  }\n\n  public async loadTours(siteId: string): Promise<Tour[]> {\n    const response = await this.axios.get<ListToursResponse>(\n      `management/sites/${siteId}/tours`,\n    );\n\n    this.tours$$.next(response.data.tours);\n    return response.data.tours;\n  }\n\n  public async createTour(\n    siteId: string,\n    req: CreateTourRequest,\n  ): Promise<Tour> {\n    const response = await this.axios.post<CreateTourResponse>(\n      `management/sites/${siteId}/tours`,\n      req,\n    );\n    const tour = response.data.tour;\n    const tours = this.tours$$.value;\n    this.tours$$.next(tours === undefined ? [tour] : tours.concat([tour]));\n    return tour;\n  }\n\n  public async updateTour(\n    siteId: string,\n    tourId: string,\n    req: CreateTourRequest,\n  ): Promise<Tour> {\n    const response = await this.axios.put<CreateTourResponse>(\n      `management/sites/${siteId}/tours/${tourId}`,\n      req,\n    );\n    const tour = response.data.tour;\n    const tours = this.tours$$.value;\n    this.tours$$.next(\n      tours === undefined\n        ? [tour]\n        : tours.map((t) => (t.id === tour.id ? tour : t)),\n    );\n    return tour;\n  }\n\n  private async loadSites(account: Account): Promise<Site[]> {\n    const response = await this.axios.get<{ sites: Site[] }>(\n      'management/sites',\n    );\n    const sites = response.data.sites;\n\n    if (sites.length === 0) {\n      const site = await this.createSite({ domain: account.email, id: '' });\n      sites.push(site);\n    }\n\n    this.sites$$.next(sites);\n    return sites;\n  }\n\n  private async createSite(req: CreateSiteRequest): Promise<Site> {\n    const response = await this.axios.post<{ site: Site }>(\n      'management/sites',\n      req,\n    );\n    return response.data.site;\n  }\n}\n","import {\n  Button,\n  ButtonProps,\n  ClickAwayListener,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n} from '@material-ui/core';\nimport React from 'react';\n\nimport { Account } from '../../../api/src/domain/Account';\n\nexport type AccountDropdownButtonProps = {\n  account: Account;\n  buttonProps?: Omit<ButtonProps, 'children' | 'ref'>;\n  onSignOut: () => void;\n};\n\nexport const AccountDropdown: React.FC<AccountDropdownButtonProps> = ({\n  account,\n  buttonProps,\n  onSignOut,\n}) => {\n  const anchorEl = React.useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = React.useState(false);\n  return (\n    <>\n      <Button\n        color=\"inherit\"\n        {...buttonProps}\n        onClick={(ev) => {\n          setOpen(true);\n          buttonProps?.onClick?.(ev);\n        }}\n        ref={anchorEl}\n      >\n        {account.email}\n      </Button>\n      <Popper anchorEl={anchorEl.current} disablePortal open={open}>\n        <Paper>\n          <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <MenuList>\n              <MenuItem>\n                <Button onClick={() => onSignOut()}>Sign Out</Button>\n              </MenuItem>\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </>\n  );\n};\n","import { ButtonProps, Button as MuiButton } from '@material-ui/core';\nimport React from 'react';\n\nexport const Button: React.FC<ButtonProps> = ({\n  disabled = false,\n  key,\n  ...buttonProps\n}) => {\n  const k = React.useMemo(() => {\n    // Workaround: https://github.com/mui-org/material-ui/issues/26251\n    if (key === undefined && !disabled) {\n      return undefined;\n    } else if (key === undefined) {\n      return 'disabled';\n    } else if (!disabled) {\n      return key;\n    } else {\n      return `${key}-disabled`;\n    }\n  }, [disabled, key]);\n  return <MuiButton {...buttonProps} disabled={disabled} key={k} />;\n};\n","import * as yup from 'yup';\n\nyup.addMethod(yup.string, 'validRegex', function () {\n  return this.test('test-valid-regex', function (value) {\n    if (value !== undefined) {\n      const { path, createError } = this;\n\n      try {\n        new RegExp(value);\n        return true;\n      } catch (err) {\n        return createError({ message: err.message, path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validCssSelector', function () {\n  return this.test('test-valid-css-selector', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        document.querySelector(value);\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid CSS selector', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validXpathSelector', function () {\n  return this.test('test-valid-xpath-selector', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        document.evaluate(\n          value,\n          document,\n          null,\n          XPathResult.FIRST_ORDERED_NODE_TYPE,\n          null,\n        );\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid XPath selector', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\ndeclare module 'yup' {\n  interface StringSchema {\n    validCssSelector(): this;\n    validRegex(): this;\n    validXpathSelector(): this;\n  }\n}\n\nexport default yup;\n","import {\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Drawer,\n  IconButton,\n  styled,\n  Typography,\n} from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport { CSSProperties } from '@material-ui/system';\nimport React, { ReactElement, ReactNode } from 'react';\n\nexport type DialogDrawerProps = {\n  actions: ReactElement;\n  children: ReactNode;\n  onClose?: () => void;\n  onExited?: () => void;\n  open: boolean;\n  title: ReactNode;\n  width?: CSSProperties['width'];\n};\n\nconst DDTitle = styled(DialogTitle)(({ theme }) => ({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: theme.spacing(4),\n}));\n\nconst DDContent = styled(DialogContent)({\n  padding: '3em',\n});\n\nconst DDActions = styled(DialogActions)(({ theme }) => ({\n  backgroundColor: theme.palette.grey['50'],\n  borderTop: `solid 1px`,\n  borderTopColor: theme.palette.grey['200'],\n  padding: theme.spacing(4),\n}));\n\nexport const DialogDrawer: React.FC<DialogDrawerProps> = ({\n  actions,\n  children,\n  onClose,\n  onExited,\n  open,\n  title,\n  width = '35rem',\n}) => {\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n      SlideProps={{ onExited }}\n    >\n      <DDTitle>\n        <Typography component=\"span\" variant=\"h5\" style={{ flexGrow: 1 }}>\n          {title}\n        </Typography>\n        {onClose !== undefined ? (\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : undefined}\n      </DDTitle>\n      <DDContent sx={{ width }}>{children}</DDContent>\n      <DDActions>{actions}</DDActions>\n    </Drawer>\n  );\n};\n","import { Box, BoxProps, styled } from '@material-ui/core';\nimport React, { ReactElement } from 'react';\n\nexport type FirstActionProps = BoxProps & {\n  actionsComponent?: ReactElement | ReactElement[];\n  illustrationComponent: ReactElement | ReactElement[];\n};\n\nconst Container = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  maxWidth: '35em',\n});\n\nconst Illustration = styled(Box)(({ fontSize, theme }) => ({\n  '& svg': {\n    height: theme.typography.h1.fontSize,\n    opacity: 0.3,\n    width: theme.typography.h1.fontSize,\n  },\n  marginRight: theme.spacing(2),\n}));\n\nconst ContentContainer = styled(Box)({\n  alignSelf: 'stretch',\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n});\n\nconst Content = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  padding: `${theme.spacing(2)} 0`,\n}));\n\nconst Actions = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'flex-end',\n});\n\nexport const FirstAction: React.FC<FirstActionProps> = ({\n  actionsComponent,\n  children,\n  illustrationComponent,\n  ...boxProps\n}) => {\n  return (\n    <Container {...boxProps}>\n      <Illustration>{illustrationComponent}</Illustration>\n      <ContentContainer>\n        <Content>{children}</Content>\n        {actionsComponent !== undefined ? (\n          <Actions>{actionsComponent}</Actions>\n        ) : undefined}\n      </ContentContainer>\n    </Container>\n  );\n};\n","import { Box, BoxProps } from '@material-ui/core';\nimport React from 'react';\n\nexport type FlexProps = BoxProps & {\n  col?: boolean;\n};\n\nexport const Flex: React.FC<FlexProps> = ({\n  alignItems = 'center',\n  col = false,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      {...boxProps}\n      sx={{\n        ...boxProps.sx,\n        display: 'flex',\n        flexDirection: col ? 'column' : 'row',\n      }}\n    />\n  );\n};\n\nexport type FlexItemProps = BoxProps & {\n  grow?: boolean;\n};\n\nexport const FlexItem: React.FC<FlexItemProps> = ({\n  grow = false,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      {...boxProps}\n      sx={{\n        ...boxProps.sx,\n        flexGrow: grow ? 1 : undefined,\n      }}\n    />\n  );\n};\n","/* eslint-disable no-console */\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  IconButton,\n  styled,\n  Switch,\n  ToggleButton,\n  ToggleButtonGroup,\n  useTheme,\n} from '@material-ui/core';\nimport { Box, Typography } from '@material-ui/core';\nimport {\n  Add,\n  ArrowDownward,\n  ArrowUpward,\n  Delete,\n  Error,\n  ExpandMore,\n  SpeakerNotes,\n} from '@material-ui/icons';\nimport {\n  Formik,\n  Field,\n  FieldArray,\n  Form,\n  FormikProps,\n  FormikErrors,\n  FieldArrayRenderProps,\n} from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport React from 'react';\nimport { SchemaOf } from 'yup';\n\nimport { Tour } from '../../../api/src/domain/Tour';\nimport { TourStep } from '../../../api/src/domain/TourStep';\nimport { ManagementService } from '../services/ManagementService';\nimport yup from '../validation/yup';\nimport { Button } from './Button';\nimport { DialogDrawer } from './DialogDrawer';\nimport { FirstAction } from './FirstAction';\nimport { Flex, FlexItem } from './Flex';\n\nexport type EditTourDrawerProps = {\n  managementService: ManagementService;\n  onClose?: () => void;\n  onExited?: () => void;\n  onSave?: (tour: Tour) => void;\n  open: boolean;\n  siteId: string;\n  tour?: Tour;\n};\n\nconst SelectorTypeContainer = styled(FlexItem)(({ theme }) => ({\n  margin: theme.spacing(0.5),\n}));\n\nconst StepAccordionSummary = styled(AccordionSummary)(({ theme }) => ({\n  '& > div.MuiAccordionSummary-content': {\n    marginRight: theme.spacing(2),\n    minWidth: 0,\n  },\n}));\n\nconst selectorSchema: SchemaOf<Required<TourStep['selector']>> = yup\n  .object()\n  .shape({\n    type: yup.mixed<'css' | 'xpath'>().oneOf(['css', 'xpath']).default('css'),\n    value: yup\n      .string()\n      .when('type', {\n        is: 'xpath',\n        otherwise: yup.string().validCssSelector(),\n        then: yup.string().validXpathSelector(),\n      })\n      .default(''),\n  });\n\nconst stepSchema: SchemaOf<Omit<TourStep, 'id' | 'buttons'>> = yup\n  .object()\n  .shape({\n    html: yup.string().required('Message is required'),\n    mask: yup.boolean().required(),\n    selector: selectorSchema.notRequired(),\n  });\n\nconst tourSchema: SchemaOf<\n  Omit<Tour, 'id' | 'steps'> & { steps: Omit<TourStep, 'id' | 'buttons'>[] }\n> = yup.object().shape({\n  match: yup.object().shape({\n    regex: yup\n      .string()\n      .required('URL match expression is required')\n      .validRegex(),\n  }),\n  name: yup.string().required('Name is required'),\n  status: yup\n    .mixed<'draft' | 'published'>()\n    .oneOf(['draft', 'published'])\n    .default('draft'),\n  steps: yup.array().of(stepSchema),\n});\n\nexport const EditTourDrawer: React.FC<EditTourDrawerProps> = ({\n  managementService,\n  onClose = () => undefined,\n  onExited = () => undefined,\n  onSave = () => undefined,\n  open,\n  siteId,\n  tour,\n}) => {\n  const theme = useTheme();\n  const formRef = React.useRef<FormikProps<Tour>>(null);\n  const [formTour, setFormTour] = React.useState(() => mkTourEdit(tour));\n\n  const [stepExpansionState, setStepExpansionState] = React.useState<\n    Record<number, boolean>\n  >({});\n\n  React.useEffect(() => {\n    setFormTour(mkTourEdit(tour));\n    setStepExpansionState({});\n  }, [tour]);\n\n  function handleCreateStep(\n    formik: FormikProps<Tour>,\n    fieldArray: FieldArrayRenderProps,\n  ) {\n    setStepExpansionState((ses) => ({\n      [formik.values.steps.length]: true,\n    }));\n    fieldArray.push(mkTourEditStep());\n  }\n\n  return (\n    <DialogDrawer\n      actions={\n        <>\n          <Button onClick={() => onClose()} size=\"large\">\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              if (formRef.current !== null) {\n                void formRef.current.submitForm();\n              }\n            }}\n            size=\"large\"\n            variant=\"contained\"\n          >\n            {formTour?.id === '' ? 'Create' : 'Save'}\n          </Button>\n        </>\n      }\n      onClose={onClose}\n      onExited={onExited}\n      open={open}\n      title={formTour?.id === '' ? 'Create tour' : 'Edit tour'}\n    >\n      <Formik\n        initialValues={formTour}\n        innerRef={formRef}\n        onSubmit={async (tour, actions) => {\n          actions.setSubmitting(true);\n\n          // Clean the tour. Namely, remove selector objects whose value are blank\n          const toSave: Tour = {\n            ...tour,\n            steps: tour.steps.map((step) => ({\n              ...step,\n              selector:\n                step.selector !== undefined && step.selector.value.trim() === ''\n                  ? undefined\n                  : step.selector,\n            })),\n          };\n\n          const result = await (toSave.id === ''\n            ? managementService.createTour(siteId, toSave)\n            : managementService.updateTour(siteId, toSave.id, toSave));\n          actions.setSubmitting(false);\n          onSave(result);\n        }}\n        validateOnChange={false}\n        validationSchema={tourSchema}\n      >\n        {(formik) => (\n          <Form>\n            <Flex justifyContent=\"flex-end\" mb={2}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    color=\"success\"\n                    checked={formik.values.status === 'published'}\n                    onChange={() => {\n                      formik.setFieldValue(\n                        'status',\n                        formik.values.status === 'published'\n                          ? 'draft'\n                          : 'published',\n                      );\n                    }}\n                  />\n                }\n                label=\"Published\"\n                labelPlacement=\"start\"\n              />\n            </Flex>\n            <Typography mb={0.75} component=\"h2\" variant=\"subtitle1\">\n              Profile\n            </Typography>\n            <Field\n              component={TextField}\n              fullWidth\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"New account orientation\"\n              size=\"medium\"\n              validate\n              variant=\"outlined\"\n            />\n            <Typography mb={0.75} mt={2.5} component=\"h2\" variant=\"subtitle1\">\n              Criteria\n            </Typography>\n            <Field\n              component={TextField}\n              fullWidth\n              helperText=\"Enter a valid regular expression\"\n              label=\"URL match expression\"\n              name=\"match.regex\"\n              placeholder=\"/dashboard/?\"\n              size=\"medium\"\n              validate\n              variant=\"outlined\"\n            />\n            <FieldArray name=\"steps\">\n              {(fieldArray) => (\n                <>\n                  <Typography\n                    mb={0.75}\n                    mt={2.5}\n                    component=\"h2\"\n                    variant=\"subtitle1\"\n                  >\n                    <Flex>\n                      <FlexItem grow>Steps</FlexItem>\n                      <FlexItem>\n                        <IconButton\n                          color=\"primary\"\n                          onClick={() => handleCreateStep(formik, fieldArray)}\n                        >\n                          <Add />\n                        </IconButton>\n                      </FlexItem>\n                    </Flex>\n                  </Typography>\n                  {formik.values.steps.length === 0 ? (\n                    <Flex justifyContent=\"center\" width=\"100%\">\n                      <FirstAction\n                        actionsComponent={\n                          <Button\n                            color=\"primary\"\n                            onClick={() => handleCreateStep(formik, fieldArray)}\n                            variant=\"contained\"\n                          >\n                            Create Step\n                          </Button>\n                        }\n                        illustrationComponent={\n                          <SpeakerNotes\n                            style={{\n                              height: theme.typography.h2.fontSize,\n                              width: theme.typography.h2.fontSize,\n                            }}\n                          />\n                        }\n                        mt={2}\n                        style={{ maxWidth: '30rem' }}\n                      >\n                        A tour step is one of several interactive message\n                        dialogs that are shown to your users in the context that\n                        you want them to show.\n                      </FirstAction>\n                    </Flex>\n                  ) : (\n                    <Box sx={{ width: '100%' }}>\n                      {formik.values.steps.map((step, i) => (\n                        <Accordion\n                          expanded={stepExpansionState[i] ?? false}\n                          key={i}\n                        >\n                          <StepAccordionSummary\n                            expandIcon={<ExpandMore />}\n                            onClick={() =>\n                              setStepExpansionState((ses) => ({\n                                ...ses,\n                                [i]: !ses[i],\n                              }))\n                            }\n                          >\n                            <FlexItem width=\"2rem\" mr={1}>\n                              <Typography variant=\"body1\" component=\"h3\">\n                                {i + 1}.\n                              </Typography>\n                            </FlexItem>\n                            <FlexItem\n                              flex=\"1\"\n                              minWidth=\"0\"\n                              overflow=\"hidden\"\n                              textOverflow=\"ellipsis\"\n                              whiteSpace=\"nowrap\"\n                            >\n                              <Typography\n                                variant=\"body2\"\n                                sx={{\n                                  display: 'inline',\n                                  opacity: 0.875,\n                                }}\n                              >\n                                {step.html.trim() === ''\n                                  ? 'No content'\n                                  : step.html}\n                              </Typography>\n                            </FlexItem>\n                            {hasInnerStepError(formik.errors, i) ? (\n                              <FlexItem\n                                color=\"error.main\"\n                                mr={1}\n                                sx={{ alignItems: 'center', display: 'flex' }}\n                              >\n                                <Error />\n                              </FlexItem>\n                            ) : undefined}\n                          </StepAccordionSummary>\n                          <AccordionDetails>\n                            <Flex justifyContent=\"flex-end\">\n                              <IconButton\n                                disabled={i === 0}\n                                onClick={() => {\n                                  setStepExpansionState((ses) => ({\n                                    ...ses,\n                                    [i - 1]: ses[i],\n                                    [i]: ses[i - 1],\n                                  }));\n                                  fieldArray.swap(i - 1, i);\n                                }}\n                                title=\"Move up\"\n                              >\n                                <ArrowUpward />\n                              </IconButton>\n                              <IconButton\n                                disabled={i === formik.values.steps.length - 1}\n                                onClick={() => {\n                                  setStepExpansionState((ses) => ({\n                                    ...ses,\n                                    [i + 1]: ses[i],\n                                    [i]: ses[i + 1],\n                                  }));\n                                  fieldArray.swap(i, i + 1);\n                                }}\n                                title=\"Move down\"\n                              >\n                                <ArrowDownward />\n                              </IconButton>\n                              <Box ml={2}>\n                                <Button\n                                  color=\"inherit\"\n                                  onClick={() => {\n                                    fieldArray.remove(i);\n                                    setStepExpansionState((ses) => ({\n                                      ...ses,\n                                      [i]: false,\n                                    }));\n                                  }}\n                                  startIcon={<Delete />}\n                                >\n                                  Delete\n                                </Button>\n                              </Box>\n                            </Flex>\n                            <Box my={2}>\n                              <Field\n                                component={TextField}\n                                fullWidth\n                                label=\"Message\"\n                                minRows={4}\n                                multiline\n                                name={`steps[${i}].html`}\n                                size=\"medium\"\n                                validate\n                                variant=\"outlined\"\n                              />\n                            </Box>\n                            <Box my={2}>\n                              <FormControlLabel\n                                control={\n                                  <Field\n                                    component={Switch}\n                                    name={`steps[${i}].mask`}\n                                  />\n                                }\n                                label=\"Highlight the message\"\n                              />\n                            </Box>\n                            <Flex alignItems=\"flex-start\" my={2}>\n                              <FlexItem grow>\n                                <Field\n                                  component={TextField}\n                                  fullWidth\n                                  helperText=\"Use the CSS/XPath toggle to choose a selector format\"\n                                  label=\"Highlight element\"\n                                  name={`steps[${i}].selector.value`}\n                                  size=\"medium\"\n                                  variant=\"outlined\"\n                                />\n                              </FlexItem>\n                              <SelectorTypeContainer>\n                                <ToggleButtonGroup\n                                  onChange={() => {\n                                    // After the value change happens in the form, set the selector\n                                    // field as touched so it revalidates\n                                    setTimeout(() =>\n                                      formik.setFieldTouched(\n                                        `steps[${i}].selector.value`,\n                                        true,\n                                        true,\n                                      ),\n                                    );\n                                  }}\n                                  value={[\n                                    formik.values.steps[i].selector?.type ??\n                                      'css',\n                                  ]}\n                                >\n                                  <ToggleButton\n                                    onClick={() =>\n                                      formik.setFieldValue(\n                                        `steps[${i}].selector.type`,\n                                        'css',\n                                      )\n                                    }\n                                    value=\"css\"\n                                  >\n                                    CSS\n                                  </ToggleButton>\n                                  <ToggleButton\n                                    onClick={() =>\n                                      formik.setFieldValue(\n                                        `steps[${i}].selector.type`,\n                                        'xpath',\n                                      )\n                                    }\n                                    value=\"xpath\"\n                                  >\n                                    XPath\n                                  </ToggleButton>\n                                </ToggleButtonGroup>\n                              </SelectorTypeContainer>\n                            </Flex>\n                          </AccordionDetails>\n                        </Accordion>\n                      ))}\n                    </Box>\n                  )}\n                </>\n              )}\n            </FieldArray>\n          </Form>\n        )}\n      </Formik>\n    </DialogDrawer>\n  );\n};\n\nfunction hasInnerStepError(tour: FormikErrors<Tour>, stepIndex: number) {\n  if (tour.steps === undefined || typeof tour.steps === 'string') {\n    return false;\n  } else {\n    // If there is any prop with a value, then it's an error\n    const step = tour.steps[stepIndex];\n    return (\n      step !== undefined &&\n      Object.values(step).find((s) => s !== undefined) !== undefined\n    );\n  }\n}\n\nfunction mkTourEdit(tour?: Tour): Tour {\n  if (tour === undefined) {\n    return {\n      id: '',\n      match: {\n        regex: '',\n      },\n      name: '',\n      status: 'draft',\n      steps: [],\n    };\n  } else {\n    return {\n      ...tour,\n      steps: tour.steps.map(mkTourEditStep),\n    };\n  }\n}\n\nfunction mkTourEditStep(step?: TourStep): TourStep {\n  if (step === undefined) {\n    return {\n      html: '',\n      id: '',\n      mask: false,\n      selector: {\n        type: 'css',\n        value: '',\n      },\n    };\n  } else {\n    return step.selector !== undefined\n      ? step\n      : {\n          ...step,\n          selector: {\n            type: 'css',\n            value: '',\n          },\n        };\n  }\n}\n","import { Container, styled } from '@material-ui/core';\n\nexport const FeatureContainer = styled(Container)({\n  alignItems: 'center',\n  display: 'flex',\n  flexGrow: 1,\n  justifyContent: 'center',\n  width: '100%',\n});\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  styled,\n  Typography,\n} from '@material-ui/core';\nimport { Map } from '@material-ui/icons';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Tour } from '../../../api/src/domain/Tour';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { Button } from './Button';\nimport { EditTourDrawer } from './EditTourDrawer';\nimport { FeatureContainer } from './FeatureContainer';\nimport { FirstAction } from './FirstAction';\nimport { Flex } from './Flex';\n\nexport type SitesScreenProps = {\n  managementService: ManagementService;\n};\n\nconst TourCard = styled(Card)(({ theme }) => ({\n  '&.published:before': {\n    backgroundColor: theme.palette.success.main,\n    boxShadow: `0px 0px 5px 1px ${theme.palette.success.main}`,\n  },\n  '&:before': {\n    backgroundColor: theme.palette.grey['300'],\n    borderRadius: theme.spacing(1.5),\n    content: '\" \"',\n    height: theme.spacing(1.5),\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    width: theme.spacing(1.5),\n  },\n}));\n\nexport const SiteScreen: React.FC<SitesScreenProps> = ({\n  managementService,\n}) => {\n  const { siteId } = useParams<{ siteId: string }>();\n  const [tours] = useObservable(\n    () => managementService.tours$,\n    [managementService],\n  );\n\n  const [tourEditOpen, setTourEditOpen] = React.useState(false);\n  const [tourEdit, setTourEdit] = React.useState<Tour>();\n\n  React.useEffect(() => {\n    void managementService.loadTours(siteId);\n  }, [managementService, siteId]);\n\n  return (\n    <>\n      {(() => {\n        if (tours !== undefined && tours.length > 0) {\n          return (\n            <Box width=\"100%\">\n              <Typography component=\"h2\" my={3} variant=\"h2\">\n                Tours\n              </Typography>\n              <Box my={3}>\n                <Button\n                  color=\"primary\"\n                  onClick={() => {\n                    setTourEdit(undefined);\n                    setTourEditOpen(true);\n                  }}\n                  variant=\"contained\"\n                >\n                  Create tour\n                </Button>\n              </Box>\n              <Flex flexWrap=\"wrap\" m={-1}>\n                {tours.map((tour) => (\n                  <Box key={tour.id} m={1} width=\"23%\">\n                    <TourCard\n                      className={tour.status}\n                      onClick={() => {\n                        setTourEdit(tour);\n                        setTourEditOpen(true);\n                      }}\n                      sx={{ cursor: 'pointer', position: 'relative' }}\n                    >\n                      <CardHeader\n                        avatar={\n                          <Avatar sx={{ bgcolor: 'blue' }}>\n                            {tour.name\n                              .split(/\\s+/)\n                              .map((w) => w[0]?.toUpperCase())\n                              .join('')}\n                          </Avatar>\n                        }\n                        title={tour.name}\n                      />\n                    </TourCard>\n                  </Box>\n                ))}\n              </Flex>\n            </Box>\n          );\n        } else if (tours !== undefined) {\n          return (\n            <FeatureContainer>\n              <FirstAction\n                actionsComponent={\n                  <Button\n                    onClick={() => {\n                      setTourEdit(undefined);\n                      setTourEditOpen(true);\n                    }}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Create tour\n                  </Button>\n                }\n                illustrationComponent={<Map />}\n              >\n                Create your first contextual, interactive experience for your\n                user that is tailored for your website or product.\n              </FirstAction>\n            </FeatureContainer>\n          );\n        }\n      })()}\n      <EditTourDrawer\n        managementService={managementService}\n        onClose={() => setTourEditOpen(false)}\n        onSave={() => setTourEditOpen(false)}\n        open={tourEditOpen}\n        siteId={siteId}\n        tour={tourEdit}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { ManagementService } from '../services/ManagementService';\nimport { SiteScreen } from './SiteScreen';\n\nexport type HomeScreenProps = {\n  managementService: ManagementService;\n};\n\nexport const HomeScreen: React.FC<HomeScreenProps> = ({\n  managementService,\n}) => {\n  return (\n    <Switch>\n      <Route exact path=\"/sites/:siteId\">\n        <SiteScreen managementService={managementService} />\n      </Route>\n    </Switch>\n  );\n};\n","import { Box, ButtonGroup, styled } from '@material-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nimport { Account } from '../../../../api/src/domain/Account';\nimport { ManagementService } from '../../services/ManagementService';\nimport yup from '../../validation/yup';\nimport { Button } from '../Button';\n\nexport type CodeFormProps = {\n  account: Account | undefined;\n  managementService: ManagementService;\n  onCancel: () => void;\n  onSignIn?: (account: Account) => void;\n};\n\nconst codeSchema = yup.object().shape({\n  code: yup\n    .string()\n    .required('A 6-digit code is required')\n    .matches(/[0-9]{6}/, { message: 'A valid 6-digit code is required' }),\n});\n\nconst SignInButtonContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  textAlign: 'right',\n}));\n\nexport const CodeForm: React.FC<CodeFormProps> = ({\n  account,\n  managementService,\n  onCancel,\n  onSignIn = () => undefined,\n}) => {\n  return (\n    <Formik\n      initialValues={{ code: '' }}\n      onSubmit={async (values, actions) => {\n        if (account !== undefined) {\n          actions.setSubmitting(true);\n          const signInAccount = await managementService.authenticate(\n            account.id,\n            values.code,\n          );\n          actions.setSubmitting(false);\n          onSignIn(signInAccount);\n        }\n      }}\n      validationSchema={codeSchema}\n    >\n      {(formik) => (\n        <Form>\n          <Field\n            autoFocus\n            component={TextField}\n            fullWidth\n            helperText=\"Check your email and copy your 6 digit sign-in code into this field.\"\n            label=\"Sign-in code\"\n            name=\"code\"\n          />\n          <SignInButtonContainer>\n            <ButtonGroup>\n              <Button onClick={onCancel} size=\"large\">\n                Cancel\n              </Button>\n              <Button\n                onClick={() => formik.submitForm()}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Sign In\n              </Button>\n            </ButtonGroup>\n          </SignInButtonContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { Box, ButtonGroup, styled } from '@material-ui/core';\nimport { ArrowForward } from '@material-ui/icons';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nimport { Account } from '../../../../api/src/domain/Account';\nimport { ManagementService } from '../../services/ManagementService';\nimport yup from '../../validation/yup';\nimport { Button } from '../Button';\n\nexport type EmailFormProps = {\n  managementService: ManagementService;\n  onSignUp: (account: Account) => void;\n};\n\nconst signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .required('Email address is required')\n    .email('Invalid email address'),\n});\n\nconst SignInButtonContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  textAlign: 'right',\n}));\n\nexport const EmailForm: React.FC<EmailFormProps> = ({\n  managementService,\n  onSignUp,\n}) => {\n  return (\n    <Formik\n      initialValues={{ email: '' }}\n      onSubmit={async (values, actions) => {\n        actions.setSubmitting(true);\n        const account = await managementService.signUp(values.email);\n        actions.setSubmitting(false);\n        onSignUp(account);\n      }}\n      validationSchema={signInSchema}\n    >\n      {(formik) => (\n        <Form>\n          <Field\n            autoFocus\n            component={TextField}\n            fullWidth\n            helperText=\"We'll send you a sign-in code to this email address.\"\n            label=\"Email address\"\n            name=\"email\"\n          />\n          <SignInButtonContainer>\n            <ButtonGroup>\n              <Button\n                endIcon={<ArrowForward />}\n                onClick={() => formik.submitForm()}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Next\n              </Button>\n            </ButtonGroup>\n          </SignInButtonContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { Box, Slide } from '@material-ui/core';\nimport React from 'react';\n\nimport { Account } from '../../../api/src/domain/Account';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { FeatureContainer } from './FeatureContainer';\nimport { CodeForm } from './SignInScreen/CodeForm';\nimport { EmailForm } from './SignInScreen/EmailForm';\n\nexport type SignInScreenProps = {\n  managementService: ManagementService;\n  onSignIn: () => void;\n};\n\nexport const SignInScreen: React.FC<SignInScreenProps> = ({\n  managementService,\n  onSignIn,\n}) => {\n  const [emailEntered, setEmailEntered] = React.useState(false);\n  const [signUpAccount, setSignUpAccount] = React.useState<Account>();\n  const [sites] = useObservable(\n    () => managementService.sites$,\n    [managementService],\n  );\n\n  return (\n    <FeatureContainer>\n      <Slide\n        direction={emailEntered ? 'right' : 'left'}\n        in={signUpAccount === undefined}\n        onEntered={() => setEmailEntered(true)}\n        unmountOnExit\n      >\n        <Box position=\"absolute\" width={1 / 4}>\n          <EmailForm\n            managementService={managementService}\n            onSignUp={setSignUpAccount}\n          />\n        </Box>\n      </Slide>\n      <Slide\n        direction={sites === undefined ? 'left' : 'right'}\n        in={signUpAccount !== undefined && sites === undefined}\n        onExited={() => {\n          if (signUpAccount !== undefined && sites !== undefined) {\n            onSignIn();\n          }\n        }}\n        unmountOnExit\n      >\n        <Box position=\"absolute\" width={1 / 4}>\n          <CodeForm\n            account={signUpAccount}\n            managementService={managementService}\n            onCancel={() => setSignUpAccount(undefined)}\n          />\n        </Box>\n      </Slide>\n    </FeatureContainer>\n  );\n};\n","/* eslint-disable no-console */\nimport {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  styled,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport React from 'react';\nimport { Link as RouterLink, Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Site } from '../../../api/src/domain/Site';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { AccountDropdown } from './AccountDropdown';\nimport { HomeScreen } from './HomeScreen';\nimport { SignInScreen } from './SignInScreen';\n\nconst ContentRoot = styled(Container)({\n  alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  width: '100%',\n});\n\nconst MenuContent = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  flexGrow: 1,\n  height: '100%',\n});\n\nconst MenuLogo = styled(BubbleChartIcon)(({ theme }) => ({\n  height: theme.typography.h5.fontSize,\n  marginRight: theme.spacing(1),\n  width: theme.typography.h5.fontSize,\n}));\n\nconst MenuTitle = styled(Typography)(({ theme }) => ({\n  marginRight: theme.spacing(4),\n}));\n\nconst Root = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh',\n});\n\nconst managementService = new ManagementService();\n\nexport const AppRoot: React.FC = () => {\n  const [account] = useObservable(() => managementService.account$, []);\n  const [sites] = useObservable(() => managementService.sites$, []);\n\n  const [signedIn, setSignedIn] = React.useState(false);\n  const [site, setSite] = React.useState<Site>();\n\n  React.useEffect(() => {\n    if (sites !== undefined) {\n      setSite(sites[0]);\n    } else {\n      setSignedIn(false);\n      setSite(undefined);\n    }\n  }, [sites, site]);\n\n  return (\n    <Root>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <MenuLogo />\n          <MenuTitle variant=\"h6\">Enactive Management</MenuTitle>\n          <MenuContent />\n          {(() => {\n            if (sites === undefined) {\n              return (\n                <Button\n                  color=\"inherit\"\n                  component={RouterLink}\n                  sx={{ height: '100%' }}\n                  to=\"/signin\"\n                >\n                  Sign In\n                </Button>\n              );\n            } else if (account !== undefined && site !== undefined) {\n              return (\n                <AccountDropdown\n                  account={account}\n                  onSignOut={() => managementService.signOut()}\n                />\n              );\n            }\n          })()}\n        </Toolbar>\n      </AppBar>\n      <ContentRoot>\n        <Switch>\n          <Route exact path=\"/signin\">\n            {!signedIn ? (\n              <SignInScreen\n                managementService={managementService}\n                onSignIn={() => setSignedIn(true)}\n              />\n            ) : (\n              <Redirect to=\"/\" />\n            )}\n          </Route>\n          <Route exact path=\"/\">\n            {site === undefined ? (\n              <Redirect to=\"/signin\" />\n            ) : (\n              <Redirect to={`/sites/${site.id}`} />\n            )}\n          </Route>\n          <Route path=\"/\">\n            {signedIn ? (\n              <HomeScreen managementService={managementService} />\n            ) : (\n              <Redirect to=\"/signin\" />\n            )}\n          </Route>\n        </Switch>\n      </ContentRoot>\n    </Root>\n  );\n};\n","import { CssBaseline, StyledEngineProvider } from '@material-ui/core';\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport { AppRoot } from './components/AppRoot';\n\nconst App: React.FC = () => {\n  return (\n    <StyledEngineProvider injectFirst>\n      <HashRouter>\n        <CssBaseline>\n          <AppRoot />\n        </CssBaseline>\n      </HashRouter>\n    </StyledEngineProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'typeface-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('enactive-app-root'),\n);\n"],"sourceRoot":""}