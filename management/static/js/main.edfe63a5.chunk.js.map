{"version":3,"sources":["hooks/useObservable.ts","services/ManagementService.ts","components/AccountDropdown.tsx","components/Button.tsx","validation/yup.ts","components/DialogDrawer.tsx","components/FirstAction.tsx","components/Flex.tsx","components/QuillWrapper.tsx","components/EditTourDrawer.tsx","components/FeatureContainer.tsx","components/SiteScreen.tsx","components/HomeScreen.tsx","components/SignInScreen/CodeForm.tsx","components/SignInScreen/EmailForm.tsx","components/SignInScreen.tsx","components/AppRoot.tsx","App.tsx","index.tsx"],"names":["useObservable","observableGenerator","deps","initialValue","React","useState","value","setValue","cb","useCallback","useEffect","o","undefined","sub","subscribe","unsubscribe","ManagementService","axios","axiosStatic","create","baseURL","URLSearchParams","window","location","search","slice","get","hostname","replace","withCredentials","account$$","BehaviorSubject","sites$$","tours$$","account$","this","asObservable","sites$","tours$","before","getMe","catch","after","id","next","loadSites","data","account","email","post","accountId","code","response","reload","siteId","tours","req","tour","concat","tourId","put","map","t","sites","length","createSite","domain","site","push","AccountDropdown","buttonProps","onSignOut","anchorEl","useRef","open","setOpen","color","onClick","ev","ref","Popper","current","disablePortal","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","Button","disabled","key","k","useMemo","yup","test","path","createError","RegExp","err","message","document","querySelector","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","empty","invalid","DOMParser","parseFromString","body","textContent","trim","Error","DDTitle","styled","DialogTitle","alignItems","display","justifyContent","marginBottom","theme","spacing","DDContent","DialogContent","padding","DDActions","DialogActions","backgroundColor","palette","grey","borderTop","borderTopColor","DialogDrawer","actions","children","onClose","onExited","title","width","Drawer","anchor","SlideProps","Typography","component","variant","style","flexGrow","IconButton","Close","sx","Container","Box","maxWidth","Illustration","fontSize","height","typography","h1","opacity","marginRight","ContentContainer","alignSelf","flexDirection","Content","Actions","FirstAction","actionsComponent","illustrationComponent","boxProps","Flex","col","FlexItem","grow","border","error","main","QuillWrapper","errorText","onBlur","onChange","className","FormHelperText","SelectorTypeContainer","margin","StepAccordionSummary","AccordionSummary","minWidth","selectorSchema","object","shape","type","mixed","oneOf","default","string","when","is","otherwise","validCssSelector","then","validXpathSelector","stepSchema","html","required","validNonEmptyHtml","mask","boolean","selector","notRequired","tourSchema","match","regex","validRegex","name","status","steps","array","of","EditTourDrawer","managementService","onSave","useTheme","formRef","mkTourEdit","formTour","setFormTour","changeStatus","setChangeStatus","stepExpansionState","setStepExpansionState","handleCreateStep","formik","fieldArray","values","mkTourEditStep","doSubmit","submitForm","size","initialValues","innerRef","onSubmit","a","setSubmitting","toSave","step","createTour","updateTour","result","validateOnChange","validationSchema","mb","TextField","fullWidth","label","placeholder","validate","mt","helperText","Add","SpeakerNotes","h2","i","Accordion","expanded","expandIcon","ExpandMore","ses","mr","flex","overflow","textOverflow","whiteSpace","getTextFromHtml","hasInnerStepError","errors","AccordionDetails","swap","ArrowUpward","ArrowDownward","ml","remove","startIcon","Delete","my","getFieldMeta","setFieldTouched","setFieldValue","FormControlLabel","control","Switch","checked","ToggleButtonGroup","setTimeout","ToggleButton","stepIndex","Object","find","s","text","FeatureContainer","TourCard","Card","success","boxShadow","borderRadius","content","position","right","top","SiteScreen","useParams","tourEditOpen","setTourEditOpen","tourEdit","setTourEdit","loadTours","flexWrap","m","cursor","CardHeader","avatar","Avatar","bgcolor","split","w","toUpperCase","join","Map","HomeScreen","exact","codeSchema","matches","SignInButtonContainer","marginTop","textAlign","CodeForm","onCancel","onSignIn","login","signInAccount","ButtonGroup","signInSchema","EmailForm","onSignUp","signUp","endIcon","ArrowForward","SignInScreen","emailEntered","setEmailEntered","signUpAccount","setSignUpAccount","Slide","direction","in","onEntered","focusInput","unmountOnExit","focus","ContentRoot","MenuContent","MenuLogo","BubbleChartIcon","h5","MenuTitle","Root","RootFullScreen","AppRoot","setSite","waitingForSignIn","setWaitingForSignIn","signedIn","init","AppBar","Toolbar","logout","RouterLink","to","CircularProgress","App","StyledEngineProvider","injectFirst","CssBaseline","ReactDOM","render","StrictMode","getElementById"],"mappings":"sTA6BO,SAASA,EACdC,EACAC,EACAC,GACwB,IAAD,EACGC,IAAMC,SAC9BF,GAFqB,mBAChBG,EADgB,KACTC,EADS,KAIjBC,EAAKJ,IAAMK,YAAYR,EAAqBC,GAWlD,OARAE,IAAMM,WAAU,WACd,IAAMC,EAAIH,IACV,QAAUI,IAAND,EAAiB,CACnB,IAAME,EAAMF,EAAEG,UAAUP,GACxB,OAAO,kBAAMM,EAAIE,kBAElB,CAACP,IAEG,CAACF,G,wECnCGU,EAAb,WAWE,aAQG,IAAD,EAPiBC,EAOjB,uDAPwCC,IAAYC,OAAO,CACzDC,QAAQ,GAAD,iBACL,IAAIC,gBAAgBC,OAAOC,SAASC,OAAOC,MAAM,IAAIC,IAAI,mBADpD,8BAEUJ,OAAOC,SAASI,SAASC,QAAQ,OAAQ,KAFnD,YAIPC,iBAAiB,IAEnB,yBAPiBZ,QAOjB,KAlBea,UAAY,IAAIC,SAC/BnB,GAiBA,KAfeoB,QAAU,IAAID,SAAoCnB,GAejE,KAdeqB,QAAU,IAAIF,SAAoCnB,GAcjE,KAZcsB,SAAWC,KAAKL,UAAUM,eAYxC,KAXcC,OAASF,KAAKH,QAAQI,eAWpC,KAVcE,OAASH,KAAKF,QAAQG,eATxC,+EAqBE,6FACQG,EAASJ,KAAKL,UAAUxB,MADhC,SAEsB6B,KAAKK,QAAQC,OAAM,kBAAM,QAF/C,UAEQC,EAFR,QAGY,OAANH,QAAM,IAANA,OAAA,EAAAA,EAAQI,OAAR,OAAeD,QAAf,IAAeA,OAAf,EAAeA,EAAOC,IAH5B,oBAIkB,OAAVD,EAJR,gBAKMP,KAAKH,QAAQY,UAAKhC,GALxB,wCAOYuB,KAAKU,UAAUH,GAP3B,QAUEP,KAAKL,UAAUc,KAAKF,GAVtB,iDArBF,gHAkCE,8FACgBP,KAAKlB,MAAMS,IAA0B,iBADrD,uCACuEoB,KAClEC,SAFL,gDAlCF,iHAuCE,WAAoBC,GAApB,yFACkCb,KAAKlB,MAAMgC,KACzC,oBACA,CACED,QACAL,GAAI,KALV,uBACgBI,EADhB,EACUD,KAQRX,KAAKL,UAAUc,KAAKG,GATtB,kBAUSA,GAVT,gDAvCF,iHAoDE,WAAmBG,EAAmBC,GAAtC,yFACyBhB,KAAKlB,MAAMgC,KAAc,mBAAoB,CAClEE,OACAR,GAAIO,IAHR,cACQE,EADR,OAKQL,EAAUK,EAASN,KAEzBX,KAAKL,UAAUc,KAAKG,GAPtB,SAQQZ,KAAKU,UAAUE,GARvB,gCAUSA,GAVT,gDApDF,oHAiEE,8FACQZ,KAAKlB,MAAMgC,KAAc,qBADjC,OAEEd,KAAKF,QAAQW,UAAKhC,GAClBuB,KAAKH,QAAQY,UAAKhC,GAClBuB,KAAKL,UAAUc,UAAKhC,GACpBU,OAAOC,SAAS8B,SALlB,gDAjEF,oHAyEE,WAAuBC,GAAvB,uFACyBnB,KAAKlB,MAAMS,IAAX,2BACD4B,EADC,WADzB,cACQF,EADR,OAKEjB,KAAKF,QAAQW,KAAKQ,EAASN,KAAKS,OALlC,kBAMSH,EAASN,KAAKS,OANvB,gDAzEF,sHAkFE,WACED,EACAE,GAFF,2FAIyBrB,KAAKlB,MAAMgC,KAAX,2BACDK,EADC,UAErBE,GANJ,cAIQJ,EAJR,OAQQK,EAAOL,EAASN,KAAKW,KACrBF,EAAQpB,KAAKF,QAAQ3B,MAC3B6B,KAAKF,QAAQW,UAAehC,IAAV2C,EAAsB,CAACE,GAAQF,EAAMG,OAAO,CAACD,KAVjE,kBAWSA,GAXT,gDAlFF,wHAgGE,WACEH,EACAK,EACAH,GAHF,2FAKyBrB,KAAKlB,MAAM2C,IAAX,2BACDN,EADC,kBACeK,GACpCH,GAPJ,cAKQJ,EALR,OASQK,EAAOL,EAASN,KAAKW,KACrBF,EAAQpB,KAAKF,QAAQ3B,MAC3B6B,KAAKF,QAAQW,UACDhC,IAAV2C,EACI,CAACE,GACDF,EAAMM,KAAI,SAACC,GAAD,OAAQA,EAAEnB,KAAOc,EAAKd,GAAKc,EAAOK,MAdpD,kBAgBSL,GAhBT,gDAhGF,yHAmHE,WAAwBV,GAAxB,2FACyBZ,KAAKlB,MAAMS,IAChC,oBAFJ,UACQ0B,EADR,OAMuB,KAFfW,EAAQX,EAASN,KAAKiB,OAElBC,OANZ,gCAOuB7B,KAAK8B,WAAW,CAAEC,OAAQnB,EAAQC,MAAOL,GAAI,KAPpE,OAOUwB,EAPV,OAQIJ,EAAMK,KAAKD,GARf,cAWEhC,KAAKH,QAAQY,KAAKmB,GAXpB,kBAYSA,GAZT,iDAnHF,sHAkIE,WAAyBP,GAAzB,uFACyBrB,KAAKlB,MAAMgC,KAChC,mBACAO,GAHJ,cACQJ,EADR,yBAKSA,EAASN,KAAKqB,MALvB,gDAlIF,8D,4DCMaE,EAAwD,SAAC,GAI/D,IAHLtB,EAGI,EAHJA,QACAuB,EAEI,EAFJA,YACAC,EACI,EADJA,UAEMC,EAAWpE,IAAMqE,OAA0B,MAD7C,EAEoBrE,IAAMC,UAAS,GAFnC,mBAEGqE,EAFH,KAESC,EAFT,KAGJ,OACE,qCACE,cAAC,IAAD,yBACEC,MAAM,WACFN,GAFN,IAGEO,QAAS,SAACC,GAAQ,IAAD,EACfH,GAAQ,GACG,OAAXL,QAAW,IAAXA,GAAA,UAAAA,EAAaO,eAAb,cAAAP,EAAuBQ,IAEzBC,IAAKP,EAPP,SASGzB,EAAQC,SAEX,cAACgC,EAAA,EAAD,CAAQR,SAAUA,EAASS,QAASC,eAAa,EAACR,KAAMA,EAAxD,SACE,cAACS,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBC,YAAa,kBAAMV,GAAQ,IAA9C,SACE,cAACW,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAQV,QAAS,kBAAMN,KAAvB,oC,4CCzCHiB,EAAgC,SAAC,GAIvC,IAAD,IAHJC,gBAGI,SAFJC,EAEI,EAFJA,IACGpB,EACC,kCACEqB,EAAIvF,IAAMwF,SAAQ,WAEtB,YAAYhF,IAAR8E,GAAsBD,OAEP7E,IAAR8E,EACF,WACGD,EAGJ,GAAN,OAAUC,EAAV,aAFOA,OAJP,IAQD,CAACD,EAAUC,IACd,OAAO,wBAAC,IAAD,2BAAepB,GAAf,IAA4BmB,SAAUA,EAAUC,IAAKC,M,0LCb9DE,aAAcA,UAAY,cAAc,WACtC,OAAO1D,KAAK2D,KAAK,oBAAoB,SAAUxF,GAC7C,QAAcM,IAAVN,EAUF,OAAO,EAViB,IAChByF,EAAsB5D,KAAtB4D,KAAMC,EAAgB7D,KAAhB6D,YAEd,IAEE,OADA,IAAIC,OAAO3F,IACJ,EACP,MAAO4F,GACP,OAAOF,EAAY,CAAEG,QAASD,EAAIC,QAASJ,gBAQnDF,aAAcA,UAAY,oBAAoB,WAC5C,OAAO1D,KAAK2D,KAAK,2BAA2B,SAAUxF,GACpD,QAAcM,IAAVN,GAAiC,KAAVA,EAUzB,OAAO,EAViC,IAChCyF,EAAsB5D,KAAtB4D,KAAMC,EAAgB7D,KAAhB6D,YAEd,IAEE,OADAI,SAASC,cAAc/F,IAChB,EACP,MAAO4F,GACP,OAAOF,EAAY,CAAEG,QAAS,uBAAwBJ,gBAQ9DF,aAAcA,UAAY,sBAAsB,WAC9C,OAAO1D,KAAK2D,KAAK,6BAA6B,SAAUxF,GACtD,QAAcM,IAAVN,GAAiC,KAAVA,EAgBzB,OAAO,EAhBiC,IAChCyF,EAAsB5D,KAAtB4D,KAAMC,EAAgB7D,KAAhB6D,YAEd,IAQE,OAPAI,SAASE,SACPhG,EACA8F,SACA,KACAG,YAAYC,wBACZ,OAEK,EACP,MAAON,GACP,OAAOF,EAAY,CAAEG,QAAS,yBAA0BJ,gBAQhEF,aACEA,UACA,qBACA,WAIgC,IAAD,yDAAJ,GAAI,IAH7BY,aAG6B,MAHrB,yBAGqB,MAF7BC,eAE6B,MAFnB,SAACR,GAAD,iCACetF,IAARsF,EAAA,YAAyBA,EAAIC,SAAY,KAC7B,EAC7B,OAAOhE,KAAK2D,KAAK,6BAA6B,SAAUxF,GAAQ,IACtDyF,EAAsB5D,KAAtB4D,KAAMC,EAAgB7D,KAAhB6D,YACd,QAAcpF,IAAVN,EAmBF,OAAO0F,EAAY,CAAEG,QAASM,EAAOV,SAlBrC,IAAK,IAAD,MAMF,MAAa,MAJH,qBADK,IAAIY,WAGdC,gBAAgBtG,EAAO,oBAFlB,iBACR,EAEIuG,KAAKC,mBAHD,aACR,EAEsBC,cAHd,QAGwB,KAIzBf,EAAY,CAAEG,QAASM,EAAOV,SAEvC,MAAOG,GACP,OAAOF,EAAY,CACjBG,QAASO,EAAQR,aAAec,MAAQd,OAAMtF,GAC9CmF,gBAmBGF,U,kDCrFToB,GAAUC,YAAOC,KAAPD,EAAoB,kBAAgB,CAClDE,WAAY,SACZC,QAAS,OACTC,eAAgB,gBAChBC,aAJkC,EAAGC,MAIjBC,QAAQ,OAGxBC,GAAYR,YAAOS,KAAPT,CAAsB,CACtCU,QAAS,QAGLC,GAAYX,YAAOY,KAAPZ,EAAsB,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CACtDO,gBAAiBP,EAAMQ,QAAQC,KAAK,IACpCC,UAAU,YACVC,eAAgBX,EAAMQ,QAAQC,KAAK,KACnCL,QAASJ,EAAMC,QAAQ,OAGZW,GAA4C,SAAC,GAQnD,IAPLC,EAOI,EAPJA,QACAC,EAMI,EANJA,SACAC,EAKI,EALJA,QACAC,EAII,EAJJA,SACA9D,EAGI,EAHJA,KACA+D,EAEI,EAFJA,MAEI,IADJC,aACI,MADI,QACJ,EACJ,OACE,eAACC,GAAA,EAAD,CACEC,OAAO,QACPlE,KAAMA,EACN6D,QAASA,EACTM,WAAY,CAAEL,YAJhB,UAME,eAACvB,GAAD,WACE,cAAC6B,EAAA,EAAD,CAAYC,UAAU,OAAOC,QAAQ,KAAKC,MAAO,CAAEC,SAAU,GAA7D,SACGT,SAEU7H,IAAZ2H,EACC,cAACY,EAAA,EAAD,CAAYtE,QAAS0D,EAArB,SACE,cAACa,GAAA,EAAD,WAEAxI,KAEN,cAAC8G,GAAD,CAAW2B,GAAI,CAAEX,SAAjB,SAA2BJ,IAC3B,cAACT,GAAD,UAAYQ,QC5DZiB,GAAYpC,YAAOqC,IAAPrC,CAAY,CAC5BE,WAAY,SACZC,QAAS,OACTmC,SAAU,SAGNC,GAAevC,YAAOqC,IAAPrC,EAAY,cAAGwC,SAAH,IAAalC,EAAb,EAAaA,MAAb,MAA0B,CACzD,QAAS,CACPmC,OAAQnC,EAAMoC,WAAWC,GAAGH,SAC5BI,QAAS,GACTpB,MAAOlB,EAAMoC,WAAWC,GAAGH,UAE7BK,YAAavC,EAAMC,QAAQ,OAGvBuC,GAAmB9C,YAAOqC,IAAPrC,CAAY,CACnC+C,UAAW,UACX5C,QAAS,OACT6C,cAAe,SACfhB,SAAU,IAGNiB,GAAUjD,YAAOqC,IAAPrC,EAAY,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CAC1C0B,SAAU,EACVtB,QAAQ,GAAD,OAAKJ,EAAMC,QAAQ,GAAnB,UAGH2C,GAAUlD,YAAOqC,IAAPrC,CAAY,CAC1BE,WAAY,SACZC,QAAS,OACTC,eAAgB,aAGL+C,GAA0C,SAAC,GAKjD,IAJLC,EAII,EAJJA,iBACAhC,EAGI,EAHJA,SACAiC,EAEI,EAFJA,sBACGC,EACC,uEACJ,OACE,eAAC,GAAD,2BAAeA,GAAf,cACE,cAACf,GAAD,UAAec,IACf,eAACP,GAAD,WACE,cAACG,GAAD,UAAU7B,SACY1H,IAArB0J,EACC,cAACF,GAAD,UAAUE,SACR1J,UC/CC6J,GAA4B,SAAC,GAIpC,EAHJrD,WAGK,IAAD,IAFJsD,WAEI,SADDF,EACC,oCACJ,OACE,cAACjB,EAAA,EAAD,2BACMiB,GADN,IAEEnB,GAAE,2BACGmB,EAASnB,IADZ,IAEAhC,QAAS,OACT6C,cAAeQ,EAAM,SAAW,YAU3BC,GAAoC,SAAC,GAG3C,IAAD,IAFJC,YAEI,SADDJ,EACC,wBACJ,OACE,cAACjB,EAAA,EAAD,2BACMiB,GADN,IAEEnB,GAAE,2BACGmB,EAASnB,IADZ,IAEAH,SAAU0B,EAAO,OAAIhK,Q,+BC1BvB0I,GAAYpC,YAAO,MAAPA,EAAc,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CAC9C,mBAAoB,CAClBqD,OAAO,aAAD,OAAerD,EAAMQ,QAAQ8C,MAAMC,WAIhCC,GAA4C,SAAC,GAKnD,IAJLC,EAII,EAJJA,UACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,SACA7K,EACI,EADJA,MAEA,OACE,eAAC,GAAD,WACE,cAAC,KAAD,CACE8K,eAAyBxK,IAAdqK,EAA0B,aAAUrK,EAC/CsK,OAAQA,EACRC,SAAUA,EACV7K,MAAOA,SAEMM,IAAdqK,EACC,cAACI,GAAA,EAAD,CAAgBP,OAAK,EAArB,SAAuBG,SACrBrK,MCwBJ0K,GAAwBpE,YAAOyD,GAAPzD,EAAiB,kBAAgB,CAC7DqE,OAD6C,EAAG/D,MAClCC,QAAQ,QAGlB+D,GAAuBtE,YAAOuE,IAAPvE,EAAyB,kBAAgB,CACpE,sCAAuC,CACrC6C,YAFkD,EAAGvC,MAElCC,QAAQ,GAC3BiE,SAAU,OAIRC,GAA2D9F,GAC9D+F,SACAC,MAAM,CACLC,KAAMjG,GAAIkG,QAAyBC,MAAM,CAAC,MAAO,UAAUC,QAAQ,OACnE3L,MAAOuF,GACJqG,SACAC,KAAK,OAAQ,CACZC,GAAI,QACJC,UAAWxG,GAAIqG,SAASI,mBACxBC,KAAM1G,GAAIqG,SAASM,uBAEpBP,QAAQ,MAGTQ,GAAyD5G,GAC5D+F,SACAC,MAAM,CACLa,KAAM7G,GACHqG,SACAS,SAAS,uBACTC,kBAAkB,CAAEnG,MAAO,+BAC9BoG,KAAMhH,GAAIiH,UAAUH,WACpBI,SAAUpB,GAAeqB,gBAGvBC,GAEFpH,GAAI+F,SAASC,MAAM,CACrBqB,MAAOrH,GAAI+F,SAASC,MAAM,CACxBsB,MAAOtH,GACJqG,SACAS,SAAS,oCACTS,eAELC,KAAMxH,GAAIqG,SAASS,SAAS,oBAC5BW,OAAQzH,GACLkG,QACAC,MAAM,CAAC,QAAS,cAChBC,QAAQ,SACXsB,MAAO1H,GAAI2H,QAAQC,GAAGhB,MAGXiB,GAAgD,SAAC,GAQvD,IAPLC,EAOI,EAPJA,kBAOI,IANJpF,eAMI,MANM,aAMN,MALJC,gBAKI,MALO,aAKP,MAJJoF,cAII,MAJK,aAIL,EAHJlJ,EAGI,EAHJA,KACApB,EAEI,EAFJA,OACAG,EACI,EADJA,KAEM+D,EAAQqG,cACRC,EAAU1N,IAAMqE,OAA0B,MAF5C,EAG4BrE,IAAMC,UAAS,kBAAM0N,GAAWtK,MAH5D,mBAGGuK,EAHH,KAGaC,EAHb,OAKoC7N,IAAMC,WAL1C,mBAKG6N,EALH,KAKiBC,EALjB,OAMgD/N,IAAMC,SAExD,IARE,mBAMG+N,EANH,KAMuBC,EANvB,KAeJ,SAASC,EACPC,EACAC,GAEAH,EAAsB,eACnBE,EAAOE,OAAOlB,MAAMvJ,QAAS,IAEhCwK,EAAWpK,KAAKsK,MAGlB,SAASC,EAASrB,GAChBa,EAAgBb,GACQ,OAApBQ,EAAQ7I,SACL6I,EAAQ7I,QAAQ2J,aAIzB,OAtBAxO,IAAMM,WAAU,WACduN,EAAYF,GAAWtK,IACvB4K,EAAsB,MACrB,CAAC5K,IAoBF,cAAC,GAAD,CACE4E,QACE,qCACE,cAAC,EAAD,CAAQxD,QAAS,kBAAM0D,KAAWsG,KAAK,QAAvC,oBAGA,cAAC,EAAD,CAAQhK,QAAS,kBAAM8J,EAAS,UAAUE,KAAK,QAA/C,SACoB,MAAT,OAARb,QAAQ,IAARA,OAAA,EAAAA,EAAUrL,KAAkC,WAAb,OAARqL,QAAQ,IAARA,OAAA,EAAAA,EAAUV,QAC9B,aACA,uBAEN,cAAC,EAAD,CACEzI,QAAS,kBAAM8J,EAAS,cACxBE,KAAK,QACL7F,QAAQ,YAHV,SAKoB,MAAT,OAARgF,QAAQ,IAARA,OAAA,EAAAA,EAAUrL,IACP,UACqB,WAAb,OAARqL,QAAQ,IAARA,OAAA,EAAAA,EAAUV,QACV,mBACA,YAIV/E,QAASA,EACTC,SAAUA,EACV9D,KAAMA,EACN+D,MAAwB,MAAT,OAARuF,QAAQ,IAARA,OAAA,EAAAA,EAAUrL,IAAY,cAAgB,YA3B/C,SA6BE,cAAC,KAAD,CACEmM,cAAed,EACfe,SAAUjB,EACVkB,SAAQ,uCAAE,WAAOvL,EAAM4E,GAAb,mBAAA4G,EAAA,6DACR5G,EAAQ6G,eAAc,GAGhBC,EAJE,2BAKH1L,GALG,IAMN6J,OAAM,iBAAEY,QAAF,IAAEA,IAAF,OAAkBF,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUV,cAA5B,QAAsC7J,EAAK6J,OACjDC,MAAO9J,EAAK8J,MAAM1J,KAAI,SAACuL,GAAD,mBAAC,eAClBA,GADiB,IAEpBrC,cACoBnM,IAAlBwO,EAAKrC,UAAyD,KAA/BqC,EAAKrC,SAASzM,MAAMyG,YAC/CnG,EACAwO,EAAKrC,gBAZP,SAgB4B,KAAdoC,EAAOxM,GACzBgL,EAAkB0B,WAAW/L,EAAQ6L,GACrCxB,EAAkB2B,WAAWhM,EAAQ6L,EAAOxM,GAAIwM,GAlB5C,OAgBFI,EAhBE,OAmBRlH,EAAQ6G,eAAc,GACtBtB,EAAO2B,GApBC,2CAAF,wDAsBRC,kBAAkB,EAClBC,iBAAkBxC,GA1BpB,SA4BG,SAACsB,GAAD,OACC,eAAC,KAAD,WACE,cAACzF,EAAA,EAAD,CAAY4G,GAAI,IAAM3G,UAAU,KAAKC,QAAQ,YAA7C,qBAGA,cAAC,KAAD,CACED,UAAW4G,KACXC,WAAS,EACTC,MAAM,OACNxC,KAAK,OACLyC,YAAY,0BACZjB,KAAK,SACLkB,UAAQ,EACR/G,QAAQ,aAEV,cAACF,EAAA,EAAD,CAAY4G,GAAI,IAAMM,GAAI,IAAKjH,UAAU,KAAKC,QAAQ,YAAtD,sBAGA,cAAC,KAAD,CACED,UAAW4G,KACXC,WAAS,EACTK,WAAW,mCACXJ,MAAM,uBACNxC,KAAK,cACLyC,YAAY,eACZjB,KAAK,SACLkB,UAAQ,EACR/G,QAAQ,aAEV,cAAC,KAAD,CAAYqE,KAAK,QAAjB,SACG,SAACmB,GAAD,OACC,qCACE,cAAC1F,EAAA,EAAD,CACE4G,GAAI,IACJM,GAAI,IACJjH,UAAU,KACVC,QAAQ,YAJV,SAME,eAAC,GAAD,WACE,cAAC,GAAD,CAAU4B,MAAI,EAAd,mBACA,cAAC,GAAD,UACE,cAACzB,EAAA,EAAD,CACEvE,MAAM,UACNC,QAAS,kBAAMyJ,EAAiBC,EAAQC,IAF1C,SAIE,cAAC0B,GAAA,EAAD,aAKwB,IAA/B3B,EAAOE,OAAOlB,MAAMvJ,OACnB,cAAC,GAAD,CAAMsD,eAAe,SAASoB,MAAM,OAApC,SACE,cAAC,GAAD,CACE4B,iBACE,cAAC,EAAD,CACE1F,MAAM,UACNC,QAAS,kBAAMyJ,EAAiBC,EAAQC,IACxCxF,QAAQ,YAHV,yBAQFuB,sBACE,cAAC4F,GAAA,EAAD,CACElH,MAAO,CACLU,OAAQnC,EAAMoC,WAAWwG,GAAG1G,SAC5BhB,MAAOlB,EAAMoC,WAAWwG,GAAG1G,YAIjCsG,GAAI,EACJ/G,MAAO,CAAEO,SAAU,SAnBrB,iJA2BF,cAACD,EAAA,EAAD,CAAKF,GAAI,CAAEX,MAAO,QAAlB,SACG6F,EAAOE,OAAOlB,MAAM1J,KAAI,SAACuL,EAAMiB,GAAP,iBACvB,eAACC,EAAA,EAAD,CACEC,SAAQ,UAAEnC,EAAmBiC,UAArB,SADV,UAIE,eAAC7E,GAAD,CACEgF,WAAY,cAACC,GAAA,EAAD,IACZ5L,QAAS,kBACPwJ,GAAsB,SAACqC,GAAD,sBAAaL,GAAKK,EAAIL,QAHhD,UAME,cAAC,GAAD,CAAU3H,MAAM,OAAOiI,GAAI,EAA3B,SACE,eAAC7H,EAAA,EAAD,CAAYE,QAAQ,QAAQD,UAAU,KAAtC,UACGsH,EAAI,EADP,SAIF,cAAC,GAAD,CACEO,KAAK,IACLlF,SAAS,IACTmF,SAAS,SACTC,aAAa,WACbC,WAAW,SALb,SAOE,cAACjI,EAAA,EAAD,CACEE,QAAQ,QACRK,GAAI,CACFhC,QAAS,SACTyC,QAAS,MAJb,SAOGkH,GAAgB5B,EAAK1C,UAGzBuE,GAAkB1C,EAAO2C,OAAQb,GAChC,cAAC,GAAD,CACEzL,MAAM,aACN+L,GAAI,EACJtH,GAAI,CAAEjC,WAAY,SAAUC,QAAS,QAHvC,SAKE,cAAC,KAAD,WAEAzG,KAEN,eAACuQ,EAAA,EAAD,WACE,eAAC,GAAD,CAAM7J,eAAe,WAArB,UACE,cAAC6B,EAAA,EAAD,CACE1D,SAAgB,IAAN4K,EACVxL,QAAS,WACPwJ,GAAsB,SAACqC,GAAD,yBAAC,eAClBA,GADiB,uBAEnBL,EAAI,EAAIK,EAAIL,IAFO,cAGnBA,EAAIK,EAAIL,EAAI,IAHO,OAKtB7B,EAAW4C,KAAKf,EAAI,EAAGA,IAEzB5H,MAAM,UAVR,SAYE,cAAC4I,GAAA,EAAD,MAEF,cAAClI,EAAA,EAAD,CACE1D,SAAU4K,IAAM9B,EAAOE,OAAOlB,MAAMvJ,OAAS,EAC7Ca,QAAS,WACPwJ,GAAsB,SAACqC,GAAD,yBAAC,eAClBA,GADiB,uBAEnBL,EAAI,EAAIK,EAAIL,IAFO,cAGnBA,EAAIK,EAAIL,EAAI,IAHO,OAKtB7B,EAAW4C,KAAKf,EAAGA,EAAI,IAEzB5H,MAAM,YAVR,SAYE,cAAC6I,GAAA,EAAD,MAEF,cAAC/H,EAAA,EAAD,CAAKgI,GAAI,EAAT,SACE,cAAC,EAAD,CACE3M,MAAM,UACNC,QAAS,WACP2J,EAAWgD,OAAOnB,GAClBhC,GAAsB,SAACqC,GAAD,mBAAC,eAClBA,GADiB,kBAEnBL,GAAI,QAGToB,UAAW,cAACC,GAAA,EAAD,IATb,yBAeJ,cAACnI,EAAA,EAAD,CAAKoI,GAAI,EAAT,SACE,cAAC,GAAD,CACE1G,UACEsD,EAAOqD,aAAP,gBAA6BvB,EAA7B,WAAwCvF,MAE1CI,OAAQ,WACNqD,EAAOsD,gBAAP,gBACWxB,EADX,WAEE,IAGJlF,SAAU,SAACuB,GACT6B,EAAOuD,cAAP,gBACWzB,EADX,UAEE3D,IAGJpM,MAAOiO,EAAOE,OAAOlB,MAAM8C,GAAG3D,SAGlC,cAACnD,EAAA,EAAD,CAAKoI,GAAI,EAAT,SACE,cAACI,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAAS3D,EAAOE,OAAOlB,MAAM8C,GAAGxD,KAChC1B,SAAU,WACRoD,EAAOuD,cAAP,gBACWzB,EADX,WAEG9B,EAAOE,OAAOlB,MAAM8C,GAAGxD,SAKhCgD,MAAM,4BAGV,eAAC,GAAD,CAAMzI,WAAW,aAAauK,GAAI,EAAlC,UACE,cAAC,GAAD,CAAU/G,MAAI,EAAd,SACE,cAAC,KAAD,CACE7B,UAAW4G,KACXC,WAAS,EACTK,WAAW,uDACXJ,MAAM,oBACNxC,KAAI,gBAAWgD,EAAX,oBACJxB,KAAK,SACL7F,QAAQ,eAGZ,cAACsC,GAAD,UACE,eAAC6G,GAAA,EAAD,CACEhH,SAAU,WAGRiH,YAAW,kBACT7D,EAAOsD,gBAAP,gBACWxB,EADX,qBAEE,GACA,OAIN/P,MAAO,qBACLiO,EAAOE,OAAOlB,MAAM8C,GAAGtD,gBADlB,aACL,EAAiCjB,YAD5B,QAEH,OAdN,UAiBE,cAACuG,GAAA,EAAD,CACExN,QAAS,kBACP0J,EAAOuD,cAAP,gBACWzB,EADX,mBAEE,QAGJ/P,MAAM,MAPR,iBAWA,cAAC+R,GAAA,EAAD,CACExN,QAAS,kBACP0J,EAAOuD,cAAP,gBACWzB,EADX,mBAEE,UAGJ/P,MAAM,QAPR,gCAnKH+P,uBAgM/B,SAASY,GAAkBxN,EAA0B6O,GACnD,QAAmB1R,IAAf6C,EAAK8J,OAA6C,kBAAf9J,EAAK8J,MAC1C,OAAO,EAGP,IAAM6B,EAAO3L,EAAK8J,MAAM+E,GACxB,YACW1R,IAATwO,QACqDxO,IAArD2R,OAAO9D,OAAOW,GAAMoD,MAAK,SAACC,GAAD,YAAa7R,IAAN6R,KAKtC,SAASzB,GAAgBtE,GACvB,IAAK,IAAD,MACIgG,EAAI,qBACR,IAAI/L,WACDC,gBAAgB8F,EAAM,oBAFjB,iBACR,EAEI7F,KAAKC,mBAHD,aACR,EAEsBC,cAHd,QAGwB,GAClC,MAAgB,KAAT2L,EAAc,aAAeA,EACpC,MAAOxM,GACP,MAAO,cAIX,SAAS6H,GAAWtK,GAClB,YAAa7C,IAAT6C,EACK,CACLd,GAAI,GACJuK,MAAO,CACLC,MAAO,IAETE,KAAM,GACNC,OAAQ,QACRC,MAAO,IAGF,2BACF9J,GADL,IAEE8J,MAAO9J,EAAK8J,MAAM1J,IAAI6K,MAK5B,SAASA,GAAeU,GACtB,YAAaxO,IAATwO,EACK,CACL1C,KAAM,GACN/J,GAAI,GACJkK,MAAM,EACNE,SAAU,CACRjB,KAAM,MACNxL,MAAO,UAIcM,IAAlBwO,EAAKrC,SACRqC,EADG,2BAGEA,GAHF,IAIDrC,SAAU,CACRjB,KAAM,MACNxL,MAAO,MC/hBZ,IAAMqS,GAAmBzL,YAAOoC,IAAPpC,CAAkB,CAChDE,WAAY,SACZC,QAAS,OACT6B,SAAU,EACV5B,eAAgB,SAChBoB,MAAO,SCkBHkK,GAAW1L,YAAO2L,IAAP3L,EAAa,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CAC5C,qBAAsB,CACpBO,gBAAiBP,EAAMQ,QAAQ8K,QAAQ/H,KACvCgI,UAAU,mBAAD,OAAqBvL,EAAMQ,QAAQ8K,QAAQ/H,OAEtD,WAAY,CACVhD,gBAAiBP,EAAMQ,QAAQC,KAAK,KACpC+K,aAAcxL,EAAMC,QAAQ,KAC5BwL,QAAS,MACTtJ,OAAQnC,EAAMC,QAAQ,KACtByL,SAAU,WACVC,MAAO3L,EAAMC,QAAQ,GACrB2L,IAAK5L,EAAMC,QAAQ,GACnBiB,MAAOlB,EAAMC,QAAQ,UAIZ4L,GAAyC,SAAC,GAEhD,IADL1F,EACI,EADJA,kBAEQrK,EAAWgQ,cAAXhQ,OADJ,EAEYtD,GACd,kBAAM2N,EAAkBrL,SACxB,CAACqL,IAFIpK,EAFH,sBAOoCnD,IAAMC,UAAS,GAPnD,mBAOGkT,EAPH,KAOiBC,EAPjB,OAQ4BpT,IAAMC,WARlC,mBAQGoT,EARH,KAQaC,EARb,KAcJ,OAJAtT,IAAMM,WAAU,WACTiN,EAAkBgG,UAAUrQ,KAChC,CAACqK,EAAmBrK,IAGrB,0CAEkB1C,IAAV2C,GAAuBA,EAAMS,OAAS,EAEtC,eAACuF,EAAA,EAAD,CAAKb,MAAM,OAAX,UACE,cAACI,EAAA,EAAD,CAAYC,UAAU,KAAK4I,GAAI,EAAG3I,QAAQ,KAA1C,mBAGA,cAACO,EAAA,EAAD,CAAKoI,GAAI,EAAT,SACE,cAAC,EAAD,CACE/M,MAAM,UACNC,QAAS,WACP6O,OAAY9S,GACZ4S,GAAgB,IAElBxK,QAAQ,YANV,2BAWF,cAAC,GAAD,CAAM4K,SAAS,OAAOC,GAAI,EAA1B,SACGtQ,EAAMM,KAAI,SAACJ,GAAD,OACT,cAAC8F,EAAA,EAAD,CAAmBsK,EAAG,EAAGnL,MAAM,MAA/B,SACE,cAACkK,GAAD,CACExH,UAAW3H,EAAK6J,OAChBzI,QAAS,WACP6O,EAAYjQ,GACZ+P,GAAgB,IAElBnK,GAAI,CAAEyK,OAAQ,UAAWZ,SAAU,YANrC,SAQE,cAACa,EAAA,EAAD,CACEC,OACE,cAACC,EAAA,EAAD,CAAQ5K,GAAI,CAAE6K,QAAS,QAAvB,SACGzQ,EAAK4J,KACH8G,MAAM,OACNtQ,KAAI,SAACuQ,GAAD,uBAAOA,EAAE,UAAT,aAAO,EAAMC,iBACjBC,KAAK,MAGZ7L,MAAOhF,EAAK4J,UAlBR5J,EAAKd,iBA0BJ/B,IAAV2C,EAEP,cAACoP,GAAD,UACE,cAAC,GAAD,CACErI,iBACE,cAAC,EAAD,CACEzF,QAAS,WACP6O,OAAY9S,GACZ4S,GAAgB,IAElB3E,KAAK,QACL7F,QAAQ,YANV,yBAWFuB,sBAAuB,cAACgK,EAAA,EAAD,IAbzB,qIAHC,EAyBT,cAAC,GAAD,CACE5G,kBAAmBA,EACnBpF,QAAS,kBAAMiL,GAAgB,IAC/B5F,OAAQ,kBAAM4F,GAAgB,IAC9B9O,KAAM6O,EACNjQ,OAAQA,EACRG,KAAMgQ,QChIDe,GAAwC,SAAC,GAE/C,IADL7G,EACI,EADJA,kBAEA,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAO8G,OAAK,EAAC1O,KAAK,iBAAlB,SACE,cAAC,GAAD,CAAY4H,kBAAmBA,S,oBCAjC+G,GAAa7O,GAAI+F,SAASC,MAAM,CACpC1I,KAAM0C,GACHqG,SACAS,SAAS,8BACTgI,QAAQ,WAAY,CAAExO,QAAS,uCAG9ByO,GAAwB1N,YAAOqC,IAAPrC,EAAY,kBAAgB,CACxD2N,UADwC,EAAGrN,MAC1BC,QAAQ,GACzBqN,UAAW,YAGAC,GAAoC,SAAC,GAK3C,IAJLhS,EAII,EAJJA,QACA4K,EAGI,EAHJA,kBACAqH,EAEI,EAFJA,SAEI,IADJC,gBACI,MADO,aACP,EACJ,OACE,cAAC,KAAD,CACEnG,cAAe,CAAE3L,KAAM,IACvB6L,SAAQ,uCAAE,WAAOP,EAAQpG,GAAf,eAAA4G,EAAA,8DACQrO,IAAZmC,EADI,uBAENsF,EAAQ6G,eAAc,GAFhB,SAGsBvB,EAAkBuH,MAC5CnS,EAAQJ,GACR8L,EAAOtL,MALH,OAGAgS,EAHA,OAON9M,EAAQ6G,eAAc,GACtB+F,EAASE,GARH,2CAAF,wDAWR1F,iBAAkBiF,GAbpB,SAeG,SAACnG,GAAD,OACC,eAAC,KAAD,WACE,cAAC,KAAD,CACExF,UAAW4G,KACXC,WAAS,EACTK,WAAW,uEACXJ,MAAM,eACNxC,KAAK,SAEP,cAACuH,GAAD,UACE,eAACQ,GAAA,EAAD,WACE,cAAC,EAAD,CAAQvQ,QAASmQ,EAAUnG,KAAK,QAAhC,oBAGA,cAAC,EAAD,CACEhK,QAAS,kBAAM0J,EAAOK,cACtBC,KAAK,QACL7F,QAAQ,YAHV,iC,UCjDRqM,GAAexP,GAAI+F,SAASC,MAAM,CACtC7I,MAAO6C,GACJqG,SACAS,SAAS,6BACT3J,MAAM,2BAGL4R,GAAwB1N,YAAOqC,IAAPrC,EAAY,kBAAgB,CACxD2N,UADwC,EAAGrN,MAC1BC,QAAQ,GACzBqN,UAAW,YAGAQ,GAAsC,SAAC,GAG7C,IAFL3H,EAEI,EAFJA,kBACA4H,EACI,EADJA,SAEA,OACE,cAAC,KAAD,CACEzG,cAAe,CAAE9L,MAAO,IACxBgM,SAAQ,uCAAE,WAAOP,EAAQpG,GAAf,eAAA4G,EAAA,6DACR5G,EAAQ6G,eAAc,GADd,SAEcvB,EAAkB6H,OAAO/G,EAAOzL,OAF9C,OAEFD,EAFE,OAGRsF,EAAQ6G,eAAc,GACtBqG,EAASxS,GAJD,2CAAF,wDAMR0M,iBAAkB4F,GARpB,SAUG,SAAC9G,GAAD,OACC,eAAC,KAAD,WACE,cAAC,KAAD,CACExF,UAAW4G,KACXC,WAAS,EACTK,WAAW,uDACXJ,MAAM,gBACNxC,KAAK,UAEP,cAAC,GAAD,UACE,cAAC+H,GAAA,EAAD,UACE,cAAC,EAAD,CACEK,QAAS,cAACC,GAAA,EAAD,IACT7Q,QAAS,kBAAM0J,EAAOK,cACtBC,KAAK,QACL7F,QAAQ,YAJV,6BCtCD2M,GAA4C,SAAC,GAGnD,IAFLhI,EAEI,EAFJA,kBACAsH,EACI,EADJA,SACI,EACoC7U,IAAMC,UAAS,GADnD,mBACGuV,EADH,KACiBC,EADjB,OAEsCzV,IAAMC,WAF5C,mBAEGyV,EAFH,KAEkBC,EAFlB,OAGY/V,GACd,kBAAM2N,EAAkBtL,SACxB,CAACsL,IAFI5J,EAHH,oBAQJ,OACE,eAAC4O,GAAD,WACE,cAACqD,GAAA,EAAD,CACEC,UAAWL,EAAe,QAAU,OACpCM,QAAsBtV,IAAlBkV,EACJK,UAAW,WACTN,GAAgB,GAChBO,MAEFC,eAAa,EAPf,SASE,cAAC9M,EAAA,EAAD,CAAK2J,SAAS,WAAWxK,MAAO,EAAI,EAApC,SACE,cAAC,GAAD,CACEiF,kBAAmBA,EACnB4H,SAAUQ,QAIhB,cAACC,GAAA,EAAD,CACEC,eAAqBrV,IAAVmD,EAAsB,OAAS,QAC1CmS,QAAsBtV,IAAlBkV,QAAyClV,IAAVmD,EACnCoS,UAAW,kBAAMC,MACjB5N,SAAU,gBACc5H,IAAlBkV,QAAyClV,IAAVmD,GACjCkR,KAGJoB,eAAa,EATf,SAWE,cAAC9M,EAAA,EAAD,CAAK2J,SAAS,WAAWxK,MAAO,EAAI,EAApC,SACE,cAAC,GAAD,CACE3F,QAAS+S,EACTnI,kBAAmBA,EACnBqH,SAAU,kBAAMe,OAAiBnV,cAQ7C,SAASwV,KAA4C,IAAD,IAAhCrJ,EAAgC,uDAArB,cAC7B,UAAA3G,SAASC,cAAgC0G,UAAzC,mBAAoDuJ,aAApD,iBC9CF,IAAMC,GAAcrP,YAAOoC,IAAPpC,CAAkB,CACpCE,WAAY,SACZC,QAAS,OACT6C,cAAe,SACfhB,SAAU,EACVR,MAAO,SAGH8N,GAActP,YAAOqC,IAAPrC,CAAY,CAC9BE,WAAY,SACZC,QAAS,OACT6B,SAAU,EACVS,OAAQ,SAGJ8M,GAAWvP,YAAOwP,IAAPxP,EAAwB,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CACvDmC,OAAQnC,EAAMoC,WAAW+M,GAAGjN,SAC5BK,YAAavC,EAAMC,QAAQ,GAC3BiB,MAAOlB,EAAMoC,WAAW+M,GAAGjN,aAGvBkN,GAAY1P,YAAO4B,IAAP5B,EAAmB,kBAAgB,CACnD6C,YADmC,EAAGvC,MACnBC,QAAQ,OAGvBoP,GAAO3P,YAAOqC,IAAPrC,CAAY,CACvBG,QAAS,OACT6C,cAAe,SACfP,OAAQ,UAGJmN,GAAiB5P,YAAO2P,GAAP3P,CAAa,CAClCE,WAAY,SACZE,eAAgB,SAChBoB,MAAO,SAGHiF,GAAoB,IAAI3M,EAEjB+V,GAAoB,WAAO,IAAD,EACnB/W,GAAc,kBAAM2N,GAAkBzL,WAAU,IAA3Da,EAD8B,sBAErB/C,GAAc,kBAAM2N,GAAkBtL,SAAQ,IAAvD0B,EAF8B,sBAGb3D,IAAMC,WAHO,mBAG9B8D,EAH8B,KAGxB6S,EAHwB,OAKW5W,IAAMC,UAAS,GAL1B,mBAK9B4W,EAL8B,KAKZC,EALY,KAM/BC,EAAW/W,IAAMwF,SAAQ,WAC7B,OACc,OAAZ7C,QACYnC,IAAZmC,QACSnC,IAATuD,IACC8S,QAGoBrW,IAAZmC,QAGT,IAED,CAACA,EAASoB,EAAM8S,IAoBnB,OAlBA7W,IAAMM,WAAU,WACTiN,GAAkByJ,SACtB,IAEHhX,IAAMM,WAAU,WACE,OAAZqC,GACFmU,GAAoB,KAErB,CAACnU,IAEJ3C,IAAMM,WAAU,WAEZsW,OADYpW,IAAVmD,EACMA,EAAM,QAENnD,KAET,CAACmD,SAEgBnD,IAAbuW,EACL,eAACN,GAAD,WACE,cAACQ,EAAA,EAAD,CAAQnE,SAAS,SAAjB,SACE,eAACoE,EAAA,EAAD,WACE,cAACb,GAAD,IACA,cAACG,GAAD,CAAW5N,QAAQ,KAAnB,iCACA,cAACwN,GAAD,IAEOW,EAWkB,OAAZpU,QAAgCnC,IAAZmC,EAE3B,cAAC,EAAD,CACEA,QAASA,EACTwB,UAAW,kBAAMoJ,GAAkB4J,iBAJlC,EATH,cAAC,IAAD,CACE3S,MAAM,UACNmE,UAAWyO,IACXnO,GAAI,CAAEM,OAAQ,QACd8N,GAAG,UAJL,0BAoBV,cAAClB,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO9B,OAAK,EAAC1O,KAAK,UAAlB,SACIoR,EAMA,cAAC,IAAD,CAAUM,GAAG,MALb,cAAC,GAAD,CACE9J,kBAAmBA,GACnBsH,SAAU,kBAAMiC,GAAoB,QAM1C,cAAC,IAAD,CAAOzC,OAAK,EAAC1O,KAAK,IAAlB,SACIoR,EAGA,cAAC,IAAD,CAAUM,GAAE,wBAAYtT,QAAZ,IAAYA,OAAZ,EAAYA,EAAMxB,MAF9B,cAAC,IAAD,CAAU8U,GAAG,cAKjB,cAAC,IAAD,CAAO1R,KAAK,IAAZ,SACGoR,EACC,cAAC,GAAD,CAAYxJ,kBAAmBA,KAE/B,cAAC,IAAD,CAAU8J,GAAG,sBAOvB,cAACX,GAAD,UACE,cAACY,EAAA,EAAD,OC/ISC,GAZO,WACpB,OACE,cAACC,EAAA,EAAD,CAAsBC,aAAW,EAAjC,SACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,GAAD,W,cCHVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF7R,SAAS8R,eAAe,W","file":"static/js/main.edfe63a5.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport { Observable } from 'rxjs';\n\nexport type ObserverFunction<T> = () => Observable<T> | undefined;\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n): [T | undefined];\n\n/** @see [useObservable(observableGenerator, deps, initialvalue?)] */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue: T,\n): [T];\n\n/**\n * A custom hook that exposes an observable as its latest emitted value.\n *\n * @param observableGenerator A factory function for the observable\n * @param deps The dependency array. When any of these dependencies changes, the observable will\n *   be regenerated.\n * @param initialValue The initial value of the observable value, before it emits its first value.\n *   When the dependency array changes, the value will not revert to the initial value.\n * @returns\n */\nexport function useObservable<T>(\n  observableGenerator: ObserverFunction<T>,\n  deps: React.DependencyList,\n  initialValue?: T,\n): [typeof initialValue] {\n  const [value, setValue] = React.useState<T | typeof initialValue>(\n    initialValue,\n  );\n  const cb = React.useCallback(observableGenerator, deps);\n\n  /** When the callback changes, reinvoke it and subscribe to the new observable. */\n  React.useEffect(() => {\n    const o = cb();\n    if (o !== undefined) {\n      const sub = o.subscribe(setValue);\n      return () => sub.unsubscribe();\n    }\n  }, [cb]);\n\n  return [value];\n}\n","import axiosStatic, { AxiosInstance } from 'axios';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Account } from '../../../api/src/domain/Account';\nimport { CreateSiteRequest } from '../../../api/src/domain/CreateSite';\nimport {\n  CreateTourRequest,\n  CreateTourResponse,\n} from '../../../api/src/domain/CreateTour';\nimport { ListToursResponse } from '../../../api/src/domain/ListTours';\nimport { Site } from '../../../api/src/domain/Site';\nimport { Tour } from '../../../api/src/domain/Tour';\n\nexport class ManagementService {\n  private readonly account$$ = new BehaviorSubject<Account | null | undefined>(\n    undefined,\n  );\n  private readonly sites$$ = new BehaviorSubject<Site[] | undefined>(undefined);\n  private readonly tours$$ = new BehaviorSubject<Tour[] | undefined>(undefined);\n\n  public readonly account$ = this.account$$.asObservable();\n  public readonly sites$ = this.sites$$.asObservable();\n  public readonly tours$ = this.tours$$.asObservable();\n\n  constructor(\n    private readonly axios: AxiosInstance = axiosStatic.create({\n      baseURL: `${\n        new URLSearchParams(window.location.search.slice(1)).get('_devHost') ??\n        `https://api.${window.location.hostname.replace('www.', '')}`\n      }/api/v1/`,\n      withCredentials: true,\n    }),\n  ) {}\n\n  public async init(): Promise<void> {\n    const before = this.account$$.value;\n    const after = await this.getMe().catch(() => null);\n    if (before?.id !== after?.id) {\n      if (after === null) {\n        this.sites$$.next(undefined);\n      } else {\n        await this.loadSites(after);\n      }\n    }\n    this.account$$.next(after);\n  }\n\n  public async getMe(): Promise<Account> {\n    return (await this.axios.get<{ account: Account }>('management/me')).data\n      .account;\n  }\n\n  public async signUp(email: string): Promise<Account> {\n    const { data: account } = await this.axios.post<Account>(\n      'management/signup',\n      {\n        email,\n        id: '',\n      },\n    );\n\n    this.account$$.next(account);\n    return account;\n  }\n\n  public async login(accountId: string, code: string): Promise<Account> {\n    const response = await this.axios.post<Account>('management/login', {\n      code,\n      id: accountId,\n    });\n    const account = response.data;\n\n    this.account$$.next(account);\n    await this.loadSites(account);\n\n    return account;\n  }\n\n  public async logout(): Promise<void> {\n    await this.axios.post<Account>('management/logout');\n    this.tours$$.next(undefined);\n    this.sites$$.next(undefined);\n    this.account$$.next(undefined);\n    window.location.reload();\n  }\n\n  public async loadTours(siteId: string): Promise<Tour[]> {\n    const response = await this.axios.get<ListToursResponse>(\n      `management/sites/${siteId}/tours`,\n    );\n\n    this.tours$$.next(response.data.tours);\n    return response.data.tours;\n  }\n\n  public async createTour(\n    siteId: string,\n    req: CreateTourRequest,\n  ): Promise<Tour> {\n    const response = await this.axios.post<CreateTourResponse>(\n      `management/sites/${siteId}/tours`,\n      req,\n    );\n    const tour = response.data.tour;\n    const tours = this.tours$$.value;\n    this.tours$$.next(tours === undefined ? [tour] : tours.concat([tour]));\n    return tour;\n  }\n\n  public async updateTour(\n    siteId: string,\n    tourId: string,\n    req: CreateTourRequest,\n  ): Promise<Tour> {\n    const response = await this.axios.put<CreateTourResponse>(\n      `management/sites/${siteId}/tours/${tourId}`,\n      req,\n    );\n    const tour = response.data.tour;\n    const tours = this.tours$$.value;\n    this.tours$$.next(\n      tours === undefined\n        ? [tour]\n        : tours.map((t) => (t.id === tour.id ? tour : t)),\n    );\n    return tour;\n  }\n\n  private async loadSites(account: Account): Promise<Site[]> {\n    const response = await this.axios.get<{ sites: Site[] }>(\n      'management/sites',\n    );\n    const sites = response.data.sites;\n\n    if (sites.length === 0) {\n      const site = await this.createSite({ domain: account.email, id: '' });\n      sites.push(site);\n    }\n\n    this.sites$$.next(sites);\n    return sites;\n  }\n\n  private async createSite(req: CreateSiteRequest): Promise<Site> {\n    const response = await this.axios.post<{ site: Site }>(\n      'management/sites',\n      req,\n    );\n    return response.data.site;\n  }\n}\n","import {\n  Button,\n  ButtonProps,\n  ClickAwayListener,\n  MenuItem,\n  MenuList,\n  Paper,\n  Popper,\n} from '@material-ui/core';\nimport React from 'react';\n\nimport { Account } from '../../../api/src/domain/Account';\n\nexport type AccountDropdownButtonProps = {\n  account: Account;\n  buttonProps?: Omit<ButtonProps, 'children' | 'ref'>;\n  onSignOut: () => void;\n};\n\nexport const AccountDropdown: React.FC<AccountDropdownButtonProps> = ({\n  account,\n  buttonProps,\n  onSignOut,\n}) => {\n  const anchorEl = React.useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = React.useState(false);\n  return (\n    <>\n      <Button\n        color=\"inherit\"\n        {...buttonProps}\n        onClick={(ev) => {\n          setOpen(true);\n          buttonProps?.onClick?.(ev);\n        }}\n        ref={anchorEl}\n      >\n        {account.email}\n      </Button>\n      <Popper anchorEl={anchorEl.current} disablePortal open={open}>\n        <Paper>\n          <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <MenuList>\n              <MenuItem>\n                <Button onClick={() => onSignOut()}>Sign Out</Button>\n              </MenuItem>\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </>\n  );\n};\n","import { ButtonProps, Button as MuiButton } from '@material-ui/core';\nimport React from 'react';\n\nexport const Button: React.FC<ButtonProps> = ({\n  disabled = false,\n  key,\n  ...buttonProps\n}) => {\n  const k = React.useMemo(() => {\n    // Workaround: https://github.com/mui-org/material-ui/issues/26251\n    if (key === undefined && !disabled) {\n      return undefined;\n    } else if (key === undefined) {\n      return 'disabled';\n    } else if (!disabled) {\n      return key;\n    } else {\n      return `${key}-disabled`;\n    }\n  }, [disabled, key]);\n  return <MuiButton {...buttonProps} disabled={disabled} key={k} />;\n};\n","import * as yup from 'yup';\n\ntype ValidNonEmptyHtmlOpts = {\n  empty?: string;\n  invalid?: (err: Error | undefined) => string;\n};\n\nyup.addMethod(yup.string, 'validRegex', function () {\n  return this.test('test-valid-regex', function (value) {\n    if (value !== undefined) {\n      const { path, createError } = this;\n\n      try {\n        new RegExp(value);\n        return true;\n      } catch (err) {\n        return createError({ message: err.message, path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validCssSelector', function () {\n  return this.test('test-valid-css-selector', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        document.querySelector(value);\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid CSS selector', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(yup.string, 'validXpathSelector', function () {\n  return this.test('test-valid-xpath-selector', function (value) {\n    if (value !== undefined && value !== '') {\n      const { path, createError } = this;\n\n      try {\n        document.evaluate(\n          value,\n          document,\n          null,\n          XPathResult.FIRST_ORDERED_NODE_TYPE,\n          null,\n        );\n        return true;\n      } catch (err) {\n        return createError({ message: 'Invalid XPath selector', path });\n      }\n    } else {\n      return true;\n    }\n  });\n});\n\nyup.addMethod(\n  yup.string,\n  'validNonEmptyHtml',\n  function ({\n    empty = 'Please enter some text',\n    invalid = (err: Error | undefined) =>\n      `Invalid HTML${err !== undefined ? `: ${err.message}` : ''}`,\n  }: ValidNonEmptyHtmlOpts = {}) {\n    return this.test('test-valid-non-empty-html', function (value) {\n      const { path, createError } = this;\n      if (value !== undefined) {\n        try {\n          const parser = new DOMParser();\n          const text =\n            parser\n              .parseFromString(value, 'text/html')\n              ?.body.textContent?.trim() ?? '';\n          if (text !== '') {\n            return true;\n          } else {\n            return createError({ message: empty, path });\n          }\n        } catch (err) {\n          return createError({\n            message: invalid(err instanceof Error ? err : undefined),\n            path,\n          });\n        }\n      } else {\n        return createError({ message: empty, path });\n      }\n    });\n  },\n);\n\ndeclare module 'yup' {\n  interface StringSchema {\n    validCssSelector(): this;\n    validNonEmptyHtml(opts?: ValidNonEmptyHtmlOpts): this;\n    validRegex(): this;\n    validXpathSelector(): this;\n  }\n}\n\nexport default yup;\n","import {\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Drawer,\n  IconButton,\n  styled,\n  Typography,\n} from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport { CSSProperties } from '@material-ui/system';\nimport React, { ReactElement, ReactNode } from 'react';\n\nexport type DialogDrawerProps = {\n  actions: ReactElement;\n  children: ReactNode;\n  onClose?: () => void;\n  onExited?: () => void;\n  open: boolean;\n  title: ReactNode;\n  width?: CSSProperties['width'];\n};\n\nconst DDTitle = styled(DialogTitle)(({ theme }) => ({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: theme.spacing(4),\n}));\n\nconst DDContent = styled(DialogContent)({\n  padding: '3em',\n});\n\nconst DDActions = styled(DialogActions)(({ theme }) => ({\n  backgroundColor: theme.palette.grey['50'],\n  borderTop: `solid 1px`,\n  borderTopColor: theme.palette.grey['200'],\n  padding: theme.spacing(4),\n}));\n\nexport const DialogDrawer: React.FC<DialogDrawerProps> = ({\n  actions,\n  children,\n  onClose,\n  onExited,\n  open,\n  title,\n  width = '35rem',\n}) => {\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n      SlideProps={{ onExited }}\n    >\n      <DDTitle>\n        <Typography component=\"span\" variant=\"h5\" style={{ flexGrow: 1 }}>\n          {title}\n        </Typography>\n        {onClose !== undefined ? (\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : undefined}\n      </DDTitle>\n      <DDContent sx={{ width }}>{children}</DDContent>\n      <DDActions>{actions}</DDActions>\n    </Drawer>\n  );\n};\n","import { Box, BoxProps, styled } from '@material-ui/core';\nimport React, { ReactElement } from 'react';\n\nexport type FirstActionProps = BoxProps & {\n  actionsComponent?: ReactElement | ReactElement[];\n  illustrationComponent: ReactElement | ReactElement[];\n};\n\nconst Container = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  maxWidth: '35em',\n});\n\nconst Illustration = styled(Box)(({ fontSize, theme }) => ({\n  '& svg': {\n    height: theme.typography.h1.fontSize,\n    opacity: 0.3,\n    width: theme.typography.h1.fontSize,\n  },\n  marginRight: theme.spacing(2),\n}));\n\nconst ContentContainer = styled(Box)({\n  alignSelf: 'stretch',\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n});\n\nconst Content = styled(Box)(({ theme }) => ({\n  flexGrow: 1,\n  padding: `${theme.spacing(2)} 0`,\n}));\n\nconst Actions = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'flex-end',\n});\n\nexport const FirstAction: React.FC<FirstActionProps> = ({\n  actionsComponent,\n  children,\n  illustrationComponent,\n  ...boxProps\n}) => {\n  return (\n    <Container {...boxProps}>\n      <Illustration>{illustrationComponent}</Illustration>\n      <ContentContainer>\n        <Content>{children}</Content>\n        {actionsComponent !== undefined ? (\n          <Actions>{actionsComponent}</Actions>\n        ) : undefined}\n      </ContentContainer>\n    </Container>\n  );\n};\n","import { Box, BoxProps } from '@material-ui/core';\nimport React from 'react';\n\nexport type FlexProps = BoxProps & {\n  col?: boolean;\n};\n\nexport const Flex: React.FC<FlexProps> = ({\n  alignItems = 'center',\n  col = false,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      {...boxProps}\n      sx={{\n        ...boxProps.sx,\n        display: 'flex',\n        flexDirection: col ? 'column' : 'row',\n      }}\n    />\n  );\n};\n\nexport type FlexItemProps = BoxProps & {\n  grow?: boolean;\n};\n\nexport const FlexItem: React.FC<FlexItemProps> = ({\n  grow = false,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      {...boxProps}\n      sx={{\n        ...boxProps.sx,\n        flexGrow: grow ? 1 : undefined,\n      }}\n    />\n  );\n};\n","import { FormHelperText, styled } from '@material-ui/core';\nimport React from 'react';\nimport ReactQuill from 'react-quill';\n\nexport type QuillWrapperProps = {\n  errorText?: string;\n  onBlur: () => void;\n  onChange: (html: string) => void;\n  value: string;\n};\n\nconst Container = styled('div')(({ theme }) => ({\n  '& > .quill.error': {\n    border: `solid 1px ${theme.palette.error.main}`,\n  },\n}));\n\nexport const QuillWrapper: React.FC<QuillWrapperProps> = ({\n  errorText,\n  onBlur,\n  onChange,\n  value,\n}) => {\n  return (\n    <Container>\n      <ReactQuill\n        className={errorText !== undefined ? 'error' : undefined}\n        onBlur={onBlur}\n        onChange={onChange}\n        value={value}\n      />\n      {errorText !== undefined ? (\n        <FormHelperText error>{errorText}</FormHelperText>\n      ) : undefined}\n    </Container>\n  );\n};\n","/* eslint-disable no-console */\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  IconButton,\n  styled,\n  Switch,\n  ToggleButton,\n  ToggleButtonGroup,\n  useTheme,\n} from '@material-ui/core';\nimport { Box, Typography } from '@material-ui/core';\nimport {\n  Add,\n  ArrowDownward,\n  ArrowUpward,\n  Delete,\n  Error,\n  ExpandMore,\n  SpeakerNotes,\n} from '@material-ui/icons';\nimport {\n  Formik,\n  Field,\n  FieldArray,\n  Form,\n  FormikProps,\n  FormikErrors,\n  FieldArrayRenderProps,\n} from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport React from 'react';\nimport { SchemaOf } from 'yup';\n\nimport { Tour } from '../../../api/src/domain/Tour';\nimport { TourStatus } from '../../../api/src/domain/TourStatus';\nimport { TourStep } from '../../../api/src/domain/TourStep';\nimport { ManagementService } from '../services/ManagementService';\nimport yup from '../validation/yup';\nimport { Button } from './Button';\nimport { DialogDrawer } from './DialogDrawer';\nimport { FirstAction } from './FirstAction';\nimport { Flex, FlexItem } from './Flex';\nimport { QuillWrapper } from './QuillWrapper';\n\nexport type EditTourDrawerProps = {\n  managementService: ManagementService;\n  onClose?: () => void;\n  onExited?: () => void;\n  onSave?: (tour: Tour) => void;\n  open: boolean;\n  siteId: string;\n  tour?: Tour;\n};\n\nconst SelectorTypeContainer = styled(FlexItem)(({ theme }) => ({\n  margin: theme.spacing(0.5),\n}));\n\nconst StepAccordionSummary = styled(AccordionSummary)(({ theme }) => ({\n  '& > div.MuiAccordionSummary-content': {\n    marginRight: theme.spacing(2),\n    minWidth: 0,\n  },\n}));\n\nconst selectorSchema: SchemaOf<Required<TourStep['selector']>> = yup\n  .object()\n  .shape({\n    type: yup.mixed<'css' | 'xpath'>().oneOf(['css', 'xpath']).default('css'),\n    value: yup\n      .string()\n      .when('type', {\n        is: 'xpath',\n        otherwise: yup.string().validCssSelector(),\n        then: yup.string().validXpathSelector(),\n      })\n      .default(''),\n  });\n\nconst stepSchema: SchemaOf<Omit<TourStep, 'id' | 'buttons'>> = yup\n  .object()\n  .shape({\n    html: yup\n      .string()\n      .required('Message is required')\n      .validNonEmptyHtml({ empty: 'Message requires some text' }),\n    mask: yup.boolean().required(),\n    selector: selectorSchema.notRequired(),\n  });\n\nconst tourSchema: SchemaOf<\n  Omit<Tour, 'id' | 'steps'> & { steps: Omit<TourStep, 'id' | 'buttons'>[] }\n> = yup.object().shape({\n  match: yup.object().shape({\n    regex: yup\n      .string()\n      .required('URL match expression is required')\n      .validRegex(),\n  }),\n  name: yup.string().required('Name is required'),\n  status: yup\n    .mixed<'draft' | 'published'>()\n    .oneOf(['draft', 'published'])\n    .default('draft'),\n  steps: yup.array().of(stepSchema),\n});\n\nexport const EditTourDrawer: React.FC<EditTourDrawerProps> = ({\n  managementService,\n  onClose = () => undefined,\n  onExited = () => undefined,\n  onSave = () => undefined,\n  open,\n  siteId,\n  tour,\n}) => {\n  const theme = useTheme();\n  const formRef = React.useRef<FormikProps<Tour>>(null);\n  const [formTour, setFormTour] = React.useState(() => mkTourEdit(tour));\n\n  const [changeStatus, setChangeStatus] = React.useState<TourStatus>();\n  const [stepExpansionState, setStepExpansionState] = React.useState<\n    Record<number, boolean>\n  >({});\n\n  React.useEffect(() => {\n    setFormTour(mkTourEdit(tour));\n    setStepExpansionState({});\n  }, [tour]);\n\n  function handleCreateStep(\n    formik: FormikProps<Tour>,\n    fieldArray: FieldArrayRenderProps,\n  ) {\n    setStepExpansionState({\n      [formik.values.steps.length]: true,\n    });\n    fieldArray.push(mkTourEditStep());\n  }\n\n  function doSubmit(status?: TourStatus) {\n    setChangeStatus(status);\n    if (formRef.current !== null) {\n      void formRef.current.submitForm();\n    }\n  }\n\n  return (\n    <DialogDrawer\n      actions={\n        <>\n          <Button onClick={() => onClose()} size=\"large\">\n            Cancel\n          </Button>\n          <Button onClick={() => doSubmit('draft')} size=\"large\">\n            {formTour?.id === '' || formTour?.status === 'draft'\n              ? 'Save draft'\n              : 'Save and unpublish'}\n          </Button>\n          <Button\n            onClick={() => doSubmit('published')}\n            size=\"large\"\n            variant=\"contained\"\n          >\n            {formTour?.id === ''\n              ? 'Publish'\n              : formTour?.status === 'draft'\n              ? 'Save and publish'\n              : 'Save'}\n          </Button>\n        </>\n      }\n      onClose={onClose}\n      onExited={onExited}\n      open={open}\n      title={formTour?.id === '' ? 'Create tour' : 'Edit tour'}\n    >\n      <Formik\n        initialValues={formTour}\n        innerRef={formRef}\n        onSubmit={async (tour, actions) => {\n          actions.setSubmitting(true);\n\n          // Clean the tour. Namely, remove selector objects whose value are blank\n          const toSave: Tour = {\n            ...tour,\n            status: changeStatus ?? formTour?.status ?? tour.status,\n            steps: tour.steps.map((step) => ({\n              ...step,\n              selector:\n                step.selector !== undefined && step.selector.value.trim() === ''\n                  ? undefined\n                  : step.selector,\n            })),\n          };\n\n          const result = await (toSave.id === ''\n            ? managementService.createTour(siteId, toSave)\n            : managementService.updateTour(siteId, toSave.id, toSave));\n          actions.setSubmitting(false);\n          onSave(result);\n        }}\n        validateOnChange={false}\n        validationSchema={tourSchema}\n      >\n        {(formik) => (\n          <Form>\n            <Typography mb={0.75} component=\"h2\" variant=\"subtitle1\">\n              Profile\n            </Typography>\n            <Field\n              component={TextField}\n              fullWidth\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"New account orientation\"\n              size=\"medium\"\n              validate\n              variant=\"outlined\"\n            />\n            <Typography mb={0.75} mt={2.5} component=\"h2\" variant=\"subtitle1\">\n              Criteria\n            </Typography>\n            <Field\n              component={TextField}\n              fullWidth\n              helperText=\"Enter a valid regular expression\"\n              label=\"URL match expression\"\n              name=\"match.regex\"\n              placeholder=\"/dashboard/?\"\n              size=\"medium\"\n              validate\n              variant=\"outlined\"\n            />\n            <FieldArray name=\"steps\">\n              {(fieldArray) => (\n                <>\n                  <Typography\n                    mb={0.75}\n                    mt={2.5}\n                    component=\"h2\"\n                    variant=\"subtitle1\"\n                  >\n                    <Flex>\n                      <FlexItem grow>Steps</FlexItem>\n                      <FlexItem>\n                        <IconButton\n                          color=\"primary\"\n                          onClick={() => handleCreateStep(formik, fieldArray)}\n                        >\n                          <Add />\n                        </IconButton>\n                      </FlexItem>\n                    </Flex>\n                  </Typography>\n                  {formik.values.steps.length === 0 ? (\n                    <Flex justifyContent=\"center\" width=\"100%\">\n                      <FirstAction\n                        actionsComponent={\n                          <Button\n                            color=\"primary\"\n                            onClick={() => handleCreateStep(formik, fieldArray)}\n                            variant=\"contained\"\n                          >\n                            Create Step\n                          </Button>\n                        }\n                        illustrationComponent={\n                          <SpeakerNotes\n                            style={{\n                              height: theme.typography.h2.fontSize,\n                              width: theme.typography.h2.fontSize,\n                            }}\n                          />\n                        }\n                        mt={2}\n                        style={{ maxWidth: '30rem' }}\n                      >\n                        A tour step is one of several interactive message\n                        dialogs that are shown to your users in the context that\n                        you want them to show.\n                      </FirstAction>\n                    </Flex>\n                  ) : (\n                    <Box sx={{ width: '100%' }}>\n                      {formik.values.steps.map((step, i) => (\n                        <Accordion\n                          expanded={stepExpansionState[i] ?? false}\n                          key={i}\n                        >\n                          <StepAccordionSummary\n                            expandIcon={<ExpandMore />}\n                            onClick={() =>\n                              setStepExpansionState((ses) => ({ [i]: !ses[i] }))\n                            }\n                          >\n                            <FlexItem width=\"2rem\" mr={1}>\n                              <Typography variant=\"body1\" component=\"h3\">\n                                {i + 1}.\n                              </Typography>\n                            </FlexItem>\n                            <FlexItem\n                              flex=\"1\"\n                              minWidth=\"0\"\n                              overflow=\"hidden\"\n                              textOverflow=\"ellipsis\"\n                              whiteSpace=\"nowrap\"\n                            >\n                              <Typography\n                                variant=\"body2\"\n                                sx={{\n                                  display: 'inline',\n                                  opacity: 0.875,\n                                }}\n                              >\n                                {getTextFromHtml(step.html)}\n                              </Typography>\n                            </FlexItem>\n                            {hasInnerStepError(formik.errors, i) ? (\n                              <FlexItem\n                                color=\"error.main\"\n                                mr={1}\n                                sx={{ alignItems: 'center', display: 'flex' }}\n                              >\n                                <Error />\n                              </FlexItem>\n                            ) : undefined}\n                          </StepAccordionSummary>\n                          <AccordionDetails>\n                            <Flex justifyContent=\"flex-end\">\n                              <IconButton\n                                disabled={i === 0}\n                                onClick={() => {\n                                  setStepExpansionState((ses) => ({\n                                    ...ses,\n                                    [i - 1]: ses[i],\n                                    [i]: ses[i - 1],\n                                  }));\n                                  fieldArray.swap(i - 1, i);\n                                }}\n                                title=\"Move up\"\n                              >\n                                <ArrowUpward />\n                              </IconButton>\n                              <IconButton\n                                disabled={i === formik.values.steps.length - 1}\n                                onClick={() => {\n                                  setStepExpansionState((ses) => ({\n                                    ...ses,\n                                    [i + 1]: ses[i],\n                                    [i]: ses[i + 1],\n                                  }));\n                                  fieldArray.swap(i, i + 1);\n                                }}\n                                title=\"Move down\"\n                              >\n                                <ArrowDownward />\n                              </IconButton>\n                              <Box ml={2}>\n                                <Button\n                                  color=\"inherit\"\n                                  onClick={() => {\n                                    fieldArray.remove(i);\n                                    setStepExpansionState((ses) => ({\n                                      ...ses,\n                                      [i]: false,\n                                    }));\n                                  }}\n                                  startIcon={<Delete />}\n                                >\n                                  Delete\n                                </Button>\n                              </Box>\n                            </Flex>\n                            <Box my={2}>\n                              <QuillWrapper\n                                errorText={\n                                  formik.getFieldMeta(`steps[${i}].html`).error\n                                }\n                                onBlur={() => {\n                                  formik.setFieldTouched(\n                                    `steps[${i}].html`,\n                                    true,\n                                  );\n                                }}\n                                onChange={(html) => {\n                                  formik.setFieldValue(\n                                    `steps[${i}].html`,\n                                    html,\n                                  );\n                                }}\n                                value={formik.values.steps[i].html}\n                              />\n                            </Box>\n                            <Box my={2}>\n                              <FormControlLabel\n                                control={\n                                  <Switch\n                                    checked={formik.values.steps[i].mask}\n                                    onChange={() => {\n                                      formik.setFieldValue(\n                                        `steps[${i}].mask`,\n                                        !formik.values.steps[i].mask,\n                                      );\n                                    }}\n                                  />\n                                }\n                                label=\"Highlight the message\"\n                              />\n                            </Box>\n                            <Flex alignItems=\"flex-start\" my={2}>\n                              <FlexItem grow>\n                                <Field\n                                  component={TextField}\n                                  fullWidth\n                                  helperText=\"Use the CSS/XPath toggle to choose a selector format\"\n                                  label=\"Highlight element\"\n                                  name={`steps[${i}].selector.value`}\n                                  size=\"medium\"\n                                  variant=\"outlined\"\n                                />\n                              </FlexItem>\n                              <SelectorTypeContainer>\n                                <ToggleButtonGroup\n                                  onChange={() => {\n                                    // After the value change happens in the form, set the selector\n                                    // field as touched so it revalidates\n                                    setTimeout(() =>\n                                      formik.setFieldTouched(\n                                        `steps[${i}].selector.value`,\n                                        true,\n                                        true,\n                                      ),\n                                    );\n                                  }}\n                                  value={[\n                                    formik.values.steps[i].selector?.type ??\n                                      'css',\n                                  ]}\n                                >\n                                  <ToggleButton\n                                    onClick={() =>\n                                      formik.setFieldValue(\n                                        `steps[${i}].selector.type`,\n                                        'css',\n                                      )\n                                    }\n                                    value=\"css\"\n                                  >\n                                    CSS\n                                  </ToggleButton>\n                                  <ToggleButton\n                                    onClick={() =>\n                                      formik.setFieldValue(\n                                        `steps[${i}].selector.type`,\n                                        'xpath',\n                                      )\n                                    }\n                                    value=\"xpath\"\n                                  >\n                                    XPath\n                                  </ToggleButton>\n                                </ToggleButtonGroup>\n                              </SelectorTypeContainer>\n                            </Flex>\n                          </AccordionDetails>\n                        </Accordion>\n                      ))}\n                    </Box>\n                  )}\n                </>\n              )}\n            </FieldArray>\n          </Form>\n        )}\n      </Formik>\n    </DialogDrawer>\n  );\n};\n\nfunction hasInnerStepError(tour: FormikErrors<Tour>, stepIndex: number) {\n  if (tour.steps === undefined || typeof tour.steps === 'string') {\n    return false;\n  } else {\n    // If there is any prop with a value, then it's an error\n    const step = tour.steps[stepIndex];\n    return (\n      step !== undefined &&\n      Object.values(step).find((s) => s !== undefined) !== undefined\n    );\n  }\n}\n\nfunction getTextFromHtml(html: string): string {\n  try {\n    const text =\n      new DOMParser()\n        .parseFromString(html, 'text/html')\n        ?.body.textContent?.trim() ?? '';\n    return text === '' ? 'No content' : text;\n  } catch (err) {\n    return 'No content';\n  }\n}\n\nfunction mkTourEdit(tour?: Tour): Tour {\n  if (tour === undefined) {\n    return {\n      id: '',\n      match: {\n        regex: '',\n      },\n      name: '',\n      status: 'draft',\n      steps: [],\n    };\n  } else {\n    return {\n      ...tour,\n      steps: tour.steps.map(mkTourEditStep),\n    };\n  }\n}\n\nfunction mkTourEditStep(step?: TourStep): TourStep {\n  if (step === undefined) {\n    return {\n      html: '',\n      id: '',\n      mask: false,\n      selector: {\n        type: 'css',\n        value: '',\n      },\n    };\n  } else {\n    return step.selector !== undefined\n      ? step\n      : {\n          ...step,\n          selector: {\n            type: 'css',\n            value: '',\n          },\n        };\n  }\n}\n","import { Container, styled } from '@material-ui/core';\n\nexport const FeatureContainer = styled(Container)({\n  alignItems: 'center',\n  display: 'flex',\n  flexGrow: 1,\n  justifyContent: 'center',\n  width: '100%',\n});\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  styled,\n  Typography,\n} from '@material-ui/core';\nimport { Map } from '@material-ui/icons';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Tour } from '../../../api/src/domain/Tour';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { Button } from './Button';\nimport { EditTourDrawer } from './EditTourDrawer';\nimport { FeatureContainer } from './FeatureContainer';\nimport { FirstAction } from './FirstAction';\nimport { Flex } from './Flex';\n\nexport type SitesScreenProps = {\n  managementService: ManagementService;\n};\n\nconst TourCard = styled(Card)(({ theme }) => ({\n  '&.published:before': {\n    backgroundColor: theme.palette.success.main,\n    boxShadow: `0px 0px 5px 1px ${theme.palette.success.main}`,\n  },\n  '&:before': {\n    backgroundColor: theme.palette.grey['300'],\n    borderRadius: theme.spacing(1.5),\n    content: '\" \"',\n    height: theme.spacing(1.5),\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    width: theme.spacing(1.5),\n  },\n}));\n\nexport const SiteScreen: React.FC<SitesScreenProps> = ({\n  managementService,\n}) => {\n  const { siteId } = useParams<{ siteId: string }>();\n  const [tours] = useObservable(\n    () => managementService.tours$,\n    [managementService],\n  );\n\n  const [tourEditOpen, setTourEditOpen] = React.useState(false);\n  const [tourEdit, setTourEdit] = React.useState<Tour>();\n\n  React.useEffect(() => {\n    void managementService.loadTours(siteId);\n  }, [managementService, siteId]);\n\n  return (\n    <>\n      {(() => {\n        if (tours !== undefined && tours.length > 0) {\n          return (\n            <Box width=\"100%\">\n              <Typography component=\"h2\" my={3} variant=\"h2\">\n                Tours\n              </Typography>\n              <Box my={3}>\n                <Button\n                  color=\"primary\"\n                  onClick={() => {\n                    setTourEdit(undefined);\n                    setTourEditOpen(true);\n                  }}\n                  variant=\"contained\"\n                >\n                  Create tour\n                </Button>\n              </Box>\n              <Flex flexWrap=\"wrap\" m={-1}>\n                {tours.map((tour) => (\n                  <Box key={tour.id} m={1} width=\"23%\">\n                    <TourCard\n                      className={tour.status}\n                      onClick={() => {\n                        setTourEdit(tour);\n                        setTourEditOpen(true);\n                      }}\n                      sx={{ cursor: 'pointer', position: 'relative' }}\n                    >\n                      <CardHeader\n                        avatar={\n                          <Avatar sx={{ bgcolor: 'blue' }}>\n                            {tour.name\n                              .split(/\\s+/)\n                              .map((w) => w[0]?.toUpperCase())\n                              .join('')}\n                          </Avatar>\n                        }\n                        title={tour.name}\n                      />\n                    </TourCard>\n                  </Box>\n                ))}\n              </Flex>\n            </Box>\n          );\n        } else if (tours !== undefined) {\n          return (\n            <FeatureContainer>\n              <FirstAction\n                actionsComponent={\n                  <Button\n                    onClick={() => {\n                      setTourEdit(undefined);\n                      setTourEditOpen(true);\n                    }}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    Create tour\n                  </Button>\n                }\n                illustrationComponent={<Map />}\n              >\n                Create your first contextual, interactive experience for your\n                user that is tailored for your website or product.\n              </FirstAction>\n            </FeatureContainer>\n          );\n        }\n      })()}\n      <EditTourDrawer\n        managementService={managementService}\n        onClose={() => setTourEditOpen(false)}\n        onSave={() => setTourEditOpen(false)}\n        open={tourEditOpen}\n        siteId={siteId}\n        tour={tourEdit}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { ManagementService } from '../services/ManagementService';\nimport { SiteScreen } from './SiteScreen';\n\nexport type HomeScreenProps = {\n  managementService: ManagementService;\n};\n\nexport const HomeScreen: React.FC<HomeScreenProps> = ({\n  managementService,\n}) => {\n  return (\n    <Switch>\n      <Route exact path=\"/sites/:siteId\">\n        <SiteScreen managementService={managementService} />\n      </Route>\n    </Switch>\n  );\n};\n","import { Box, ButtonGroup, styled } from '@material-ui/core';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nimport { Account } from '../../../../api/src/domain/Account';\nimport { ManagementService } from '../../services/ManagementService';\nimport yup from '../../validation/yup';\nimport { Button } from '../Button';\n\nexport type CodeFormProps = {\n  account: Account | undefined;\n  managementService: ManagementService;\n  onCancel: () => void;\n  onSignIn?: (account: Account) => void;\n};\n\nconst codeSchema = yup.object().shape({\n  code: yup\n    .string()\n    .required('A 6-digit code is required')\n    .matches(/[0-9]{6}/, { message: 'A valid 6-digit code is required' }),\n});\n\nconst SignInButtonContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  textAlign: 'right',\n}));\n\nexport const CodeForm: React.FC<CodeFormProps> = ({\n  account,\n  managementService,\n  onCancel,\n  onSignIn = () => undefined,\n}) => {\n  return (\n    <Formik\n      initialValues={{ code: '' }}\n      onSubmit={async (values, actions) => {\n        if (account !== undefined) {\n          actions.setSubmitting(true);\n          const signInAccount = await managementService.login(\n            account.id,\n            values.code,\n          );\n          actions.setSubmitting(false);\n          onSignIn(signInAccount);\n        }\n      }}\n      validationSchema={codeSchema}\n    >\n      {(formik) => (\n        <Form>\n          <Field\n            component={TextField}\n            fullWidth\n            helperText=\"Check your email and copy your 6 digit sign-in code into this field.\"\n            label=\"Sign-in code\"\n            name=\"code\"\n          />\n          <SignInButtonContainer>\n            <ButtonGroup>\n              <Button onClick={onCancel} size=\"large\">\n                Cancel\n              </Button>\n              <Button\n                onClick={() => formik.submitForm()}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Sign In\n              </Button>\n            </ButtonGroup>\n          </SignInButtonContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { Box, ButtonGroup, styled } from '@material-ui/core';\nimport { ArrowForward } from '@material-ui/icons';\nimport { Field, Form, Formik } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nimport { Account } from '../../../../api/src/domain/Account';\nimport { ManagementService } from '../../services/ManagementService';\nimport yup from '../../validation/yup';\nimport { Button } from '../Button';\n\nexport type EmailFormProps = {\n  managementService: ManagementService;\n  onSignUp: (account: Account) => void;\n};\n\nconst signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .required('Email address is required')\n    .email('Invalid email address'),\n});\n\nconst SignInButtonContainer = styled(Box)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  textAlign: 'right',\n}));\n\nexport const EmailForm: React.FC<EmailFormProps> = ({\n  managementService,\n  onSignUp,\n}) => {\n  return (\n    <Formik\n      initialValues={{ email: '' }}\n      onSubmit={async (values, actions) => {\n        actions.setSubmitting(true);\n        const account = await managementService.signUp(values.email);\n        actions.setSubmitting(false);\n        onSignUp(account);\n      }}\n      validationSchema={signInSchema}\n    >\n      {(formik) => (\n        <Form>\n          <Field\n            component={TextField}\n            fullWidth\n            helperText=\"We'll send you a sign-in code to this email address.\"\n            label=\"Email address\"\n            name=\"email\"\n          />\n          <SignInButtonContainer>\n            <ButtonGroup>\n              <Button\n                endIcon={<ArrowForward />}\n                onClick={() => formik.submitForm()}\n                size=\"large\"\n                variant=\"contained\"\n              >\n                Next\n              </Button>\n            </ButtonGroup>\n          </SignInButtonContainer>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { Box, Slide } from '@material-ui/core';\nimport React from 'react';\n\nimport { Account } from '../../../api/src/domain/Account';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { FeatureContainer } from './FeatureContainer';\nimport { CodeForm } from './SignInScreen/CodeForm';\nimport { EmailForm } from './SignInScreen/EmailForm';\n\nexport type SignInScreenProps = {\n  managementService: ManagementService;\n  onSignIn: () => void;\n};\n\nexport const SignInScreen: React.FC<SignInScreenProps> = ({\n  managementService,\n  onSignIn,\n}) => {\n  const [emailEntered, setEmailEntered] = React.useState(false);\n  const [signUpAccount, setSignUpAccount] = React.useState<Account>();\n  const [sites] = useObservable(\n    () => managementService.sites$,\n    [managementService],\n  );\n\n  return (\n    <FeatureContainer>\n      <Slide\n        direction={emailEntered ? 'right' : 'left'}\n        in={signUpAccount === undefined}\n        onEntered={() => {\n          setEmailEntered(true);\n          focusInput();\n        }}\n        unmountOnExit\n      >\n        <Box position=\"absolute\" width={1 / 4}>\n          <EmailForm\n            managementService={managementService}\n            onSignUp={setSignUpAccount}\n          />\n        </Box>\n      </Slide>\n      <Slide\n        direction={sites === undefined ? 'left' : 'right'}\n        in={signUpAccount !== undefined && sites === undefined}\n        onEntered={() => focusInput()}\n        onExited={() => {\n          if (signUpAccount !== undefined && sites !== undefined) {\n            onSignIn();\n          }\n        }}\n        unmountOnExit\n      >\n        <Box position=\"absolute\" width={1 / 4}>\n          <CodeForm\n            account={signUpAccount}\n            managementService={managementService}\n            onCancel={() => setSignUpAccount(undefined)}\n          />\n        </Box>\n      </Slide>\n    </FeatureContainer>\n  );\n};\n\nfunction focusInput(selector = 'input[name]'): void {\n  document.querySelector<HTMLInputElement>(selector)?.focus?.();\n}\n","/* eslint-disable no-console */\nimport {\n  AppBar,\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  styled,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport React from 'react';\nimport { Link as RouterLink, Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Site } from '../../../api/src/domain/Site';\nimport { useObservable } from '../hooks/useObservable';\nimport { ManagementService } from '../services/ManagementService';\nimport { AccountDropdown } from './AccountDropdown';\nimport { HomeScreen } from './HomeScreen';\nimport { SignInScreen } from './SignInScreen';\n\nconst ContentRoot = styled(Container)({\n  alignItems: 'center',\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  width: '100%',\n});\n\nconst MenuContent = styled(Box)({\n  alignItems: 'center',\n  display: 'flex',\n  flexGrow: 1,\n  height: '100%',\n});\n\nconst MenuLogo = styled(BubbleChartIcon)(({ theme }) => ({\n  height: theme.typography.h5.fontSize,\n  marginRight: theme.spacing(1),\n  width: theme.typography.h5.fontSize,\n}));\n\nconst MenuTitle = styled(Typography)(({ theme }) => ({\n  marginRight: theme.spacing(4),\n}));\n\nconst Root = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  height: '100vh',\n});\n\nconst RootFullScreen = styled(Root)({\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: '100%',\n});\n\nconst managementService = new ManagementService();\n\nexport const AppRoot: React.FC = () => {\n  const [account] = useObservable(() => managementService.account$, []);\n  const [sites] = useObservable(() => managementService.sites$, []);\n  const [site, setSite] = React.useState<Site>();\n\n  const [waitingForSignIn, setWaitingForSignIn] = React.useState(false);\n  const signedIn = React.useMemo(() => {\n    if (\n      account !== null &&\n      account !== undefined &&\n      site !== undefined &&\n      !waitingForSignIn\n    ) {\n      return true;\n    } else if (account !== undefined) {\n      return false;\n    } else {\n      return undefined;\n    }\n  }, [account, site, waitingForSignIn]);\n\n  React.useEffect(() => {\n    void managementService.init();\n  }, []);\n\n  React.useEffect(() => {\n    if (account === null) {\n      setWaitingForSignIn(true);\n    }\n  }, [account]);\n\n  React.useEffect(() => {\n    if (sites !== undefined) {\n      setSite(sites[0]);\n    } else {\n      setSite(undefined);\n    }\n  }, [sites]);\n\n  return signedIn !== undefined ? (\n    <Root>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <MenuLogo />\n          <MenuTitle variant=\"h6\">Enactive Management</MenuTitle>\n          <MenuContent />\n          {(() => {\n            if (!signedIn) {\n              return (\n                <Button\n                  color=\"inherit\"\n                  component={RouterLink}\n                  sx={{ height: '100%' }}\n                  to=\"/signin\"\n                >\n                  Sign In\n                </Button>\n              );\n            } else if (account !== null && account !== undefined) {\n              return (\n                <AccountDropdown\n                  account={account}\n                  onSignOut={() => managementService.logout()}\n                />\n              );\n            }\n          })()}\n        </Toolbar>\n      </AppBar>\n      <ContentRoot>\n        <Switch>\n          <Route exact path=\"/signin\">\n            {!signedIn ? (\n              <SignInScreen\n                managementService={managementService}\n                onSignIn={() => setWaitingForSignIn(false)}\n              />\n            ) : (\n              <Redirect to=\"/\" />\n            )}\n          </Route>\n          <Route exact path=\"/\">\n            {!signedIn ? (\n              <Redirect to=\"/signin\" />\n            ) : (\n              <Redirect to={`/sites/${site?.id}`} />\n            )}\n          </Route>\n          <Route path=\"/\">\n            {signedIn ? (\n              <HomeScreen managementService={managementService} />\n            ) : (\n              <Redirect to=\"/signin\" />\n            )}\n          </Route>\n        </Switch>\n      </ContentRoot>\n    </Root>\n  ) : (\n    <RootFullScreen>\n      <CircularProgress />\n    </RootFullScreen>\n  );\n};\n","import { CssBaseline, StyledEngineProvider } from '@material-ui/core';\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport { AppRoot } from './components/AppRoot';\n\nconst App: React.FC = () => {\n  return (\n    <StyledEngineProvider injectFirst>\n      <HashRouter>\n        <CssBaseline>\n          <AppRoot />\n        </CssBaseline>\n      </HashRouter>\n    </StyledEngineProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'typeface-roboto';\nimport 'react-quill/dist/quill.snow.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}